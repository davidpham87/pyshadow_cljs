["^ ","~:output",["^ ","~:js","goog.provide('reagent.debug');\ngoog.require('cljs.core');\nreagent.debug.has_console = (typeof console !== 'undefined');\nreagent.debug.tracking = false;\nif((typeof reagent !== 'undefined') && (typeof reagent.debug !== 'undefined') && (typeof reagent.debug.warnings !== 'undefined')){\n} else {\nreagent.debug.warnings = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(null);\n}\nif((typeof reagent !== 'undefined') && (typeof reagent.debug !== 'undefined') && (typeof reagent.debug.track_console !== 'undefined')){\n} else {\nreagent.debug.track_console = (function (){var o = ({});\no.warn = ((function (o){\nreturn (function() { \nvar G__20689__delegate = function (args){\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(reagent.debug.warnings,cljs.core.update_in,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552)], null),cljs.core.conj,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str,args)], 0));\n};\nvar G__20689 = function (var_args){\nvar args = null;\nif (arguments.length > 0) {\nvar G__20690__i = 0, G__20690__a = new Array(arguments.length -  0);\nwhile (G__20690__i < G__20690__a.length) {G__20690__a[G__20690__i] = arguments[G__20690__i + 0]; ++G__20690__i;}\n  args = new cljs.core.IndexedSeq(G__20690__a,0,null);\n} \nreturn G__20689__delegate.call(this,args);};\nG__20689.cljs$lang$maxFixedArity = 0;\nG__20689.cljs$lang$applyTo = (function (arglist__20691){\nvar args = cljs.core.seq(arglist__20691);\nreturn G__20689__delegate(args);\n});\nG__20689.cljs$core$IFn$_invoke$arity$variadic = G__20689__delegate;\nreturn G__20689;\n})()\n;})(o))\n;\n\no.error = ((function (o){\nreturn (function() { \nvar G__20693__delegate = function (args){\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(reagent.debug.warnings,cljs.core.update_in,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"error\",\"error\",-978969032)], null),cljs.core.conj,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str,args)], 0));\n};\nvar G__20693 = function (var_args){\nvar args = null;\nif (arguments.length > 0) {\nvar G__20694__i = 0, G__20694__a = new Array(arguments.length -  0);\nwhile (G__20694__i < G__20694__a.length) {G__20694__a[G__20694__i] = arguments[G__20694__i + 0]; ++G__20694__i;}\n  args = new cljs.core.IndexedSeq(G__20694__a,0,null);\n} \nreturn G__20693__delegate.call(this,args);};\nG__20693.cljs$lang$maxFixedArity = 0;\nG__20693.cljs$lang$applyTo = (function (arglist__20695){\nvar args = cljs.core.seq(arglist__20695);\nreturn G__20693__delegate(args);\n});\nG__20693.cljs$core$IFn$_invoke$arity$variadic = G__20693__delegate;\nreturn G__20693;\n})()\n;})(o))\n;\n\nreturn o;\n})();\n}\nreagent.debug.track_warnings = (function reagent$debug$track_warnings(f){\nreagent.debug.tracking = true;\n\ncljs.core.reset_BANG_(reagent.debug.warnings,null);\n\n(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));\n\nvar warns = cljs.core.deref(reagent.debug.warnings);\ncljs.core.reset_BANG_(reagent.debug.warnings,null);\n\nreagent.debug.tracking = false;\n\nreturn warns;\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","reagent/debug.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",18],"~:ns-aliases",["^ ","~$react","~$module$node_modules$react$index","~$create-react-class","~$module$node_modules$create_react_class$index","~$react-dom","~$module$node_modules$react_dom$index"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:macros",["^ ","~$assert-js-object",["^ ","~:arglists",["~#list",[["~$value"]]],"^7",83,"^8",1,"^6","reagent/debug.clj","~:name","~$reagent.debug/assert-js-object","~:ns","~$reagent.debug","~:macro",true],"~$log",["^ ","^G",["^H",[["~$&","~$forms"]]],"~:doc","Print with console.log, if it exists.","^7",4,"^8",1,"^6","reagent/debug.clj","^J","~$reagent.debug/log","^L","^M","^N",true],"~$warn-unless",["^ ","^G",["^H",[["~$cond","~$&","^P"]]],"^7",19,"^8",1,"^6","reagent/debug.clj","^J","~$reagent.debug/warn-unless","^L","^M","^N",true],"~$assert-some",["^ ","^G",["^H",[["^I","~$tag"]]],"^7",75,"^8",1,"^6","reagent/debug.clj","^J","~$reagent.debug/assert-some","^L","^M","^N",true],"~$assert-new-state",["^ ","^G",["^H",[["^I"]]],"^7",88,"^8",1,"^6","reagent/debug.clj","^J","~$reagent.debug/assert-new-state","^L","^M","^N",true],"~$dbg",["^ ","^G",["^H",[["~$x"]]],"^Q","Useful debugging macro that prints the source and value of x,\nas well as package name and line number. Returns x.","^7",45,"^8",1,"^6","reagent/debug.clj","^J","~$reagent.debug/dbg","^L","^M","^N",true],"~$prn",["^ ","^G",["^H",[["~$&","^P"]]],"^Q","Like standard prn, but prints using console.log (so that we get\nnice clickable links to source in modern browsers).","^7",39,"^8",1,"^6","reagent/debug.clj","^J","~$reagent.debug/prn","^L","^M","^N",true],"~$warn",["^ ","^G",["^H",[["~$&","^P"]]],"^Q","Print with console.warn.","^7",10,"^8",1,"^6","reagent/debug.clj","^J","~$reagent.debug/warn","^L","^M","^N",true],"~$dev?",["^ ","^G",["^H",[[]]],"^Q","True if assertions are enabled.","^7",60,"^8",1,"^6","reagent/debug.clj","^J","~$reagent.debug/dev?","^L","^M","^N",true],"~$println",["^ ","^G",["^H",[["~$&","^P"]]],"^Q","Print string with console.log","^7",34,"^8",1,"^6","reagent/debug.clj","^J","~$reagent.debug/println","^L","^M","^N",true],"~$time",["^ ","^G",["^H",[["~$&","^P"]]],"^7",65,"^8",1,"^6","reagent/debug.clj","^J","~$reagent.debug/time","^L","^M","^N",true],"~$assert-component",["^ ","^G",["^H",[["^I"]]],"^7",78,"^8",1,"^6","reagent/debug.clj","^J","~$reagent.debug/assert-component","^L","^M","^N",true],"~$assert-callable",["^ ","^G",["^H",[["^I"]]],"^7",93,"^8",1,"^6","reagent/debug.clj","^J","~$reagent.debug/assert-callable","^L","^M","^N",true],"~$error",["^ ","^G",["^H",[["~$&","^P"]]],"^Q","Print with console.error.","^7",25,"^8",1,"^6","reagent/debug.clj","^J","~$reagent.debug/error","^L","^M","^N",true]],"^J","^M","~:op","^L","~:imports",null,"~:requires",["^ ","~$cljs.core","^1D","~$goog","^1E"],"~:seen",["^D",["~:require-macros"]],"~:uses",null,"^1G",["^ ","^M","^M","^1D","^1D"],"~:form",["^H",["~$ns","^M",["^H",["^1G",["^M"]]]]],"~:flags",["^ ","^1G",["^D",[]]],"~:js-deps",["^ "],"~:deps",["^1E","^1D"]],"^L","^M","~:resource-id",["~:shadow.build.classpath/resource","reagent/debug.cljs"],"~:compiled-at",1547237659554,"~:resource-name","reagent/debug.cljs","~:warnings",[],"~:source","(ns reagent.debug\n  (:require-macros [reagent.debug]))\n\n(def ^:const has-console (exists? js/console))\n\n(def ^boolean tracking false)\n\n(defonce warnings (atom nil))\n\n(defonce track-console\n  (let [o #js{}]\n    (set! (.-warn o)\n          (fn [& args]\n            (swap! warnings update-in [:warn] conj (apply str args))))\n    (set! (.-error o)\n          (fn [& args]\n            (swap! warnings update-in [:error] conj (apply str args))))\n    o))\n\n(defn track-warnings [f]\n  (set! tracking true)\n  (reset! warnings nil)\n  (f)\n  (let [warns @warnings]\n    (reset! warnings nil)\n    (set! tracking false)\n    warns))\n","~:reader-features",["^D",["~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings",";;AAGA,AAAaA,AAAY,AAAAC;AAEzB,AAAA,AAAcC;AAEd,AAAA,AAAAC,AAAAC,AAAAC;AAAA;AAAA,AAAA,AAASC,AAAS,AAAA,AAACC;;AAEnB,AAAA,AAAAJ,AAAAC,AAAAI;AAAA;AAAA,AAAA,AAASC,AACP,AAAA,AAAM;AAAN,AACE,AAAM,AAAQC,AACR;;AAAO;AAAP,AACE,AAAA,AAAA,AAACC,AAAML,AAASM,AAAkBC,AAAK,AAACC,AAAMC,AAAIC;;;AAD7C;;;;AAAA;;AAAA;;;AAAA;AAAA;;;;;;;;AAEb,AAAM,AAASN,AACT;;AAAO;AAAP,AACE,AAAA,AAAA,AAACC,AAAML,AAASM,AAAmBC,AAAK,AAACC,AAAMC,AAAIC;;;AAD9C;;;;AAAA;;AAAA;;;AAAA;AAAA;;;;;;;;AAEbN;;;AAEJ,AAAA,AAAMO,AAAgB;AAAtB,AACE,AAAA,AAAMf;;AACN,AAAA,AAACgB,AAAOZ;;AACR,AAACa,AAAAA,AAAAA;;AACD,AAAA,AAAAC,AAAM,AAAOd;AAAb,AACE,AAAA,AAACY,AAAOZ;;AACR,AAAA,AAAMJ;;AACNmB","names",["reagent.debug/has-console","js/console","reagent.debug/tracking","js/reagent","js/reagent.debug","js/reagent.debug.warnings","reagent.debug/warnings","cljs.core.atom.cljs$core$IFn$_invoke$arity$1","js/reagent.debug.track-console","reagent.debug/track-console","o","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic","cljs.core/update-in","cljs.core/conj","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/str","args","reagent.debug/track-warnings","cljs.core/reset!","f","cljs.core/deref","warns"]]],"~:cache-keys",["~#cmap",[["^N","^1D"],[1547237500000],["^1O","goog/math/math.js"],[1547237499888,"^1E","~$goog.array","~$goog.asserts"],["^N","^M"],[1547237504000],["^1O","goog/array/array.js"],[1547237499888,"^1E","^21"],["^1O","goog/debug/error.js"],[1547237499888,"^1E"],["^1O","goog/dom/nodetype.js"],[1547237499888,"^1E"],["^1O","goog/object/object.js"],[1547237499888,"^1E"],"~:SHADOW-TIMESTAMP",[1547237503000,1547237500000],["^1O","goog/math/long.js"],[1547237499888,"^1E","^21","~$goog.reflect"],["^1O","goog/functions/functions.js"],[1547237499888,"^1E"],["^1O","goog/structs/map.js"],[1547237499888,"^1E","~$goog.iter.Iterator","~$goog.iter.StopIteration","~$goog.object"],["^1O","goog/asserts/asserts.js"],[1547237499888,"^1E","~$goog.debug.Error","~$goog.dom.NodeType","~$goog.string"],["^1O","goog/uri/uri.js"],[1547237499888,"^1E","^20","^21","^29","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"],["^1O","goog/base.js"],[1547237499888],["^1O","goog/structs/structs.js"],[1547237499888,"^1E","^20","^26"],["^1O","goog/string/string.js"],[1547237499888,"^1E"],["^1O","goog/reflect/reflect.js"],[1547237499888,"^1E"],["^1O","goog/string/stringbuffer.js"],[1547237499888,"^1E"],["^1O","goog/iter/iter.js"],[1547237499888,"^1E","^20","^21","~$goog.functions","~$goog.math"],["^1O","cljs/core.cljs"],[1547237500020,"~$goog.math.Long","~$goog.math.Integer","^29","^26","^20","~$goog.Uri","~$goog.string.StringBuffer"],["^1O","reagent/debug.cljs"],[1547237504940,"^1E","^1D"],["^1O","goog/math/integer.js"],[1547237499888,"^1E"],["^1O","goog/uri/utils.js"],[1547237499888,"^1E","^20","^21","^29"]]],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","reagent/debug.cljs","^7",1,"^8",5,"^9",1,"^:",18],"^;",["^ ","^<","^=","^>","^?","^@","^A"],"^B",null,"^C",["^D",[]],"^E",["^ ","^F",["^ ","^G",["^H",[["^I"]]],"^7",83,"^8",1,"^6","reagent/debug.clj","^J","^K","^L","^M","^N",true],"^O",["^ ","^G",["^H",[["~$&","^P"]]],"^Q","Print with console.log, if it exists.","^7",4,"^8",1,"^6","reagent/debug.clj","^J","^R","^L","^M","^N",true],"^S",["^ ","^G",["^H",[["^T","~$&","^P"]]],"^7",19,"^8",1,"^6","reagent/debug.clj","^J","^U","^L","^M","^N",true],"^V",["^ ","^G",["^H",[["^I","^W"]]],"^7",75,"^8",1,"^6","reagent/debug.clj","^J","^X","^L","^M","^N",true],"^Y",["^ ","^G",["^H",[["^I"]]],"^7",88,"^8",1,"^6","reagent/debug.clj","^J","^Z","^L","^M","^N",true],"^[",["^ ","^G",["^H",[["~$x"]]],"^Q","Useful debugging macro that prints the source and value of x,\nas well as package name and line number. Returns x.","^7",45,"^8",1,"^6","reagent/debug.clj","^J","^10","^L","^M","^N",true],"^11",["^ ","^G",["^H",[["~$&","^P"]]],"^Q","Like standard prn, but prints using console.log (so that we get\nnice clickable links to source in modern browsers).","^7",39,"^8",1,"^6","reagent/debug.clj","^J","^12","^L","^M","^N",true],"^13",["^ ","^G",["^H",[["~$&","^P"]]],"^Q","Print with console.warn.","^7",10,"^8",1,"^6","reagent/debug.clj","^J","^14","^L","^M","^N",true],"^15",["^ ","^G",["^H",[[]]],"^Q","True if assertions are enabled.","^7",60,"^8",1,"^6","reagent/debug.clj","^J","^16","^L","^M","^N",true],"^17",["^ ","^G",["^H",[["~$&","^P"]]],"^Q","Print string with console.log","^7",34,"^8",1,"^6","reagent/debug.clj","^J","^18","^L","^M","^N",true],"^19",["^ ","^G",["^H",[["~$&","^P"]]],"^7",65,"^8",1,"^6","reagent/debug.clj","^J","^1:","^L","^M","^N",true],"^1;",["^ ","^G",["^H",[["^I"]]],"^7",78,"^8",1,"^6","reagent/debug.clj","^J","^1<","^L","^M","^N",true],"^1=",["^ ","^G",["^H",[["^I"]]],"^7",93,"^8",1,"^6","reagent/debug.clj","^J","^1>","^L","^M","^N",true],"^1?",["^ ","^G",["^H",[["~$&","^P"]]],"^Q","Print with console.error.","^7",25,"^8",1,"^6","reagent/debug.clj","^J","^1@","^L","^M","^N",true]],"^J","^M","^1B",null,"^1C",["^ ","^1D","^1D","^1E","^1E"],"^1F",["^D",["^1G"]],"^1H",null,"~:defs",["^ ","~$has-console",["^ ","^J","~$reagent.debug/has-console","^6","reagent/debug.cljs","^7",4,"^8",1,"^9",4,"^:",25,"~:const",true,"^5",["^ ","^6","reagent/debug.cljs","^7",4,"^8",14,"^9",4,"^:",25,"^2I",true],"~:tag","~$boolean"],"~$tracking",["^ ","^J","~$reagent.debug/tracking","^6","reagent/debug.cljs","^7",6,"^8",1,"^9",6,"^:",23,"^2J","^2K","^5",["^ ","^6","reagent/debug.cljs","^7",6,"^8",15,"^9",6,"^:",23,"^2J","^2K"]],"~$warnings",["^ ","^J","~$reagent.debug/warnings","^6","reagent/debug.cljs","^7",8,"^8",1,"^9",8,"^:",18,"^5",["^ ","^6","reagent/debug.cljs","^7",8,"^8",10,"^9",8,"^:",18],"^2J","~$any"],"~$track-console",["^ ","^J","~$reagent.debug/track-console","^6","reagent/debug.cljs","^7",10,"^8",1,"^9",10,"^:",23,"^5",["^ ","^6","reagent/debug.cljs","^7",10,"^8",10,"^9",10,"^:",23],"^2J","~$object"],"~$track-warnings",["^ ","~:protocol-inline",null,"^5",["^ ","^6","reagent/debug.cljs","^7",20,"^8",7,"^9",20,"^:",21,"^G",["^H",["~$quote",["^H",[["~$f"]]]]]],"^J","~$reagent.debug/track-warnings","^6","reagent/debug.cljs","^:",21,"~:method-params",["^H",[["~$f"]]],"~:protocol-impl",null,"~:arglists-meta",["^H",[null,null]],"^8",1,"~:variadic?",false,"^7",20,"~:ret-tag","^2P","^9",20,"~:max-fixed-arity",1,"~:fn-var",true,"^G",["^H",["^2V",["^H",[["~$f"]]]]]]],"^1G",["^ ","^M","^M","^1D","^1D"],"~:cljs.analyzer/constants",["^ ","^1F",["^D",["~:warn","~:error"]],"~:order",["^34","^35"]],"^1K",["^ ","^1G",["^D",[]]],"^1L",["^ "],"^1M",["^1E","^1D"]],"^L","^M","~:ns-specs",["^ "],"~:ns-speced-vars",[],"~:compiler-options",["^1[",[["^39","~:static-fns"],true,["^39","~:elide-asserts"],false,["^39","~:optimize-constants"],null,["^39","~:external-config"],null,["^39","~:tooling-config"],null,["^39","~:emit-constants"],null,["^39","~:infer-externs"],true,["^39","^1T"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^39","~:fn-invoke-direct"],null,["^39","~:source-map"],"/dev/null"]]]