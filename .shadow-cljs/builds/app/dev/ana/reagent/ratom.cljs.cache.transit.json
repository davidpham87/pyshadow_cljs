["^ ","~:output",["^ ","~:js","goog.provide('reagent.ratom');\ngoog.require('cljs.core');\ngoog.require('reagent.impl.util');\ngoog.require('reagent.debug');\ngoog.require('reagent.impl.batching');\ngoog.require('clojure.set');\nif((typeof reagent !== 'undefined') && (typeof reagent.ratom !== 'undefined') && (typeof reagent.ratom.debug !== 'undefined')){\n} else {\nreagent.ratom.debug = false;\n}\nif((typeof reagent !== 'undefined') && (typeof reagent.ratom !== 'undefined') && (typeof reagent.ratom.generation !== 'undefined')){\n} else {\nreagent.ratom.generation = (0);\n}\nif((typeof reagent !== 'undefined') && (typeof reagent.ratom !== 'undefined') && (typeof reagent.ratom._running !== 'undefined')){\n} else {\nreagent.ratom._running = cljs.core.atom.cljs$core$IFn$_invoke$arity$1((0));\n}\nreagent.ratom.reactive_QMARK_ = (function reagent$ratom$reactive_QMARK_(){\nreturn (!((reagent.ratom._STAR_ratom_context_STAR_ == null)));\n});\nreagent.ratom.running = (function reagent$ratom$running(){\nreturn cljs.core.deref(reagent.ratom._running);\n});\nreagent.ratom.arr_len = (function reagent$ratom$arr_len(x){\nif((x == null)){\nreturn (0);\n} else {\nreturn x.length;\n}\n});\nreagent.ratom.arr_eq = (function reagent$ratom$arr_eq(x,y){\nvar len = reagent.ratom.arr_len(x);\nvar and__4036__auto__ = (len === reagent.ratom.arr_len(y));\nif(and__4036__auto__){\nvar i = (0);\nwhile(true){\nvar or__4047__auto__ = (i === len);\nif(or__4047__auto__){\nreturn or__4047__auto__;\n} else {\nif(((x[i]) === (y[i]))){\nvar G__21026 = (i + (1));\ni = G__21026;\ncontinue;\n} else {\nreturn false;\n}\n}\nbreak;\n}\n} else {\nreturn and__4036__auto__;\n}\n});\nreagent.ratom.in_context = (function reagent$ratom$in_context(obj,f){\nvar _STAR_ratom_context_STAR__orig_val__20778 = reagent.ratom._STAR_ratom_context_STAR_;\nvar _STAR_ratom_context_STAR__temp_val__20779 = obj;\nreagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__temp_val__20779;\n\ntry{return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));\n}finally {reagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__orig_val__20778;\n}});\nreagent.ratom.deref_capture = (function reagent$ratom$deref_capture(f,r){\nr.captured = null;\n\nr.ratomGeneration = reagent.ratom.generation = (reagent.ratom.generation + (1));\n\n\nvar res = reagent.ratom.in_context(r,f);\nvar c = r.captured;\nr.dirty_QMARK_ = false;\n\nif(reagent.ratom.arr_eq(c,r.watching)){\n} else {\nr._update_watching(c);\n}\n\nreturn res;\n});\nreagent.ratom.notify_deref_watcher_BANG_ = (function reagent$ratom$notify_deref_watcher_BANG_(derefed){\nvar temp__5461__auto__ = reagent.ratom._STAR_ratom_context_STAR_;\nif((temp__5461__auto__ == null)){\nreturn null;\n} else {\nvar r = temp__5461__auto__;\nvar c = r.captured;\nif((c == null)){\nreturn r.captured = [derefed];\n} else {\nreturn c.push(derefed);\n}\n}\n});\nreagent.ratom.check_watches = (function reagent$ratom$check_watches(old,new$){\nif(reagent.ratom.debug){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(reagent.ratom._running,cljs.core._PLUS_,(cljs.core.count(new$) - cljs.core.count(old)));\n} else {\n}\n\nreturn new$;\n});\nreagent.ratom.add_w = (function reagent$ratom$add_w(this$,key,f){\nvar w = this$.watches;\nthis$.watches = reagent.ratom.check_watches(w,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(w,key,f));\n\nreturn this$.watchesArr = null;\n});\nreagent.ratom.remove_w = (function reagent$ratom$remove_w(this$,key){\nvar w = this$.watches;\nthis$.watches = reagent.ratom.check_watches(w,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(w,key));\n\nreturn this$.watchesArr = null;\n});\nreagent.ratom.notify_w = (function reagent$ratom$notify_w(this$,old,new$){\nvar w = this$.watchesArr;\nvar a = (((w == null))?this$.watchesArr = cljs.core.reduce_kv(((function (w){\nreturn (function (p1__20789_SHARP_,p2__20790_SHARP_,p3__20791_SHARP_){\nvar G__20795 = p1__20789_SHARP_;\nG__20795.push(p2__20790_SHARP_);\n\nG__20795.push(p3__20791_SHARP_);\n\nreturn G__20795;\n});})(w))\n,[],this$.watches):w);\nvar len = a.length;\nvar i = (0);\nwhile(true){\nif((i < len)){\nvar k_21027 = (a[i]);\nvar f_21028 = (a[(i + (1))]);\n(f_21028.cljs$core$IFn$_invoke$arity$4 ? f_21028.cljs$core$IFn$_invoke$arity$4(k_21027,this$,old,new$) : f_21028.call(null,k_21027,this$,old,new$));\n\nvar G__21029 = ((2) + i);\ni = G__21029;\ncontinue;\n} else {\nreturn null;\n}\nbreak;\n}\n});\nreagent.ratom.pr_atom = (function reagent$ratom$pr_atom(a,writer,opts,s){\ncljs.core._write(writer,[\"#<\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(s),\" \"].join(''));\n\ncljs.core.pr_writer((function (){var _STAR_ratom_context_STAR__orig_val__20799 = reagent.ratom._STAR_ratom_context_STAR_;\nvar _STAR_ratom_context_STAR__temp_val__20800 = null;\nreagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__temp_val__20800;\n\ntry{return cljs.core._deref(a);\n}finally {reagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__orig_val__20799;\n}})(),writer,opts);\n\nreturn cljs.core._write(writer,\">\");\n});\nif((typeof reagent !== 'undefined') && (typeof reagent.ratom !== 'undefined') && (typeof reagent.ratom.rea_queue !== 'undefined')){\n} else {\nreagent.ratom.rea_queue = null;\n}\nreagent.ratom.rea_enqueue = (function reagent$ratom$rea_enqueue(r){\nif((reagent.ratom.rea_queue == null)){\nreagent.ratom.rea_queue = [];\n\nreagent.impl.batching.schedule();\n} else {\n}\n\nreturn reagent.ratom.rea_queue.push(r);\n});\nreagent.ratom.flush_BANG_ = (function reagent$ratom$flush_BANG_(){\nwhile(true){\nvar q = reagent.ratom.rea_queue;\nif((q == null)){\nreturn null;\n} else {\nreagent.ratom.rea_queue = null;\n\nvar n__4518__auto___21030 = q.length;\nvar i_21031 = (0);\nwhile(true){\nif((i_21031 < n__4518__auto___21030)){\n(q[i_21031])._queued_run();\n\nvar G__21032 = (i_21031 + (1));\ni_21031 = G__21032;\ncontinue;\n} else {\n}\nbreak;\n}\n\ncontinue;\n}\nbreak;\n}\n});\nreagent.impl.batching.ratom_flush = reagent.ratom.flush_BANG_;\n\n/**\n * @interface\n */\nreagent.ratom.IReactiveAtom = function(){};\n\n\n/**\n* @constructor\n * @implements {cljs.core.IWatchable}\n * @implements {cljs.core.IAtom}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.IReset}\n * @implements {cljs.core.ISwap}\n * @implements {reagent.ratom.IReactiveAtom}\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.IDeref}\n * @implements {cljs.core.IPrintWithWriter}\n * @implements {cljs.core.IWithMeta}\n*/\nreagent.ratom.RAtom = (function (state,meta,validator,watches){\nthis.state = state;\nthis.meta = meta;\nthis.validator = validator;\nthis.watches = watches;\nthis.cljs$lang$protocol_mask$partition0$ = 2154201088;\nthis.cljs$lang$protocol_mask$partition1$ = 114690;\n});\nreagent.ratom.RAtom.prototype.reagent$ratom$IReactiveAtom$ = cljs.core.PROTOCOL_SENTINEL;\n\nreagent.ratom.RAtom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,w,opts){\nvar self__ = this;\nvar a__$1 = this;\nreturn reagent.ratom.pr_atom(a__$1,w,opts,\"Atom:\");\n});\n\nreagent.ratom.RAtom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){\nvar self__ = this;\nvar ___$1 = this;\nreturn self__.meta;\n});\n\nreagent.ratom.RAtom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nreturn goog.getUid(this$__$1);\n});\n\nreagent.ratom.RAtom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){\nvar self__ = this;\nvar o__$1 = this;\nreturn (o__$1 === other);\n});\n\nreagent.ratom.RAtom.prototype.cljs$core$IReset$_reset_BANG_$arity$2 = (function (a,new_value){\nvar self__ = this;\nvar a__$1 = this;\nif((self__.validator == null)){\n} else {\nif(cljs.core.truth_((self__.validator.cljs$core$IFn$_invoke$arity$1 ? self__.validator.cljs$core$IFn$_invoke$arity$1(new_value) : self__.validator.call(null,new_value)))){\n} else {\nthrow (new Error([\"Assert failed: \",\"Validator rejected reference state\",\"\\n\",\"(validator new-value)\"].join('')));\n}\n}\n\nvar old_value = self__.state;\nself__.state = new_value;\n\nif((self__.watches == null)){\n} else {\nreagent.ratom.notify_w(a__$1,old_value,new_value);\n}\n\nreturn new_value;\n});\n\nreagent.ratom.RAtom.prototype.cljs$core$ISwap$_swap_BANG_$arity$2 = (function (a,f){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(self__.state) : f.call(null,self__.state)));\n});\n\nreagent.ratom.RAtom.prototype.cljs$core$ISwap$_swap_BANG_$arity$3 = (function (a,f,x){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(self__.state,x) : f.call(null,self__.state,x)));\n});\n\nreagent.ratom.RAtom.prototype.cljs$core$ISwap$_swap_BANG_$arity$4 = (function (a,f,x,y){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(self__.state,x,y) : f.call(null,self__.state,x,y)));\n});\n\nreagent.ratom.RAtom.prototype.cljs$core$ISwap$_swap_BANG_$arity$5 = (function (a,f,x,y,more){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,self__.state,x,y,more));\n});\n\nreagent.ratom.RAtom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,old,new$){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.notify_w(this$__$1,old,new$);\n});\n\nreagent.ratom.RAtom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.add_w(this$__$1,key,f);\n});\n\nreagent.ratom.RAtom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.remove_w(this$__$1,key);\n});\n\nreagent.ratom.RAtom.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){\nvar self__ = this;\nvar ___$1 = this;\nreturn (new reagent.ratom.RAtom(self__.state,new_meta,self__.validator,self__.watches));\n});\n\nreagent.ratom.RAtom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nreagent.ratom.notify_deref_watcher_BANG_(this$__$1);\n\nreturn self__.state;\n});\n\nreagent.ratom.RAtom.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,\"state\",\"state\",-348086572,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),new cljs.core.Symbol(null,\"meta\",\"meta\",-1154898805,null),new cljs.core.Symbol(null,\"validator\",\"validator\",-325659154,null),cljs.core.with_meta(new cljs.core.Symbol(null,\"watches\",\"watches\",1367433992,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null))], null);\n});\n\nreagent.ratom.RAtom.cljs$lang$type = true;\n\nreagent.ratom.RAtom.cljs$lang$ctorStr = \"reagent.ratom/RAtom\";\n\nreagent.ratom.RAtom.cljs$lang$ctorPrWriter = (function (this__4290__auto__,writer__4291__auto__,opt__4292__auto__){\nreturn cljs.core._write(writer__4291__auto__,\"reagent.ratom/RAtom\");\n});\n\n/**\n * Positional factory function for reagent.ratom/RAtom.\n */\nreagent.ratom.__GT_RAtom = (function reagent$ratom$__GT_RAtom(state,meta,validator,watches){\nreturn (new reagent.ratom.RAtom(state,meta,validator,watches));\n});\n\n/**\n * Like clojure.core/atom, except that it keeps track of derefs.\n */\nreagent.ratom.atom = (function reagent$ratom$atom(var_args){\nvar G__20817 = arguments.length;\nswitch (G__20817) {\ncase 1:\nreturn reagent.ratom.atom.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ndefault:\nvar args_arr__4662__auto__ = [];\nvar len__4641__auto___21034 = arguments.length;\nvar i__4642__auto___21035 = (0);\nwhile(true){\nif((i__4642__auto___21035 < len__4641__auto___21034)){\nargs_arr__4662__auto__.push((arguments[i__4642__auto___21035]));\n\nvar G__21036 = (i__4642__auto___21035 + (1));\ni__4642__auto___21035 = G__21036;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4663__auto__ = (new cljs.core.IndexedSeq(args_arr__4662__auto__.slice((1)),(0),null));\nreturn reagent.ratom.atom.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4663__auto__);\n\n}\n});\n\nreagent.ratom.atom.cljs$core$IFn$_invoke$arity$1 = (function (x){\nreturn reagent.ratom.__GT_RAtom(x,null,null,null);\n});\n\nreagent.ratom.atom.cljs$core$IFn$_invoke$arity$variadic = (function (x,p__20818){\nvar map__20819 = p__20818;\nvar map__20819__$1 = (((((!((map__20819 == null))))?(((((map__20819.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__20819.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__20819):map__20819);\nvar meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__20819__$1,new cljs.core.Keyword(null,\"meta\",\"meta\",1499536964));\nvar validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__20819__$1,new cljs.core.Keyword(null,\"validator\",\"validator\",-1966190681));\nreturn reagent.ratom.__GT_RAtom(x,meta,validator,null);\n});\n\n/** @this {Function} */\nreagent.ratom.atom.cljs$lang$applyTo = (function (seq20814){\nvar G__20815 = cljs.core.first(seq20814);\nvar seq20814__$1 = cljs.core.next(seq20814);\nvar self__4628__auto__ = this;\nreturn self__4628__auto__.cljs$core$IFn$_invoke$arity$variadic(G__20815,seq20814__$1);\n});\n\nreagent.ratom.atom.cljs$lang$maxFixedArity = (1);\n\nreagent.ratom.cache_key = \"reagReactionCache\";\nreagent.ratom.cached_reaction = (function reagent$ratom$cached_reaction(f,o,k,obj,destroy){\nvar m = (o[\"reagReactionCache\"]);\nvar m__$1 = (((m == null))?cljs.core.PersistentArrayMap.EMPTY:m);\nvar r = (m__$1.cljs$core$IFn$_invoke$arity$2 ? m__$1.cljs$core$IFn$_invoke$arity$2(k,null) : m__$1.call(null,k,null));\nif((!((r == null)))){\nreturn cljs.core._deref(r);\n} else {\nif((reagent.ratom._STAR_ratom_context_STAR_ == null)){\nreturn (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));\n} else {\nvar r__$1 = (function (){var G__20821 = f;\nvar G__20822 = new cljs.core.Keyword(null,\"on-dispose\",\"on-dispose\",2105306360);\nvar G__20823 = ((function (G__20821,G__20822,m,m__$1,r){\nreturn (function (x){\nif(reagent.ratom.debug){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(reagent.ratom._running,cljs.core.dec);\n} else {\n}\n\nvar __21040 = (o[\"reagReactionCache\"]);\nvar __21041__$1 = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(__21040,k);\n(o[\"reagReactionCache\"] = __21041__$1);\n\nif((!((obj == null)))){\nobj.reaction = null;\n} else {\n}\n\nif((!((destroy == null)))){\nreturn (destroy.cljs$core$IFn$_invoke$arity$1 ? destroy.cljs$core$IFn$_invoke$arity$1(x) : destroy.call(null,x));\n} else {\nreturn null;\n}\n});})(G__20821,G__20822,m,m__$1,r))\n;\nreturn (reagent.ratom.make_reaction.cljs$core$IFn$_invoke$arity$3 ? reagent.ratom.make_reaction.cljs$core$IFn$_invoke$arity$3(G__20821,G__20822,G__20823) : reagent.ratom.make_reaction.call(null,G__20821,G__20822,G__20823));\n})();\nvar v = cljs.core._deref(r__$1);\n(o[\"reagReactionCache\"] = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m__$1,k,r__$1));\n\nif(reagent.ratom.debug){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(reagent.ratom._running,cljs.core.inc);\n} else {\n}\n\nif((!((obj == null)))){\nobj.reaction = r__$1;\n} else {\n}\n\nreturn v;\n\n}\n}\n});\n\n/**\n* @constructor\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {reagent.ratom.IReactiveAtom}\n * @implements {cljs.core.IDeref}\n * @implements {cljs.core.IPrintWithWriter}\n*/\nreagent.ratom.Track = (function (f,args,reaction){\nthis.f = f;\nthis.args = args;\nthis.reaction = reaction;\nthis.cljs$lang$protocol_mask$partition0$ = 2153807872;\nthis.cljs$lang$protocol_mask$partition1$ = 0;\n});\nreagent.ratom.Track.prototype.reagent$ratom$IReactiveAtom$ = cljs.core.PROTOCOL_SENTINEL;\n\nreagent.ratom.Track.prototype.cljs$core$IDeref$_deref$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nvar temp__5459__auto__ = self__.reaction;\nif((temp__5459__auto__ == null)){\nreturn reagent.ratom.cached_reaction(((function (temp__5459__auto__,this$__$1){\nreturn (function (){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.f,self__.args);\n});})(temp__5459__auto__,this$__$1))\n,self__.f,self__.args,this$__$1,null);\n} else {\nvar r = temp__5459__auto__;\nreturn cljs.core._deref(r);\n}\n});\n\nreagent.ratom.Track.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){\nvar self__ = this;\nvar ___$1 = this;\nreturn (((other instanceof reagent.ratom.Track)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.f,other.f)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.args,other.args)));\n});\n\nreagent.ratom.Track.prototype.cljs$core$IHash$_hash$arity$1 = (function (_){\nvar self__ = this;\nvar ___$1 = this;\nreturn cljs.core.hash(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.f,self__.args], null));\n});\n\nreagent.ratom.Track.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,w,opts){\nvar self__ = this;\nvar a__$1 = this;\nreturn reagent.ratom.pr_atom(a__$1,w,opts,\"Track:\");\n});\n\nreagent.ratom.Track.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"f\",\"f\",43394975,null),new cljs.core.Symbol(null,\"args\",\"args\",-1338879193,null),cljs.core.with_meta(new cljs.core.Symbol(null,\"reaction\",\"reaction\",2131401315,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null))], null);\n});\n\nreagent.ratom.Track.cljs$lang$type = true;\n\nreagent.ratom.Track.cljs$lang$ctorStr = \"reagent.ratom/Track\";\n\nreagent.ratom.Track.cljs$lang$ctorPrWriter = (function (this__4290__auto__,writer__4291__auto__,opt__4292__auto__){\nreturn cljs.core._write(writer__4291__auto__,\"reagent.ratom/Track\");\n});\n\n/**\n * Positional factory function for reagent.ratom/Track.\n */\nreagent.ratom.__GT_Track = (function reagent$ratom$__GT_Track(f,args,reaction){\nreturn (new reagent.ratom.Track(f,args,reaction));\n});\n\nreagent.ratom.make_track = (function reagent$ratom$make_track(f,args){\nreturn (new reagent.ratom.Track(f,args,null));\n});\nreagent.ratom.make_track_BANG_ = (function reagent$ratom$make_track_BANG_(f,args){\nvar t = reagent.ratom.make_track(f,args);\nvar r = (function (){var G__20850 = ((function (t){\nreturn (function (){\nreturn t.cljs$core$IDeref$_deref$arity$1(null);\n});})(t))\n;\nvar G__20851 = new cljs.core.Keyword(null,\"auto-run\",\"auto-run\",1958400437);\nvar G__20852 = true;\nreturn (reagent.ratom.make_reaction.cljs$core$IFn$_invoke$arity$3 ? reagent.ratom.make_reaction.cljs$core$IFn$_invoke$arity$3(G__20850,G__20851,G__20852) : reagent.ratom.make_reaction.call(null,G__20850,G__20851,G__20852));\n})();\ncljs.core.deref(r);\n\nreturn r;\n});\nreagent.ratom.track = (function reagent$ratom$track(var_args){\nvar args__4647__auto__ = [];\nvar len__4641__auto___21044 = arguments.length;\nvar i__4642__auto___21045 = (0);\nwhile(true){\nif((i__4642__auto___21045 < len__4641__auto___21044)){\nargs__4647__auto__.push((arguments[i__4642__auto___21045]));\n\nvar G__21046 = (i__4642__auto___21045 + (1));\ni__4642__auto___21045 = G__21046;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4648__auto__ = ((((1) < args__4647__auto__.length))?(new cljs.core.IndexedSeq(args__4647__auto__.slice((1)),(0),null)):null);\nreturn reagent.ratom.track.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4648__auto__);\n});\n\nreagent.ratom.track.cljs$core$IFn$_invoke$arity$variadic = (function (f,args){\nif(cljs.core.ifn_QMARK_(f)){\n} else {\nthrow (new Error(\"Assert failed: (ifn? f)\"));\n}\n\nreturn reagent.ratom.make_track(f,args);\n});\n\nreagent.ratom.track.cljs$lang$maxFixedArity = (1);\n\n/** @this {Function} */\nreagent.ratom.track.cljs$lang$applyTo = (function (seq20853){\nvar G__20854 = cljs.core.first(seq20853);\nvar seq20853__$1 = cljs.core.next(seq20853);\nvar self__4628__auto__ = this;\nreturn self__4628__auto__.cljs$core$IFn$_invoke$arity$variadic(G__20854,seq20853__$1);\n});\n\nreagent.ratom.track_BANG_ = (function reagent$ratom$track_BANG_(var_args){\nvar args__4647__auto__ = [];\nvar len__4641__auto___21047 = arguments.length;\nvar i__4642__auto___21048 = (0);\nwhile(true){\nif((i__4642__auto___21048 < len__4641__auto___21047)){\nargs__4647__auto__.push((arguments[i__4642__auto___21048]));\n\nvar G__21049 = (i__4642__auto___21048 + (1));\ni__4642__auto___21048 = G__21049;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4648__auto__ = ((((1) < args__4647__auto__.length))?(new cljs.core.IndexedSeq(args__4647__auto__.slice((1)),(0),null)):null);\nreturn reagent.ratom.track_BANG_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4648__auto__);\n});\n\nreagent.ratom.track_BANG_.cljs$core$IFn$_invoke$arity$variadic = (function (f,args){\nif(cljs.core.ifn_QMARK_(f)){\n} else {\nthrow (new Error(\"Assert failed: (ifn? f)\"));\n}\n\nreturn reagent.ratom.make_track_BANG_(f,args);\n});\n\nreagent.ratom.track_BANG_.cljs$lang$maxFixedArity = (1);\n\n/** @this {Function} */\nreagent.ratom.track_BANG_.cljs$lang$applyTo = (function (seq20855){\nvar G__20857 = cljs.core.first(seq20855);\nvar seq20855__$1 = cljs.core.next(seq20855);\nvar self__4628__auto__ = this;\nreturn self__4628__auto__.cljs$core$IFn$_invoke$arity$variadic(G__20857,seq20855__$1);\n});\n\n\n/**\n* @constructor\n * @implements {cljs.core.IWatchable}\n * @implements {cljs.core.IAtom}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.IReset}\n * @implements {cljs.core.ISwap}\n * @implements {reagent.ratom.IReactiveAtom}\n * @implements {cljs.core.IDeref}\n * @implements {cljs.core.IPrintWithWriter}\n*/\nreagent.ratom.RCursor = (function (ratom,path,reaction,state,watches){\nthis.ratom = ratom;\nthis.path = path;\nthis.reaction = reaction;\nthis.state = state;\nthis.watches = watches;\nthis.cljs$lang$protocol_mask$partition0$ = 2153807872;\nthis.cljs$lang$protocol_mask$partition1$ = 114690;\n});\nreagent.ratom.RCursor.prototype._peek = (function (){\nvar self__ = this;\nvar this$ = this;\nvar _STAR_ratom_context_STAR__orig_val__20889 = reagent.ratom._STAR_ratom_context_STAR_;\nvar _STAR_ratom_context_STAR__temp_val__20890 = null;\nreagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__temp_val__20890;\n\ntry{return this$.cljs$core$IDeref$_deref$arity$1(null);\n}finally {reagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__orig_val__20889;\n}});\n\nreagent.ratom.RCursor.prototype._set_state = (function (oldstate,newstate){\nvar self__ = this;\nvar this$ = this;\nif((oldstate === newstate)){\nreturn null;\n} else {\nself__.state = newstate;\n\nif((!((self__.watches == null)))){\nreturn reagent.ratom.notify_w(this$,oldstate,newstate);\n} else {\nreturn null;\n}\n}\n});\n\nreagent.ratom.RCursor.prototype.reagent$ratom$IReactiveAtom$ = cljs.core.PROTOCOL_SENTINEL;\n\nreagent.ratom.RCursor.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,w,opts){\nvar self__ = this;\nvar a__$1 = this;\nreturn reagent.ratom.pr_atom(a__$1,w,opts,[\"Cursor: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.path)].join(''));\n});\n\nreagent.ratom.RCursor.prototype.cljs$core$IHash$_hash$arity$1 = (function (_){\nvar self__ = this;\nvar ___$1 = this;\nreturn cljs.core.hash(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.ratom,self__.path], null));\n});\n\nreagent.ratom.RCursor.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){\nvar self__ = this;\nvar ___$1 = this;\nreturn (((other instanceof reagent.ratom.RCursor)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.path,other.path)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.ratom,other.ratom)));\n});\n\nreagent.ratom.RCursor.prototype.cljs$core$IReset$_reset_BANG_$arity$2 = (function (this$,new_value){\nvar self__ = this;\nvar this$__$1 = this;\nvar oldstate = self__.state;\nthis$__$1._set_state(oldstate,new_value);\n\nif((((!((self__.ratom == null))))?(((((self__.ratom.cljs$lang$protocol_mask$partition0$ & (32768))) || ((cljs.core.PROTOCOL_SENTINEL === self__.ratom.cljs$core$IDeref$))))?true:(((!self__.ratom.cljs$lang$protocol_mask$partition0$))?cljs.core.native_satisfies_QMARK_(cljs.core.IDeref,self__.ratom):false)):cljs.core.native_satisfies_QMARK_(cljs.core.IDeref,self__.ratom))){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.path,cljs.core.PersistentVector.EMPTY)){\ncljs.core.reset_BANG_(self__.ratom,new_value);\n} else {\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.ratom,cljs.core.assoc_in,self__.path,new_value);\n}\n} else {\n(self__.ratom.cljs$core$IFn$_invoke$arity$2 ? self__.ratom.cljs$core$IFn$_invoke$arity$2(self__.path,new_value) : self__.ratom.call(null,self__.path,new_value));\n}\n\nreturn new_value;\n});\n\nreagent.ratom.RCursor.prototype.cljs$core$ISwap$_swap_BANG_$arity$2 = (function (a,f){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(function (){var G__20896 = a__$1._peek();\nreturn (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20896) : f.call(null,G__20896));\n})());\n});\n\nreagent.ratom.RCursor.prototype.cljs$core$ISwap$_swap_BANG_$arity$3 = (function (a,f,x){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(function (){var G__20897 = a__$1._peek();\nvar G__20898 = x;\nreturn (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20897,G__20898) : f.call(null,G__20897,G__20898));\n})());\n});\n\nreagent.ratom.RCursor.prototype.cljs$core$ISwap$_swap_BANG_$arity$4 = (function (a,f,x,y){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(function (){var G__20899 = a__$1._peek();\nvar G__20900 = x;\nvar G__20901 = y;\nreturn (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__20899,G__20900,G__20901) : f.call(null,G__20899,G__20900,G__20901));\n})());\n});\n\nreagent.ratom.RCursor.prototype.cljs$core$ISwap$_swap_BANG_$arity$5 = (function (a,f,x,y,more){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a__$1._peek(),x,y,more));\n});\n\nreagent.ratom.RCursor.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,old,new$){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.notify_w(this$__$1,old,new$);\n});\n\nreagent.ratom.RCursor.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.add_w(this$__$1,key,f);\n});\n\nreagent.ratom.RCursor.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.remove_w(this$__$1,key);\n});\n\nreagent.ratom.RCursor.prototype.cljs$core$IDeref$_deref$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nvar oldstate = self__.state;\nvar newstate = (function (){var temp__5459__auto__ = self__.reaction;\nif((temp__5459__auto__ == null)){\nvar f = (((((!((self__.ratom == null))))?(((((self__.ratom.cljs$lang$protocol_mask$partition0$ & (32768))) || ((cljs.core.PROTOCOL_SENTINEL === self__.ratom.cljs$core$IDeref$))))?true:(((!self__.ratom.cljs$lang$protocol_mask$partition0$))?cljs.core.native_satisfies_QMARK_(cljs.core.IDeref,self__.ratom):false)):cljs.core.native_satisfies_QMARK_(cljs.core.IDeref,self__.ratom)))?((function (temp__5459__auto__,oldstate,this$__$1){\nreturn (function (){\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(self__.ratom),self__.path);\n});})(temp__5459__auto__,oldstate,this$__$1))\n:((function (temp__5459__auto__,oldstate,this$__$1){\nreturn (function (){\nreturn (self__.ratom.cljs$core$IFn$_invoke$arity$1 ? self__.ratom.cljs$core$IFn$_invoke$arity$1(self__.path) : self__.ratom.call(null,self__.path));\n});})(temp__5459__auto__,oldstate,this$__$1))\n);\nreturn reagent.ratom.cached_reaction(f,self__.ratom,self__.path,this$__$1,null);\n} else {\nvar r = temp__5459__auto__;\nreturn cljs.core._deref(r);\n}\n})();\nthis$__$1._set_state(oldstate,newstate);\n\nreturn newstate;\n});\n\nreagent.ratom.RCursor.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"ratom\",\"ratom\",1514010260,null),new cljs.core.Symbol(null,\"path\",\"path\",1452340359,null),cljs.core.with_meta(new cljs.core.Symbol(null,\"reaction\",\"reaction\",2131401315,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"state\",\"state\",-348086572,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"watches\",\"watches\",1367433992,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null))], null);\n});\n\nreagent.ratom.RCursor.cljs$lang$type = true;\n\nreagent.ratom.RCursor.cljs$lang$ctorStr = \"reagent.ratom/RCursor\";\n\nreagent.ratom.RCursor.cljs$lang$ctorPrWriter = (function (this__4290__auto__,writer__4291__auto__,opt__4292__auto__){\nreturn cljs.core._write(writer__4291__auto__,\"reagent.ratom/RCursor\");\n});\n\n/**\n * Positional factory function for reagent.ratom/RCursor.\n */\nreagent.ratom.__GT_RCursor = (function reagent$ratom$__GT_RCursor(ratom,path,reaction,state,watches){\nreturn (new reagent.ratom.RCursor(ratom,path,reaction,state,watches));\n});\n\nreagent.ratom.cursor = (function reagent$ratom$cursor(src,path){\nif((function (){var or__4047__auto__ = (((!((src == null))))?((((false) || ((cljs.core.PROTOCOL_SENTINEL === src.reagent$ratom$IReactiveAtom$))))?true:(((!src.cljs$lang$protocol_mask$partition$))?cljs.core.native_satisfies_QMARK_(reagent.ratom.IReactiveAtom,src):false)):cljs.core.native_satisfies_QMARK_(reagent.ratom.IReactiveAtom,src));\nif(or__4047__auto__){\nreturn or__4047__auto__;\n} else {\nreturn ((cljs.core.ifn_QMARK_(src)) && ((!(cljs.core.vector_QMARK_(src)))));\n}\n})()){\n} else {\nthrow (new Error([\"Assert failed: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1([\"src must be a reactive atom or a function, not \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([src], 0)))].join('')),\"\\n\",\"(or (satisfies? IReactiveAtom src) (and (ifn? src) (not (vector? src))))\"].join('')));\n}\n\nreturn reagent.ratom.__GT_RCursor(src,path,null,null,null);\n});\nreagent.ratom.with_let_destroy = (function reagent$ratom$with_let_destroy(v){\nvar temp__5461__auto__ = v.destroy;\nif((temp__5461__auto__ == null)){\nreturn null;\n} else {\nvar f = temp__5461__auto__;\nreturn (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));\n}\n});\nreagent.ratom.with_let_values = (function reagent$ratom$with_let_values(key){\nvar temp__5459__auto__ = reagent.ratom._STAR_ratom_context_STAR_;\nif((temp__5459__auto__ == null)){\nreturn [];\n} else {\nvar c = temp__5459__auto__;\nreturn reagent.ratom.cached_reaction(cljs.core.array,c,key,null,reagent.ratom.with_let_destroy);\n}\n});\n\n/**\n * @interface\n */\nreagent.ratom.IDisposable = function(){};\n\nreagent.ratom.dispose_BANG_ = (function reagent$ratom$dispose_BANG_(this$){\nif((((!((this$ == null)))) && ((!((this$.reagent$ratom$IDisposable$dispose_BANG_$arity$1 == null)))))){\nreturn this$.reagent$ratom$IDisposable$dispose_BANG_$arity$1(this$);\n} else {\nvar x__4347__auto__ = (((this$ == null))?null:this$);\nvar m__4348__auto__ = (reagent.ratom.dispose_BANG_[goog.typeOf(x__4347__auto__)]);\nif((!((m__4348__auto__ == null)))){\nreturn (m__4348__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4348__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4348__auto__.call(null,this$));\n} else {\nvar m__4348__auto____$1 = (reagent.ratom.dispose_BANG_[\"_\"]);\nif((!((m__4348__auto____$1 == null)))){\nreturn (m__4348__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4348__auto____$1.cljs$core$IFn$_invoke$arity$1(this$) : m__4348__auto____$1.call(null,this$));\n} else {\nthrow cljs.core.missing_protocol(\"IDisposable.dispose!\",this$);\n}\n}\n}\n});\n\nreagent.ratom.add_on_dispose_BANG_ = (function reagent$ratom$add_on_dispose_BANG_(this$,f){\nif((((!((this$ == null)))) && ((!((this$.reagent$ratom$IDisposable$add_on_dispose_BANG_$arity$2 == null)))))){\nreturn this$.reagent$ratom$IDisposable$add_on_dispose_BANG_$arity$2(this$,f);\n} else {\nvar x__4347__auto__ = (((this$ == null))?null:this$);\nvar m__4348__auto__ = (reagent.ratom.add_on_dispose_BANG_[goog.typeOf(x__4347__auto__)]);\nif((!((m__4348__auto__ == null)))){\nreturn (m__4348__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4348__auto__.cljs$core$IFn$_invoke$arity$2(this$,f) : m__4348__auto__.call(null,this$,f));\n} else {\nvar m__4348__auto____$1 = (reagent.ratom.add_on_dispose_BANG_[\"_\"]);\nif((!((m__4348__auto____$1 == null)))){\nreturn (m__4348__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4348__auto____$1.cljs$core$IFn$_invoke$arity$2(this$,f) : m__4348__auto____$1.call(null,this$,f));\n} else {\nthrow cljs.core.missing_protocol(\"IDisposable.add-on-dispose!\",this$);\n}\n}\n}\n});\n\n\n/**\n * @interface\n */\nreagent.ratom.IRunnable = function(){};\n\nreagent.ratom.run = (function reagent$ratom$run(this$){\nif((((!((this$ == null)))) && ((!((this$.reagent$ratom$IRunnable$run$arity$1 == null)))))){\nreturn this$.reagent$ratom$IRunnable$run$arity$1(this$);\n} else {\nvar x__4347__auto__ = (((this$ == null))?null:this$);\nvar m__4348__auto__ = (reagent.ratom.run[goog.typeOf(x__4347__auto__)]);\nif((!((m__4348__auto__ == null)))){\nreturn (m__4348__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4348__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4348__auto__.call(null,this$));\n} else {\nvar m__4348__auto____$1 = (reagent.ratom.run[\"_\"]);\nif((!((m__4348__auto____$1 == null)))){\nreturn (m__4348__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4348__auto____$1.cljs$core$IFn$_invoke$arity$1(this$) : m__4348__auto____$1.call(null,this$));\n} else {\nthrow cljs.core.missing_protocol(\"IRunnable.run\",this$);\n}\n}\n}\n});\n\nreagent.ratom.handle_reaction_change = (function reagent$ratom$handle_reaction_change(this$,sender,old,new$){\nreturn this$._handle_change(sender,old,new$);\n});\n\n/**\n* @constructor\n * @implements {cljs.core.IWatchable}\n * @implements {cljs.core.IAtom}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.IReset}\n * @implements {cljs.core.ISwap}\n * @implements {reagent.ratom.IReactiveAtom}\n * @implements {reagent.ratom.IRunnable}\n * @implements {reagent.ratom.IDisposable}\n * @implements {cljs.core.IDeref}\n * @implements {cljs.core.IPrintWithWriter}\n*/\nreagent.ratom.Reaction = (function (f,state,dirty_QMARK_,nocache_QMARK_,watching,watches,auto_run,caught){\nthis.f = f;\nthis.state = state;\nthis.dirty_QMARK_ = dirty_QMARK_;\nthis.nocache_QMARK_ = nocache_QMARK_;\nthis.watching = watching;\nthis.watches = watches;\nthis.auto_run = auto_run;\nthis.caught = caught;\nthis.cljs$lang$protocol_mask$partition0$ = 2153807872;\nthis.cljs$lang$protocol_mask$partition1$ = 114690;\n});\nreagent.ratom.Reaction.prototype._peek_at = (function (){\nvar self__ = this;\nvar this$ = this;\nvar _STAR_ratom_context_STAR__orig_val__20991 = reagent.ratom._STAR_ratom_context_STAR_;\nvar _STAR_ratom_context_STAR__temp_val__20992 = null;\nreagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__temp_val__20992;\n\ntry{return this$.cljs$core$IDeref$_deref$arity$1(null);\n}finally {reagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__orig_val__20991;\n}});\n\nreagent.ratom.Reaction.prototype._handle_change = (function (sender,oldval,newval){\nvar self__ = this;\nvar this$ = this;\nif((((oldval === newval)) || (self__.dirty_QMARK_))){\nreturn null;\n} else {\nif((self__.auto_run == null)){\nself__.dirty_QMARK_ = true;\n\nreturn reagent.ratom.rea_enqueue(this$);\n} else {\nif(self__.auto_run === true){\nreturn this$._run(false);\n} else {\nreturn (self__.auto_run.cljs$core$IFn$_invoke$arity$1 ? self__.auto_run.cljs$core$IFn$_invoke$arity$1(this$) : self__.auto_run.call(null,this$));\n}\n}\n}\n});\n\nreagent.ratom.Reaction.prototype._update_watching = (function (derefed){\nvar self__ = this;\nvar this$ = this;\nvar new$ = cljs.core.set(derefed);\nvar old = cljs.core.set(self__.watching);\nself__.watching = derefed;\n\nvar seq__20994_21060 = cljs.core.seq(clojure.set.difference.cljs$core$IFn$_invoke$arity$2(new$,old));\nvar chunk__20995_21061 = null;\nvar count__20996_21062 = (0);\nvar i__20997_21063 = (0);\nwhile(true){\nif((i__20997_21063 < count__20996_21062)){\nvar w_21064 = chunk__20995_21061.cljs$core$IIndexed$_nth$arity$2(null,i__20997_21063);\ncljs.core._add_watch(w_21064,this$,reagent.ratom.handle_reaction_change);\n\n\nvar G__21065 = seq__20994_21060;\nvar G__21066 = chunk__20995_21061;\nvar G__21067 = count__20996_21062;\nvar G__21068 = (i__20997_21063 + (1));\nseq__20994_21060 = G__21065;\nchunk__20995_21061 = G__21066;\ncount__20996_21062 = G__21067;\ni__20997_21063 = G__21068;\ncontinue;\n} else {\nvar temp__5457__auto___21069 = cljs.core.seq(seq__20994_21060);\nif(temp__5457__auto___21069){\nvar seq__20994_21070__$1 = temp__5457__auto___21069;\nif(cljs.core.chunked_seq_QMARK_(seq__20994_21070__$1)){\nvar c__4461__auto___21071 = cljs.core.chunk_first(seq__20994_21070__$1);\nvar G__21072 = cljs.core.chunk_rest(seq__20994_21070__$1);\nvar G__21073 = c__4461__auto___21071;\nvar G__21074 = cljs.core.count(c__4461__auto___21071);\nvar G__21075 = (0);\nseq__20994_21060 = G__21072;\nchunk__20995_21061 = G__21073;\ncount__20996_21062 = G__21074;\ni__20997_21063 = G__21075;\ncontinue;\n} else {\nvar w_21076 = cljs.core.first(seq__20994_21070__$1);\ncljs.core._add_watch(w_21076,this$,reagent.ratom.handle_reaction_change);\n\n\nvar G__21077 = cljs.core.next(seq__20994_21070__$1);\nvar G__21078 = null;\nvar G__21079 = (0);\nvar G__21080 = (0);\nseq__20994_21060 = G__21077;\nchunk__20995_21061 = G__21078;\ncount__20996_21062 = G__21079;\ni__20997_21063 = G__21080;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\nvar seq__20998 = cljs.core.seq(clojure.set.difference.cljs$core$IFn$_invoke$arity$2(old,new$));\nvar chunk__20999 = null;\nvar count__21000 = (0);\nvar i__21001 = (0);\nwhile(true){\nif((i__21001 < count__21000)){\nvar w = chunk__20999.cljs$core$IIndexed$_nth$arity$2(null,i__21001);\ncljs.core._remove_watch(w,this$);\n\n\nvar G__21081 = seq__20998;\nvar G__21082 = chunk__20999;\nvar G__21083 = count__21000;\nvar G__21084 = (i__21001 + (1));\nseq__20998 = G__21081;\nchunk__20999 = G__21082;\ncount__21000 = G__21083;\ni__21001 = G__21084;\ncontinue;\n} else {\nvar temp__5457__auto__ = cljs.core.seq(seq__20998);\nif(temp__5457__auto__){\nvar seq__20998__$1 = temp__5457__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__20998__$1)){\nvar c__4461__auto__ = cljs.core.chunk_first(seq__20998__$1);\nvar G__21085 = cljs.core.chunk_rest(seq__20998__$1);\nvar G__21086 = c__4461__auto__;\nvar G__21087 = cljs.core.count(c__4461__auto__);\nvar G__21088 = (0);\nseq__20998 = G__21085;\nchunk__20999 = G__21086;\ncount__21000 = G__21087;\ni__21001 = G__21088;\ncontinue;\n} else {\nvar w = cljs.core.first(seq__20998__$1);\ncljs.core._remove_watch(w,this$);\n\n\nvar G__21089 = cljs.core.next(seq__20998__$1);\nvar G__21090 = null;\nvar G__21091 = (0);\nvar G__21092 = (0);\nseq__20998 = G__21089;\nchunk__20999 = G__21090;\ncount__21000 = G__21091;\ni__21001 = G__21092;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n});\n\nreagent.ratom.Reaction.prototype._queued_run = (function (){\nvar self__ = this;\nvar this$ = this;\nif(((self__.dirty_QMARK_) && ((!((self__.watching == null)))))){\nreturn this$._run(true);\n} else {\nreturn null;\n}\n});\n\nreagent.ratom.Reaction.prototype._try_capture = (function (f__$1){\nvar self__ = this;\nvar this$ = this;\ntry{self__.caught = null;\n\nreturn reagent.ratom.deref_capture(f__$1,this$);\n}catch (e21002){var e = e21002;\nself__.state = e;\n\nself__.caught = e;\n\nreturn self__.dirty_QMARK_ = false;\n}});\n\nreagent.ratom.Reaction.prototype._run = (function (check){\nvar self__ = this;\nvar this$ = this;\nvar oldstate = self__.state;\nvar res = (cljs.core.truth_(check)?this$._try_capture(self__.f):reagent.ratom.deref_capture(self__.f,this$));\nif(self__.nocache_QMARK_){\n} else {\nself__.state = res;\n\nif((((self__.watches == null)) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(oldstate,res)))){\n} else {\nreagent.ratom.notify_w(this$,oldstate,res);\n}\n}\n\nreturn res;\n});\n\nreagent.ratom.Reaction.prototype._set_opts = (function (p__21003){\nvar self__ = this;\nvar map__21005 = p__21003;\nvar map__21005__$1 = (((((!((map__21005 == null))))?(((((map__21005.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__21005.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__21005):map__21005);\nvar auto_run__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21005__$1,new cljs.core.Keyword(null,\"auto-run\",\"auto-run\",1958400437));\nvar on_set = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21005__$1,new cljs.core.Keyword(null,\"on-set\",\"on-set\",-140953470));\nvar on_dispose = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21005__$1,new cljs.core.Keyword(null,\"on-dispose\",\"on-dispose\",2105306360));\nvar no_cache = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21005__$1,new cljs.core.Keyword(null,\"no-cache\",\"no-cache\",1588056370));\nvar this$ = this;\nif((!((auto_run__$1 == null)))){\nthis$.auto_run = auto_run__$1;\n} else {\n}\n\nif((!((on_set == null)))){\nthis$.on_set = on_set;\n} else {\n}\n\nif((!((on_dispose == null)))){\nthis$.on_dispose = on_dispose;\n} else {\n}\n\nif((!((no_cache == null)))){\nreturn this$.nocache_QMARK_ = no_cache;\n} else {\nreturn null;\n}\n});\n\nreagent.ratom.Reaction.prototype.reagent$ratom$IReactiveAtom$ = cljs.core.PROTOCOL_SENTINEL;\n\nreagent.ratom.Reaction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,w,opts){\nvar self__ = this;\nvar a__$1 = this;\nreturn reagent.ratom.pr_atom(a__$1,w,opts,[\"Reaction \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.hash(a__$1)),\":\"].join(''));\n});\n\nreagent.ratom.Reaction.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nreturn goog.getUid(this$__$1);\n});\n\nreagent.ratom.Reaction.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){\nvar self__ = this;\nvar o__$1 = this;\nreturn (o__$1 === other);\n});\n\nreagent.ratom.Reaction.prototype.reagent$ratom$IDisposable$ = cljs.core.PROTOCOL_SENTINEL;\n\nreagent.ratom.Reaction.prototype.reagent$ratom$IDisposable$dispose_BANG_$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nvar s = self__.state;\nvar wg = self__.watching;\nself__.watching = null;\n\nself__.state = null;\n\nself__.auto_run = null;\n\nself__.dirty_QMARK_ = true;\n\nvar seq__21008_21096 = cljs.core.seq(cljs.core.set(wg));\nvar chunk__21009_21097 = null;\nvar count__21010_21098 = (0);\nvar i__21011_21099 = (0);\nwhile(true){\nif((i__21011_21099 < count__21010_21098)){\nvar w_21100 = chunk__21009_21097.cljs$core$IIndexed$_nth$arity$2(null,i__21011_21099);\ncljs.core._remove_watch(w_21100,this$__$1);\n\n\nvar G__21101 = seq__21008_21096;\nvar G__21102 = chunk__21009_21097;\nvar G__21103 = count__21010_21098;\nvar G__21104 = (i__21011_21099 + (1));\nseq__21008_21096 = G__21101;\nchunk__21009_21097 = G__21102;\ncount__21010_21098 = G__21103;\ni__21011_21099 = G__21104;\ncontinue;\n} else {\nvar temp__5457__auto___21106 = cljs.core.seq(seq__21008_21096);\nif(temp__5457__auto___21106){\nvar seq__21008_21107__$1 = temp__5457__auto___21106;\nif(cljs.core.chunked_seq_QMARK_(seq__21008_21107__$1)){\nvar c__4461__auto___21108 = cljs.core.chunk_first(seq__21008_21107__$1);\nvar G__21110 = cljs.core.chunk_rest(seq__21008_21107__$1);\nvar G__21111 = c__4461__auto___21108;\nvar G__21112 = cljs.core.count(c__4461__auto___21108);\nvar G__21113 = (0);\nseq__21008_21096 = G__21110;\nchunk__21009_21097 = G__21111;\ncount__21010_21098 = G__21112;\ni__21011_21099 = G__21113;\ncontinue;\n} else {\nvar w_21115 = cljs.core.first(seq__21008_21107__$1);\ncljs.core._remove_watch(w_21115,this$__$1);\n\n\nvar G__21116 = cljs.core.next(seq__21008_21107__$1);\nvar G__21117 = null;\nvar G__21118 = (0);\nvar G__21119 = (0);\nseq__21008_21096 = G__21116;\nchunk__21009_21097 = G__21117;\ncount__21010_21098 = G__21118;\ni__21011_21099 = G__21119;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\nif((!((this$__$1.on_dispose == null)))){\nthis$__$1.on_dispose(s);\n} else {\n}\n\nvar temp__5461__auto__ = this$__$1.on_dispose_arr;\nif((temp__5461__auto__ == null)){\nreturn null;\n} else {\nvar a = temp__5461__auto__;\nvar n__4518__auto__ = a.length;\nvar i = (0);\nwhile(true){\nif((i < n__4518__auto__)){\nvar fexpr__21012_21120 = (a[i]);\n(fexpr__21012_21120.cljs$core$IFn$_invoke$arity$1 ? fexpr__21012_21120.cljs$core$IFn$_invoke$arity$1(this$__$1) : fexpr__21012_21120.call(null,this$__$1));\n\nvar G__21121 = (i + (1));\ni = G__21121;\ncontinue;\n} else {\nreturn null;\n}\nbreak;\n}\n}\n});\n\nreagent.ratom.Reaction.prototype.reagent$ratom$IDisposable$add_on_dispose_BANG_$arity$2 = (function (this$,f__$1){\nvar self__ = this;\nvar this$__$1 = this;\nvar temp__5459__auto__ = this$__$1.on_dispose_arr;\nif((temp__5459__auto__ == null)){\nreturn this$__$1.on_dispose_arr = [f__$1];\n} else {\nvar a = temp__5459__auto__;\nreturn a.push(f__$1);\n}\n});\n\nreagent.ratom.Reaction.prototype.cljs$core$IReset$_reset_BANG_$arity$2 = (function (a,newval){\nvar self__ = this;\nvar a__$1 = this;\nif(cljs.core.fn_QMARK_(a__$1.on_set)){\n} else {\nthrow (new Error([\"Assert failed: \",\"Reaction is read only; on-set is not allowed\",\"\\n\",\"(fn? (.-on-set a))\"].join('')));\n}\n\nvar oldval = self__.state;\nself__.state = newval;\n\na__$1.on_set(oldval,newval);\n\nreagent.ratom.notify_w(a__$1,oldval,newval);\n\nreturn newval;\n});\n\nreagent.ratom.Reaction.prototype.cljs$core$ISwap$_swap_BANG_$arity$2 = (function (a,f__$1){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(function (){var G__21013 = a__$1._peek_at();\nreturn (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__21013) : f__$1.call(null,G__21013));\n})());\n});\n\nreagent.ratom.Reaction.prototype.cljs$core$ISwap$_swap_BANG_$arity$3 = (function (a,f__$1,x){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(function (){var G__21014 = a__$1._peek_at();\nvar G__21015 = x;\nreturn (f__$1.cljs$core$IFn$_invoke$arity$2 ? f__$1.cljs$core$IFn$_invoke$arity$2(G__21014,G__21015) : f__$1.call(null,G__21014,G__21015));\n})());\n});\n\nreagent.ratom.Reaction.prototype.cljs$core$ISwap$_swap_BANG_$arity$4 = (function (a,f__$1,x,y){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(function (){var G__21016 = a__$1._peek_at();\nvar G__21017 = x;\nvar G__21018 = y;\nreturn (f__$1.cljs$core$IFn$_invoke$arity$3 ? f__$1.cljs$core$IFn$_invoke$arity$3(G__21016,G__21017,G__21018) : f__$1.call(null,G__21016,G__21017,G__21018));\n})());\n});\n\nreagent.ratom.Reaction.prototype.cljs$core$ISwap$_swap_BANG_$arity$5 = (function (a,f__$1,x,y,more){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f__$1,a__$1._peek_at(),x,y,more));\n});\n\nreagent.ratom.Reaction.prototype.reagent$ratom$IRunnable$ = cljs.core.PROTOCOL_SENTINEL;\n\nreagent.ratom.Reaction.prototype.reagent$ratom$IRunnable$run$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nreagent.ratom.flush_BANG_();\n\nreturn this$__$1._run(false);\n});\n\nreagent.ratom.Reaction.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,old,new$){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.notify_w(this$__$1,old,new$);\n});\n\nreagent.ratom.Reaction.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f__$1){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.add_w(this$__$1,key,f__$1);\n});\n\nreagent.ratom.Reaction.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){\nvar self__ = this;\nvar this$__$1 = this;\nvar was_empty = cljs.core.empty_QMARK_(self__.watches);\nreagent.ratom.remove_w(this$__$1,key);\n\nif((((!(was_empty))) && (cljs.core.empty_QMARK_(self__.watches)) && ((self__.auto_run == null)))){\nreturn this$__$1.reagent$ratom$IDisposable$dispose_BANG_$arity$1(null);\n} else {\nreturn null;\n}\n});\n\nreagent.ratom.Reaction.prototype.cljs$core$IDeref$_deref$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nvar temp__5461__auto___21137 = self__.caught;\nif((temp__5461__auto___21137 == null)){\n} else {\nvar e_21138 = temp__5461__auto___21137;\nthrow e_21138;\n}\n\nvar non_reactive_21139 = (reagent.ratom._STAR_ratom_context_STAR_ == null);\nif(non_reactive_21139){\nreagent.ratom.flush_BANG_();\n} else {\n}\n\nif(((non_reactive_21139) && ((self__.auto_run == null)))){\nif(self__.dirty_QMARK_){\nvar oldstate_21140 = self__.state;\nself__.state = (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));\n\nif((((self__.watches == null)) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(oldstate_21140,self__.state)))){\n} else {\nreagent.ratom.notify_w(this$__$1,oldstate_21140,self__.state);\n}\n} else {\n}\n} else {\nreagent.ratom.notify_deref_watcher_BANG_(this$__$1);\n\nif(self__.dirty_QMARK_){\nthis$__$1._run(false);\n} else {\n}\n}\n\nreturn self__.state;\n});\n\nreagent.ratom.Reaction.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"f\",\"f\",43394975,null),cljs.core.with_meta(new cljs.core.Symbol(null,\"state\",\"state\",-348086572,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"dirty?\",\"dirty?\",-419314319,null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Symbol(null,\"boolean\",\"boolean\",-278886877,null),new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"nocache?\",\"nocache?\",-1065670978,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Symbol(null,\"boolean\",\"boolean\",-278886877,null)], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"watching\",\"watching\",1947648227,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"watches\",\"watches\",1367433992,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"auto-run\",\"auto-run\",-696035332,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"caught\",\"caught\",2084008322,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null))], null);\n});\n\nreagent.ratom.Reaction.cljs$lang$type = true;\n\nreagent.ratom.Reaction.cljs$lang$ctorStr = \"reagent.ratom/Reaction\";\n\nreagent.ratom.Reaction.cljs$lang$ctorPrWriter = (function (this__4290__auto__,writer__4291__auto__,opt__4292__auto__){\nreturn cljs.core._write(writer__4291__auto__,\"reagent.ratom/Reaction\");\n});\n\n/**\n * Positional factory function for reagent.ratom/Reaction.\n */\nreagent.ratom.__GT_Reaction = (function reagent$ratom$__GT_Reaction(f,state,dirty_QMARK_,nocache_QMARK_,watching,watches,auto_run,caught){\nreturn (new reagent.ratom.Reaction(f,state,dirty_QMARK_,nocache_QMARK_,watching,watches,auto_run,caught));\n});\n\nreagent.ratom.make_reaction = (function reagent$ratom$make_reaction(var_args){\nvar args__4647__auto__ = [];\nvar len__4641__auto___21142 = arguments.length;\nvar i__4642__auto___21143 = (0);\nwhile(true){\nif((i__4642__auto___21143 < len__4641__auto___21142)){\nargs__4647__auto__.push((arguments[i__4642__auto___21143]));\n\nvar G__21144 = (i__4642__auto___21143 + (1));\ni__4642__auto___21143 = G__21144;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4648__auto__ = ((((1) < args__4647__auto__.length))?(new cljs.core.IndexedSeq(args__4647__auto__.slice((1)),(0),null)):null);\nreturn reagent.ratom.make_reaction.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4648__auto__);\n});\n\nreagent.ratom.make_reaction.cljs$core$IFn$_invoke$arity$variadic = (function (f,p__21021){\nvar map__21022 = p__21021;\nvar map__21022__$1 = (((((!((map__21022 == null))))?(((((map__21022.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__21022.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__21022):map__21022);\nvar auto_run = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21022__$1,new cljs.core.Keyword(null,\"auto-run\",\"auto-run\",1958400437));\nvar on_set = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21022__$1,new cljs.core.Keyword(null,\"on-set\",\"on-set\",-140953470));\nvar on_dispose = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21022__$1,new cljs.core.Keyword(null,\"on-dispose\",\"on-dispose\",2105306360));\nvar reaction = reagent.ratom.__GT_Reaction(f,null,true,false,null,null,null,null);\nreaction._set_opts(new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"auto-run\",\"auto-run\",1958400437),auto_run,new cljs.core.Keyword(null,\"on-set\",\"on-set\",-140953470),on_set,new cljs.core.Keyword(null,\"on-dispose\",\"on-dispose\",2105306360),on_dispose], null));\n\nreturn reaction;\n});\n\nreagent.ratom.make_reaction.cljs$lang$maxFixedArity = (1);\n\n/** @this {Function} */\nreagent.ratom.make_reaction.cljs$lang$applyTo = (function (seq21019){\nvar G__21020 = cljs.core.first(seq21019);\nvar seq21019__$1 = cljs.core.next(seq21019);\nvar self__4628__auto__ = this;\nreturn self__4628__auto__.cljs$core$IFn$_invoke$arity$variadic(G__21020,seq21019__$1);\n});\n\nreagent.ratom.temp_reaction = reagent.ratom.make_reaction(null);\nreagent.ratom.run_in_reaction = (function reagent$ratom$run_in_reaction(f,obj,key,run,opts){\nvar r = reagent.ratom.temp_reaction;\nvar res = reagent.ratom.deref_capture(f,r);\nif((r.watching == null)){\n} else {\nreagent.ratom.temp_reaction = reagent.ratom.make_reaction(null);\n\nr._set_opts(opts);\n\nr.f = f;\n\nr.auto_run = ((function (r,res){\nreturn (function (){\nreturn (run.cljs$core$IFn$_invoke$arity$1 ? run.cljs$core$IFn$_invoke$arity$1(obj) : run.call(null,obj));\n});})(r,res))\n;\n\n(obj[key] = r);\n}\n\nreturn res;\n});\nreagent.ratom.check_derefs = (function reagent$ratom$check_derefs(f){\nvar ctx = {};\nvar res = reagent.ratom.in_context(ctx,f);\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [res,(!((ctx.captured == null)))], null);\n});\n\n/**\n* @constructor\n * @implements {cljs.core.IWatchable}\n * @implements {cljs.core.IAtom}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IReset}\n * @implements {cljs.core.ISwap}\n * @implements {cljs.core.IDeref}\n * @implements {cljs.core.IPrintWithWriter}\n*/\nreagent.ratom.Wrapper = (function (state,callback,changed,watches){\nthis.state = state;\nthis.callback = callback;\nthis.changed = changed;\nthis.watches = watches;\nthis.cljs$lang$protocol_mask$partition1$ = 114690;\nthis.cljs$lang$protocol_mask$partition0$ = 2149613568;\n});\nreagent.ratom.Wrapper.prototype.cljs$core$IDeref$_deref$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nif(((self__.changed) && ((!((reagent.ratom._STAR_ratom_context_STAR_ == null)))))){\nif(reagent.debug.has_console){\n((reagent.debug.tracking)?reagent.debug.track_console:console).warn([\"Warning: \",\"derefing stale wrap: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([this$__$1], 0)))].join(''));\n} else {\n}\n} else {\n}\n\n\nreturn self__.state;\n});\n\nreagent.ratom.Wrapper.prototype.cljs$core$IReset$_reset_BANG_$arity$2 = (function (this$,newval){\nvar self__ = this;\nvar this$__$1 = this;\nvar oldval = self__.state;\nself__.changed = true;\n\nself__.state = newval;\n\nif((!((self__.watches == null)))){\nreagent.ratom.notify_w(this$__$1,oldval,newval);\n} else {\n}\n\n(self__.callback.cljs$core$IFn$_invoke$arity$1 ? self__.callback.cljs$core$IFn$_invoke$arity$1(newval) : self__.callback.call(null,newval));\n\nreturn newval;\n});\n\nreagent.ratom.Wrapper.prototype.cljs$core$ISwap$_swap_BANG_$arity$2 = (function (a,f){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(self__.state) : f.call(null,self__.state)));\n});\n\nreagent.ratom.Wrapper.prototype.cljs$core$ISwap$_swap_BANG_$arity$3 = (function (a,f,x){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(self__.state,x) : f.call(null,self__.state,x)));\n});\n\nreagent.ratom.Wrapper.prototype.cljs$core$ISwap$_swap_BANG_$arity$4 = (function (a,f,x,y){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(self__.state,x,y) : f.call(null,self__.state,x,y)));\n});\n\nreagent.ratom.Wrapper.prototype.cljs$core$ISwap$_swap_BANG_$arity$5 = (function (a,f,x,y,more){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,self__.state,x,y,more));\n});\n\nreagent.ratom.Wrapper.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){\nvar self__ = this;\nvar ___$1 = this;\nreturn (((other instanceof reagent.ratom.Wrapper)) && ((!(self__.changed))) && (cljs.core.not(other.changed)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.state,other.state)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.callback,other.callback)));\n});\n\nreagent.ratom.Wrapper.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,old,new$){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.notify_w(this$__$1,old,new$);\n});\n\nreagent.ratom.Wrapper.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.add_w(this$__$1,key,f);\n});\n\nreagent.ratom.Wrapper.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.remove_w(this$__$1,key);\n});\n\nreagent.ratom.Wrapper.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,w,opts){\nvar self__ = this;\nvar a__$1 = this;\nreturn reagent.ratom.pr_atom(a__$1,w,opts,\"Wrap:\");\n});\n\nreagent.ratom.Wrapper.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,\"state\",\"state\",-348086572,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),new cljs.core.Symbol(null,\"callback\",\"callback\",935395299,null),cljs.core.with_meta(new cljs.core.Symbol(null,\"changed\",\"changed\",-2083710852,null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Symbol(null,\"boolean\",\"boolean\",-278886877,null),new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"watches\",\"watches\",1367433992,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null))], null);\n});\n\nreagent.ratom.Wrapper.cljs$lang$type = true;\n\nreagent.ratom.Wrapper.cljs$lang$ctorStr = \"reagent.ratom/Wrapper\";\n\nreagent.ratom.Wrapper.cljs$lang$ctorPrWriter = (function (this__4290__auto__,writer__4291__auto__,opt__4292__auto__){\nreturn cljs.core._write(writer__4291__auto__,\"reagent.ratom/Wrapper\");\n});\n\n/**\n * Positional factory function for reagent.ratom/Wrapper.\n */\nreagent.ratom.__GT_Wrapper = (function reagent$ratom$__GT_Wrapper(state,callback,changed,watches){\nreturn (new reagent.ratom.Wrapper(state,callback,changed,watches));\n});\n\nreagent.ratom.make_wrapper = (function reagent$ratom$make_wrapper(value,callback_fn,args){\nreturn reagent.ratom.__GT_Wrapper(value,reagent.impl.util.make_partial_fn(callback_fn,args),false,null);\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","reagent/ratom.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",18],"~:ns-aliases",["^ ","~$react","~$module$node_modules$react$index","~$create-react-class","~$module$node_modules$create_react_class$index","~$react-dom","~$module$node_modules$react_dom$index"],"~:use-macros",["^ ","~$with-let","~$reagent.ratom","~$dbg","~$reagent.debug","~$log","^F","~$warn","^F","~$error","^F","~$dev?","^F","~$time","^F"],"~:excludes",["~#set",["~$atom"]],"~:macros",["^ ","^C",["^ ","~:arglists",["~#list",[["~$bindings","~$&","~$body"]]],"^7",17,"^8",1,"^6","reagent/ratom.clj","~:name","~$reagent.ratom/with-let","~:ns","^D","~:macro",true],"~$reaction",["^ ","^P",["^Q",[["~$&","^S"]]],"^7",5,"^8",1,"^6","reagent/ratom.clj","^T","~$reagent.ratom/reaction","^V","^D","^W",true],"~$run!",["^ ","^P",["^Q",[["~$&","^S"]]],"~:doc","Runs body immediately, and runs again whenever atoms deferenced in the body change. Body should side effect.","^7",9,"^8",1,"^6","reagent/ratom.clj","^T","~$reagent.ratom/run!","^V","^D","^W",true]],"^T","^D","~:op","^V","~:imports",null,"~:requires",["^ ","~$reagent.impl.util","^14","~$util","^14","^F","^F","~$reagent.impl.batching","^16","~$batch","^16","~$clojure.set","^18","~$s","^18","~$cljs.core","^19","~$goog","^1:"],"~:seen",["^M",["~:require","~:require-macros"]],"~:uses",null,"^1=",["^ ","^D","^D","^F","^F","^19","^19"],"~:form",["^Q",["~$ns","^D",["^Q",["~:refer-clojure","~:exclude",["^N"]]],["^Q",["^1=",["^D","~:refer",["^C"]]]],["^Q",["^1<",["^14","~:as","^15"],["^F","~:refer-macros",["^E","^G","^H","^I","^J","^K"]],["^16","^1D","^17"],["^18","^1D","~$s"]]]]],"~:flags",["^ ","^1=",["^M",[]],"^1<",["^M",[]]],"~:js-deps",["^ "],"~:deps",["^1:","^19","^14","^F","^16","^18"]],"^V","^D","~:resource-id",["~:shadow.build.classpath/resource","reagent/ratom.cljs"],"~:compiled-at",1547198244142,"~:resource-name","reagent/ratom.cljs","~:warnings",[],"~:source","(ns reagent.ratom\n  (:refer-clojure :exclude [atom])\n  (:require-macros [reagent.ratom :refer [with-let]])\n  (:require [reagent.impl.util :as util]\n            [reagent.debug :refer-macros [dbg log warn error dev? time]]\n            [reagent.impl.batching :as batch]\n            [clojure.set :as s]))\n\n(declare ^:dynamic *ratom-context*)\n(defonce ^boolean debug false)\n(defonce ^:private generation 0)\n(defonce ^:private -running (clojure.core/atom 0))\n\n(defn ^boolean reactive? []\n  (some? *ratom-context*))\n\n\n;;; Utilities\n\n(defn running []\n  (+ @-running))\n\n(defn- ^number arr-len [x]\n  (if (nil? x) 0 (alength x)))\n\n(defn- ^boolean arr-eq [x y]\n  (let [len (arr-len x)]\n    (and (== len (arr-len y))\n         (loop [i 0]\n           (or (== i len)\n               (if (identical? (aget x i) (aget y i))\n                 (recur (inc i))\n                 false))))))\n\n(defn- in-context [obj f]\n  (binding [*ratom-context* obj]\n    (f)))\n\n(defn- deref-capture [f r]\n  (set! (.-captured r) nil)\n  (when (dev?)\n    (set! (.-ratomGeneration r) (set! generation (inc generation))))\n  (let [res (in-context r f)\n        c (.-captured r)]\n    (set! (.-dirty? r) false)\n    ;; Optimize common case where derefs occur in same order\n    (when-not (arr-eq c (.-watching r))\n      (._update-watching r c))\n    res))\n\n(defn- notify-deref-watcher! [derefed]\n  (when-some [r *ratom-context*]\n    (let [c (.-captured r)]\n      (if (nil? c)\n        (set! (.-captured r) (array derefed))\n        (.push c derefed)))))\n\n(defn- check-watches [old new]\n  (when debug\n    (swap! -running + (- (count new) (count old))))\n  new)\n\n(defn- add-w [this key f]\n  (let [w (.-watches this)]\n    (set! (.-watches this) (check-watches w (assoc w key f)))\n    (set! (.-watchesArr this) nil)))\n\n(defn- remove-w [this key]\n  (let [w (.-watches this)]\n    (set! (.-watches this) (check-watches w (dissoc w key)))\n    (set! (.-watchesArr this) nil)))\n\n(defn- notify-w [this old new]\n  (let [w (.-watchesArr this)\n        a (if (nil? w)\n            ;; Copy watches to array for speed\n            (->> (.-watches this)\n                 (reduce-kv #(doto %1 (.push %2) (.push %3)) #js[])\n                 (set! (.-watchesArr this)))\n            w)]\n    (let [len (alength a)]\n      (loop [i 0]\n        (when (< i len)\n          (let [k (aget a i)\n                f (aget a (inc i))]\n            (f k this old new))\n          (recur (+ 2 i)))))))\n\n(defn- pr-atom [a writer opts s]\n  (-write writer (str \"#<\" s \" \"))\n  (pr-writer (binding [*ratom-context* nil] (-deref a)) writer opts)\n  (-write writer \">\"))\n\n\n;;; Queueing\n\n(defonce ^:private rea-queue nil)\n\n(defn- rea-enqueue [r]\n  (when (nil? rea-queue)\n    (set! rea-queue (array))\n    (batch/schedule))\n  (.push rea-queue r))\n\n(defn flush! []\n  (loop []\n    (let [q rea-queue]\n      (when-not (nil? q)\n        (set! rea-queue nil)\n        (dotimes [i (alength q)]\n          (._queued-run (aget q i)))\n        (recur)))))\n\n(set! batch/ratom-flush flush!)\n\n\n;;; Atom\n\n(defprotocol IReactiveAtom)\n\n(deftype RAtom [^:mutable state meta validator ^:mutable watches]\n  IAtom\n  IReactiveAtom\n\n  IEquiv\n  (-equiv [o other] (identical? o other))\n\n  IDeref\n  (-deref [this]\n    (notify-deref-watcher! this)\n    state)\n\n  IReset\n  (-reset! [a new-value]\n    (when-not (nil? validator)\n      (assert (validator new-value) \"Validator rejected reference state\"))\n    (let [old-value state]\n      (set! state new-value)\n      (when-not (nil? watches)\n        (notify-w a old-value new-value))\n      new-value))\n\n  ISwap\n  (-swap! [a f]          (-reset! a (f state)))\n  (-swap! [a f x]        (-reset! a (f state x)))\n  (-swap! [a f x y]      (-reset! a (f state x y)))\n  (-swap! [a f x y more] (-reset! a (apply f state x y more)))\n\n  IWithMeta\n  (-with-meta [_ new-meta] (RAtom. state new-meta validator watches))\n\n  IMeta\n  (-meta [_] meta)\n\n  IPrintWithWriter\n  (-pr-writer [a w opts] (pr-atom a w opts \"Atom:\"))\n\n  IWatchable\n  (-notify-watches [this old new] (notify-w this old new))\n  (-add-watch [this key f]        (add-w this key f))\n  (-remove-watch [this key]       (remove-w this key))\n\n  IHash\n  (-hash [this] (goog/getUid this)))\n\n(defn atom\n  \"Like clojure.core/atom, except that it keeps track of derefs.\"\n  ([x] (->RAtom x nil nil nil))\n  ([x & {:keys [meta validator]}] (->RAtom x meta validator nil)))\n\n\n;;; track\n\n(declare make-reaction)\n\n(def ^{:private true :const true} cache-key \"reagReactionCache\")\n\n(defn- cached-reaction [f o k obj destroy]\n  (let [m (aget o cache-key)\n        m (if (nil? m) {} m)\n        r (m k nil)]\n    (cond\n      (some? r) (-deref r)\n      (nil? *ratom-context*) (f)\n      :else (let [r (make-reaction\n                     f :on-dispose (fn [x]\n                                     (when debug (swap! -running dec))\n                                     (as-> (aget o cache-key) _\n                                       (dissoc _ k)\n                                       (aset o cache-key _))\n                                     (when (some? obj)\n                                       (set! (.-reaction obj) nil))\n                                     (when (some? destroy)\n                                       (destroy x))))\n                  v (-deref r)]\n              (aset o cache-key (assoc m k r))\n              (when debug (swap! -running inc))\n              (when (some? obj)\n                (set! (.-reaction obj) r))\n              v))))\n\n(deftype Track [f args ^:mutable reaction]\n  IReactiveAtom\n\n  IDeref\n  (-deref [this]\n    (if-some [r reaction]\n      (-deref r)\n      (cached-reaction #(apply f args) f args this nil)))\n\n  IEquiv\n  (-equiv [_ other]\n    (and (instance? Track other)\n         (= f (.-f other))\n         (= args (.-args other))))\n\n  IHash\n  (-hash [_] (hash [f args]))\n\n  IPrintWithWriter\n  (-pr-writer [a w opts] (pr-atom a w opts \"Track:\")))\n\n(defn make-track [f args]\n  (Track. f args nil))\n\n(defn make-track! [f args]\n  (let [t (make-track f args)\n        r (make-reaction #(-deref t)\n                         :auto-run true)]\n    @r\n    r))\n\n(defn track [f & args]\n  {:pre [(ifn? f)]}\n  (make-track f args))\n\n(defn track! [f & args]\n  {:pre [(ifn? f)]}\n  (make-track! f args))\n\n;;; cursor\n\n(deftype RCursor [ratom path ^:mutable reaction\n                  ^:mutable state ^:mutable watches]\n  IAtom\n  IReactiveAtom\n\n  IEquiv\n  (-equiv [_ other]\n    (and (instance? RCursor other)\n         (= path (.-path other))\n         (= ratom (.-ratom other))))\n\n  Object\n  (_peek [this]\n    (binding [*ratom-context* nil]\n      (-deref this)))\n\n  (_set-state [this oldstate newstate]\n    (when-not (identical? oldstate newstate)\n      (set! state newstate)\n      (when (some? watches)\n        (notify-w this oldstate newstate))))\n\n  IDeref\n  (-deref [this]\n    (let [oldstate state\n          newstate (if-some [r reaction]\n                     (-deref r)\n                     (let [f (if (satisfies? IDeref ratom)\n                               #(get-in @ratom path)\n                               #(ratom path))]\n                       (cached-reaction f ratom path this nil)))]\n      (._set-state this oldstate newstate)\n      newstate))\n\n  IReset\n  (-reset! [this new-value]\n    (let [oldstate state]\n      (._set-state this oldstate new-value)\n      (if (satisfies? IDeref ratom)\n        (if (= path [])\n          (reset! ratom new-value)\n          (swap! ratom assoc-in path new-value))\n        (ratom path new-value))\n      new-value))\n\n  ISwap\n  (-swap! [a f]          (-reset! a (f (._peek a))))\n  (-swap! [a f x]        (-reset! a (f (._peek a) x)))\n  (-swap! [a f x y]      (-reset! a (f (._peek a) x y)))\n  (-swap! [a f x y more] (-reset! a (apply f (._peek a) x y more)))\n\n  IPrintWithWriter\n  (-pr-writer [a w opts] (pr-atom a w opts (str \"Cursor: \" path)))\n\n  IWatchable\n  (-notify-watches [this old new] (notify-w this old new))\n  (-add-watch [this key f]        (add-w this key f))\n  (-remove-watch [this key]       (remove-w this key))\n\n  IHash\n  (-hash [_] (hash [ratom path])))\n\n(defn cursor\n  [src path]\n  (assert (or (satisfies? IReactiveAtom src)\n              (and (ifn? src)\n                   (not (vector? src))))\n          (str \"src must be a reactive atom or a function, not \"\n               (pr-str src)))\n  (->RCursor src path nil nil nil))\n\n\n;;; with-let support\n\n(defn with-let-destroy [v]\n  (when-some [f (.-destroy v)]\n    (f)))\n\n(defn with-let-values [key]\n  (if-some [c *ratom-context*]\n    (cached-reaction array c key\n                     nil with-let-destroy)\n    (array)))\n\n\n;;;; reaction\n\n(defprotocol IDisposable\n  (dispose! [this])\n  (add-on-dispose! [this f]))\n\n(defprotocol IRunnable\n  (run [this]))\n\n(defn- handle-reaction-change [this sender old new]\n  (._handle-change this sender old new))\n\n\n(deftype Reaction [f ^:mutable state ^:mutable ^boolean dirty? ^boolean nocache?\n                   ^:mutable watching ^:mutable watches ^:mutable auto-run\n                   ^:mutable caught]\n  IAtom\n  IReactiveAtom\n\n  IWatchable\n  (-notify-watches [this old new] (notify-w this old new))\n  (-add-watch [this key f]        (add-w this key f))\n  (-remove-watch [this key]\n    (let [was-empty (empty? watches)]\n      (remove-w this key)\n      (when (and (not was-empty)\n                 (empty? watches)\n                 (nil? auto-run))\n        (dispose! this))))\n\n  IReset\n  (-reset! [a newval]\n    (assert (fn? (.-on-set a)) \"Reaction is read only; on-set is not allowed\")\n    (let [oldval state]\n      (set! state newval)\n      (.on-set a oldval newval)\n      (notify-w a oldval newval)\n      newval))\n\n  ISwap\n  (-swap! [a f]          (-reset! a (f (._peek-at a))))\n  (-swap! [a f x]        (-reset! a (f (._peek-at a) x)))\n  (-swap! [a f x y]      (-reset! a (f (._peek-at a) x y)))\n  (-swap! [a f x y more] (-reset! a (apply f (._peek-at a) x y more)))\n\n  Object\n  (_peek-at [this]\n    (binding [*ratom-context* nil]\n      (-deref this)))\n\n  (_handle-change [this sender oldval newval]\n    (when-not (or (identical? oldval newval)\n                  dirty?)\n      (if (nil? auto-run)\n        (do\n          (set! dirty? true)\n          (rea-enqueue this))\n        (if (true? auto-run)\n          (._run this false)\n          (auto-run this)))))\n\n  (_update-watching [this derefed]\n    (let [new (set derefed)\n          old (set watching)]\n      (set! watching derefed)\n      (doseq [w (s/difference new old)]\n        (-add-watch w this handle-reaction-change))\n      (doseq [w (s/difference old new)]\n        (-remove-watch w this))))\n\n  (_queued-run [this]\n    (when (and dirty? (some? watching))\n      (._run this true)))\n\n  (_try-capture [this f]\n    (try\n      (set! caught nil)\n      (deref-capture f this)\n      (catch :default e\n        (set! state e)\n        (set! caught e)\n        (set! dirty? false))))\n\n  (_run [this check]\n    (let [oldstate state\n          res (if check\n                (._try-capture this f)\n                (deref-capture f this))]\n      (when-not nocache?\n        (set! state res)\n        ;; Use = to determine equality from reactions, since\n        ;; they are likely to produce new data structures.\n        (when-not (or (nil? watches)\n                      (= oldstate res))\n          (notify-w this oldstate res)))\n      res))\n\n  (_set-opts [this {:keys [auto-run on-set on-dispose no-cache]}]\n    (when (some? auto-run)\n      (set! (.-auto-run this) auto-run))\n    (when (some? on-set)\n      (set! (.-on-set this) on-set))\n    (when (some? on-dispose)\n      (set! (.-on-dispose this) on-dispose))\n    (when (some? no-cache)\n      (set! (.-nocache? this) no-cache)))\n\n  IRunnable\n  (run [this]\n    (flush!)\n    (._run this false))\n\n  IDeref\n  (-deref [this]\n    (when-some [e caught]\n      (throw e))\n    (let [non-reactive (nil? *ratom-context*)]\n      (when non-reactive\n        (flush!))\n      (if (and non-reactive (nil? auto-run))\n        (when dirty?\n          (let [oldstate state]\n            (set! state (f))\n            (when-not (or (nil? watches) (= oldstate state))\n              (notify-w this oldstate state))))\n        (do\n          (notify-deref-watcher! this)\n          (when dirty?\n            (._run this false)))))\n    state)\n\n  IDisposable\n  (dispose! [this]\n    (let [s state\n          wg watching]\n      (set! watching nil)\n      (set! state nil)\n      (set! auto-run nil)\n      (set! dirty? true)\n      (doseq [w (set wg)]\n        (-remove-watch w this))\n      (when (some? (.-on-dispose this))\n        (.on-dispose this s))\n      (when-some [a (.-on-dispose-arr this)]\n        (dotimes [i (alength a)]\n          ((aget a i) this)))))\n\n  (add-on-dispose! [this f]\n    ;; f is called with the reaction as argument when it is no longer active\n    (if-some [a (.-on-dispose-arr this)]\n      (.push a f)\n      (set! (.-on-dispose-arr this) (array f))))\n\n  IEquiv\n  (-equiv [o other] (identical? o other))\n\n  IPrintWithWriter\n  (-pr-writer [a w opts] (pr-atom a w opts (str \"Reaction \" (hash a) \":\")))\n\n  IHash\n  (-hash [this] (goog/getUid this)))\n\n\n(defn make-reaction [f & {:keys [auto-run on-set on-dispose]}]\n  (let [reaction (->Reaction f nil true false nil nil nil nil)]\n    (._set-opts reaction {:auto-run auto-run\n                          :on-set on-set\n                          :on-dispose on-dispose})\n    reaction))\n\n\n\n(def ^:private temp-reaction (make-reaction nil))\n\n(defn run-in-reaction [f obj key run opts]\n  (let [r temp-reaction\n        res (deref-capture f r)]\n    (when-not (nil? (.-watching r))\n      (set! temp-reaction (make-reaction nil))\n      (._set-opts r opts)\n      (set! (.-f r) f)\n      (set! (.-auto-run r) #(run obj))\n      (aset obj key r))\n    res))\n\n(defn check-derefs [f]\n  (let [ctx (js-obj)\n        res (in-context ctx f)]\n    [res (some? (.-captured ctx))]))\n\n\n;;; wrap\n\n(deftype Wrapper [^:mutable state callback ^:mutable ^boolean changed\n                  ^:mutable watches]\n\n  IAtom\n\n  IDeref\n  (-deref [this]\n    (when (dev?)\n      (when (and changed (some? *ratom-context*))\n        (warn \"derefing stale wrap: \"\n              (pr-str this))))\n    state)\n\n  IReset\n  (-reset! [this newval]\n    (let [oldval state]\n      (set! changed true)\n      (set! state newval)\n      (when (some? watches)\n        (notify-w this oldval newval))\n      (callback newval)\n      newval))\n\n  ISwap\n  (-swap! [a f]          (-reset! a (f state)))\n  (-swap! [a f x]        (-reset! a (f state x)))\n  (-swap! [a f x y]      (-reset! a (f state x y)))\n  (-swap! [a f x y more] (-reset! a (apply f state x y more)))\n\n  IEquiv\n  (-equiv [_ other]\n          (and (instance? Wrapper other)\n               ;; If either of the wrappers have changed, equality\n               ;; cannot be relied on.\n               (not changed)\n               (not (.-changed other))\n               (= state (.-state other))\n               (= callback (.-callback other))))\n\n  IWatchable\n  (-notify-watches [this old new] (notify-w this old new))\n  (-add-watch [this key f]        (add-w this key f))\n  (-remove-watch [this key]       (remove-w this key))\n\n  IPrintWithWriter\n  (-pr-writer [a w opts] (pr-atom a w opts \"Wrap:\")))\n\n(defn make-wrapper [value callback-fn args]\n  (->Wrapper value\n             (util/make-partial-fn callback-fn args)\n             false nil))\n\n\n\n\n#_(do\n  (defn ratom-perf []\n    (set! debug false)\n    (dotimes [_ 10]\n      (let [nite 100000\n            a (atom 0)\n            f (fn []\n                (quot @a 10))\n            mid (make-reaction f)\n            res (track! (fn []\n                          ;; (with-let [x 1])\n                          ;; @(track f)\n                          (inc @mid)\n                          ))]\n        @res\n        (time (dotimes [x nite]\n                (swap! a inc)\n                (flush!)))\n        (dispose! res))))\n  (ratom-perf))\n","~:reader-features",["^M",["~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings","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","names",["js/reagent","js/reagent.ratom","js/reagent.ratom.debug","reagent.ratom/debug","js/reagent.ratom.generation","reagent.ratom/generation","js/reagent.ratom.-running","reagent.ratom/-running","cljs.core.atom.cljs$core$IFn$_invoke$arity$1","reagent.ratom/reactive?","reagent.ratom/*ratom-context*","reagent.ratom/running","cljs.core/deref","reagent.ratom/arr-len","x","reagent.ratom/arr-eq","and__4036__auto__","len","y","or__4047__auto__","i","reagent.ratom/in-context","*ratom-context*-temp-val__20779","*ratom-context*-orig-val__20778","obj","f","reagent.ratom/deref-capture","r","c","res","reagent.ratom/notify-deref-watcher!","temp__5461__auto__","derefed","reagent.ratom/check-watches","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3","cljs.core/+","cljs.core/count","new","old","reagent.ratom/add-w","this","w","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3","key","reagent.ratom/remove-w","cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2","reagent.ratom/notify-w","cljs.core/reduce-kv","p1__20789#","G__20795","p2__20790#","p3__20791#","a","k","reagent.ratom/pr-atom","cljs.core/-write","writer","s","cljs.core/pr-writer","*ratom-context*-temp-val__20800","*ratom-context*-orig-val__20799","cljs.core/-deref","opts","js/reagent.ratom.rea-queue","reagent.ratom/rea-queue","reagent.ratom/rea-enqueue","reagent.impl.batching/schedule","reagent.ratom/flush!","q","n__4518__auto__","reagent.impl.batching/ratom-flush","reagent.ratom/IReactiveAtom","cljs.core/PROTOCOL_SENTINEL","writer__4291__auto__","reagent.ratom/RAtom","reagent.ratom/->RAtom","state","meta","validator","watches","o","other","js/Error","new-value","old-value","cljs.core.apply.cljs$core$IFn$_invoke$arity$5","more","new-meta","goog/getUid","G__20817","reagent.ratom/atom","i__4642__auto__","len__4641__auto__","args-arr__4662__auto__","cljs.core/IndexedSeq","argseq__4663__auto__","p__20818","map__20819","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","cljs.core/first","seq20814","cljs.core/next","self__4628__auto__","G__20815","reagent.ratom/cache-key","reagent.ratom/cached-reaction","m","G__20821","G__20822","G__20823","reagent.ratom/make-reaction","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2","cljs.core/dec","_","destroy","cljs.core/inc","v","reagent.ratom/Track","reagent.ratom/->Track","args","reaction","temp__5459__auto__","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","cljs.core/hash","reagent.ratom/make-track","reagent.ratom/make-track!","G__20850","G__20851","G__20852","t","args__4647__auto__","reagent.ratom/track","argseq__4648__auto__","seq20853","G__20854","cljs.core/ifn?","reagent.ratom/track!","seq20855","G__20857","reagent.ratom/RCursor","reagent.ratom/->RCursor","ratom","path","*ratom-context*-temp-val__20890","*ratom-context*-orig-val__20889","oldstate","newstate","cljs.core/native-satisfies?","cljs.core/IDeref","cljs.core.get_in.cljs$core$IFn$_invoke$arity$2","cljs.core/reset!","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4","cljs.core/assoc-in","G__20896","G__20897","G__20898","G__20899","G__20900","G__20901","reagent.ratom/cursor","src","cljs.core/vector?","cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic","reagent.ratom/with-let-destroy","reagent.ratom/with-let-values","cljs.core/array","reagent.ratom/dispose!","goog/typeOf","x__4347__auto__","m__4348__auto__","cljs.core/missing-protocol","reagent.ratom/add-on-dispose!","reagent.ratom/IDisposable","reagent.ratom/run","reagent.ratom/IRunnable","reagent.ratom/handle-reaction-change","sender","p__21003","map__21005","reagent.ratom/Reaction","reagent.ratom/->Reaction","dirty?","nocache?","watching","auto-run","caught","cljs.core/empty?","was-empty","cljs.core/fn?","newval","oldval","G__21013","G__21014","G__21015","G__21016","G__21017","G__21018","*ratom-context*-temp-val__20992","*ratom-context*-orig-val__20991","cljs.core/set","cljs.core/seq","i__20997","count__20996","chunk__20995","seq__20994","temp__5457__auto__","cljs.core/chunked-seq?","cljs.core/chunk-first","cljs.core/chunk-rest","c__4461__auto__","clojure.set.difference.cljs$core$IFn$_invoke$arity$2","cljs.core/-add-watch","i__21001","count__21000","chunk__20999","seq__20998","cljs.core/-remove-watch","e21002","e","check","on-set","on-dispose","no-cache","non-reactive","i__21011","count__21010","chunk__21009","seq__21008","wg","fexpr__21012","p__21021","map__21022","seq21019","G__21020","reagent.ratom/temp-reaction","reagent.ratom/run-in-reaction","run","reagent.ratom/check-derefs","ctx","reagent.ratom/Wrapper","reagent.ratom/->Wrapper","callback","changed","reagent.debug/has-console","reagent.debug/tracking","reagent.debug/track-console","js/console","cljs.core/not","reagent.ratom/make-wrapper","value","reagent.impl.util/make-partial-fn","callback-fn"]]],"~:cache-keys",["~#cmap",[["^1J","reagent/impl/batching.cljs"],[1546985224927,"^1:","^19","^F","~$reagent.interop","^14","~$clojure.string"],["^W","^19"],[1546977868000],["^1J","goog/math/math.js"],[1546977570058,"^1:","~$goog.array","~$goog.asserts"],["^W","^F"],[1546985224000],["^1J","goog/array/array.js"],[1546977570058,"^1:","^1Z"],["^1J","reagent/impl/util.cljs"],[1546985224927,"^1:","^19","^F","^1W","^1X"],["^1J","goog/debug/error.js"],[1546977570058,"^1:"],["^1J","goog/dom/nodetype.js"],[1546977570058,"^1:"],["^1J","reagent/ratom.cljs"],[1546985224927,"^1:","^19","^14","^F","^16","^18"],["^1J","goog/object/object.js"],[1546977570058,"^1:"],"~:SHADOW-TIMESTAMP",[1546977871000,1546977868000],["^W","^D"],[1546985224000],["^1J","goog/math/long.js"],[1546977570058,"^1:","^1Z","~$goog.reflect"],["^W","^1W"],[1546985224000],["^1J","goog/functions/functions.js"],[1546977570058,"^1:"],["^1J","goog/structs/map.js"],[1546977570058,"^1:","~$goog.iter.Iterator","~$goog.iter.StopIteration","~$goog.object"],["^1J","goog/asserts/asserts.js"],[1546977570058,"^1:","~$goog.debug.Error","~$goog.dom.NodeType","~$goog.string"],["^1J","goog/uri/uri.js"],[1546977570058,"^1:","^1Y","^1Z","^26","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"],["^1J","goog/base.js"],[1546977570058],["^1J","goog/structs/structs.js"],[1546977570058,"^1:","^1Y","^23"],["^1J","clojure/string.cljs"],[1546977868398,"^1:","^19","^26","~$goog.string.StringBuffer"],["^1J","goog/string/string.js"],[1546977570058,"^1:"],["^1J","goog/reflect/reflect.js"],[1546977570058,"^1:"],["^1J","goog/string/stringbuffer.js"],[1546977570058,"^1:"],["^1J","goog/iter/iter.js"],[1546977570058,"^1:","^1Y","^1Z","~$goog.functions","~$goog.math"],["^1J","reagent/interop.cljs"],[1546985224927,"^1:","^19"],["^1J","cljs/core.cljs"],[1546977868398,"~$goog.math.Long","~$goog.math.Integer","^26","^23","^1Y","~$goog.Uri","^2<"],["^1J","reagent/debug.cljs"],[1546985224927,"^1:","^19"],["^1J","goog/math/integer.js"],[1546977570058,"^1:"],["^1J","clojure/set.cljs"],[1546977868398,"^1:","^19"],["^1J","goog/uri/utils.js"],[1546977570058,"^1:","^1Y","^1Z","^26"]]],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","reagent/ratom.cljs","^7",1,"^8",5,"^9",1,"^:",18],"^;",["^ ","^<","^=","^>","^?","^@","^A"],"~:shadow/protocol-prefixes",["^M",["reagent$ratom$IRunnable$","reagent$ratom$IDisposable$"]],"^B",["^ ","^C","^D","^E","^F","^G","^F","^H","^F","^I","^F","^J","^F","^K","^F"],"^L",["^M",["^N"]],"^O",["^ ","^C",["^ ","^P",["^Q",[["^R","~$&","^S"]]],"^7",17,"^8",1,"^6","reagent/ratom.clj","^T","^U","^V","^D","^W",true],"^X",["^ ","^P",["^Q",[["~$&","^S"]]],"^7",5,"^8",1,"^6","reagent/ratom.clj","^T","^Y","^V","^D","^W",true],"^Z",["^ ","^P",["^Q",[["~$&","^S"]]],"^[","Runs body immediately, and runs again whenever atoms deferenced in the body change. Body should side effect.","^7",9,"^8",1,"^6","reagent/ratom.clj","^T","^10","^V","^D","^W",true]],"~:shadow/js-access-properties",["^M",["_run","_peek-at","_update-watching","_queued-run","_set-opts","_peek","_set-state","_handle-change","_try-capture"]],"^T","^D","^12",null,"^13",["^ ","^14","^14","^15","^14","^F","^F","^16","^16","^17","^16","^18","^18","~$s","^18","^19","^19","^1:","^1:"],"^1;",["^M",["^1<","^1="]],"~:shadow/js-access-global",["^M",["Error"]],"^1>",null,"~:defs",["^ ","~$pr-atom",["^ ","~:protocol-inline",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",89,"^8",8,"^9",89,"^:",15,"~:private",true,"^P",["^Q",["~$quote",["^Q",[["~$a","~$writer","~$opts","~$s"]]]]]],"^2I",true,"^T","~$reagent.ratom/pr-atom","^6","reagent/ratom.cljs","^:",15,"~:method-params",["^Q",[["~$a","^2K","^2L","~$s"]]],"~:protocol-impl",null,"~:arglists-meta",["^Q",[null,null]],"^8",1,"~:variadic?",false,"^7",89,"~:ret-tag","~$any","^9",89,"~:max-fixed-arity",4,"~:fn-var",true,"^P",["^Q",["^2J",["^Q",[["~$a","^2K","^2L","~$s"]]]]]],"~$->RCursor",["^ ","^2H",null,"^5",["^ ","~:protocols",["^M",["~$cljs.core/IWatchable","~$cljs.core/IAtom","~$cljs.core/IEquiv","~$cljs.core/IHash","~$cljs.core/Object","~$cljs.core/IReset","~$cljs.core/ISwap","~$reagent.ratom/IReactiveAtom","~$cljs.core/IDeref","~$cljs.core/IPrintWithWriter"]],"^6","reagent/ratom.cljs","^:",17,"^8",10,"~:factory","~:positional","^7",243,"^9",243,"^P",["^Q",["^2J",["^Q",[["~$ratom","~$path","^X","~$state","~$watches"]]]]],"~:skip-protocol-flag",["^M",["^2X","^2Y","^2Z","^2[","^31","^32","^34","^35"]],"^[","Positional factory function for reagent.ratom/RCursor."],"^2W",["^M",["^2X","^2Y","^2Z","^2[","^30","^31","^32","^33","^34","^35"]],"^T","~$reagent.ratom/->RCursor","^6","reagent/ratom.cljs","^:",17,"^2N",["^Q",[["^38","^39","^X","^3:","^3;"]]],"^2O",null,"^2P",["^Q",[null,null]],"^8",1,"^2Q",false,"^36","^37","^7",243,"^2R","~$reagent.ratom/RCursor","^9",243,"^2T",5,"^2U",true,"^P",["^Q",["^2J",["^Q",[["^38","^39","^X","^3:","^3;"]]]]],"^3<",["^M",["^2X","^2Y","^2Z","^2[","^31","^32","^34","^35"]],"^[","Positional factory function for reagent.ratom/RCursor."],"~$notify-deref-watcher!",["^ ","^2H",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",51,"^8",8,"^9",51,"^:",29,"^2I",true,"^P",["^Q",["^2J",["^Q",[["~$derefed"]]]]]],"^2I",true,"^T","~$reagent.ratom/notify-deref-watcher!","^6","reagent/ratom.cljs","^:",29,"^2N",["^Q",[["^3@"]]],"^2O",null,"^2P",["^Q",[null,null]],"^8",1,"^2Q",false,"^7",51,"^2R",["^M",[null,"^2S","~$clj-nil"]],"^9",51,"^2T",1,"^2U",true,"^P",["^Q",["^2J",["^Q",[["^3@"]]]]]],"~$rea-enqueue",["^ ","^2H",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",99,"^8",8,"^9",99,"^:",19,"^2I",true,"^P",["^Q",["^2J",["^Q",[["~$r"]]]]]],"^2I",true,"^T","~$reagent.ratom/rea-enqueue","^6","reagent/ratom.cljs","^:",19,"^2N",["^Q",[["~$r"]]],"^2O",null,"^2P",["^Q",[null,null]],"^8",1,"^2Q",false,"^7",99,"^2R","^2S","^9",99,"^2T",1,"^2U",true,"^P",["^Q",["^2J",["^Q",[["~$r"]]]]]],"~$in-context",["^ ","^2H",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",35,"^8",8,"^9",35,"^:",18,"^2I",true,"^P",["^Q",["^2J",["^Q",[["~$obj","~$f"]]]]]],"^2I",true,"^T","~$reagent.ratom/in-context","^6","reagent/ratom.cljs","^:",18,"^2N",["^Q",[["^3F","~$f"]]],"^2O",null,"^2P",["^Q",[null,null]],"^8",1,"^2Q",false,"^7",35,"^9",35,"^2T",2,"^2U",true,"^P",["^Q",["^2J",["^Q",[["^3F","~$f"]]]]]],"~$make-track",["^ ","^2H",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",223,"^8",7,"^9",223,"^:",17,"^P",["^Q",["^2J",["^Q",[["~$f","~$args"]]]]]],"^T","~$reagent.ratom/make-track","^6","reagent/ratom.cljs","^:",17,"^2N",["^Q",[["~$f","^3I"]]],"^2O",null,"^2P",["^Q",[null,null]],"^8",1,"^2Q",false,"^7",223,"^2R","~$reagent.ratom/Track","^9",223,"^2T",2,"^2U",true,"^P",["^Q",["^2J",["^Q",[["~$f","^3I"]]]]]],"~$RAtom",["^ ","~:num-fields",4,"^2W",["^M",["^2X","^2Y","^2Z","^2[","^31","^32","^33","~$cljs.core/IMeta","^34","^35","~$cljs.core/IWithMeta"]],"^T","~$reagent.ratom/RAtom","^6","reagent/ratom.cljs","^:",15,"~:type",true,"^8",10,"^7",121,"~:record",false,"^9",121,"~:tag","~$function","^3<",["^M",["^2X","^2Y","^2Z","^2[","^31","^32","^3N","^34","^35","^3O"]]],"^N",["^ ","^2H",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",166,"^8",7,"^9",166,"^:",11,"^P",["^Q",["^2J",["^Q",[["~$x"],["~$x","~$&",["^ ","~:keys",["~$meta","~$validator"]]]]]]],"^[","Like clojure.core/atom, except that it keeps track of derefs.","~:top-fn",["^ ","^2Q",true,"^2T",1,"^2N",["^Q",[["~$x"]]],"^P",["^Q",[["~$x"],["~$x","~$&",["^ ","^3U",["^3V","^3W"]]]]],"^2P",["^Q",[null,null]]]],"^T","~$reagent.ratom/atom","^6","reagent/ratom.cljs","^:",11,"^3X",["^ ","^2Q",true,"^2T",1,"^2N",["^Q",[["~$x"]]],"^P",["^Q",[["~$x"],["~$x","~$&",["^ ","^3U",["^3V","^3W"]]]]],"^2P",["^Q",[null,null]]],"^2N",["^Q",[["~$x"]]],"^2O",null,"^2P",["^Q",[null,null]],"^8",1,"^2Q",true,"^7",166,"^9",166,"^2T",1,"^2U",true,"^P",["^Q",[["~$x"],["~$x","~$&",["^ ","^3U",["^3V","^3W"]]]]],"^[","Like clojure.core/atom, except that it keeps track of derefs."],"~$notify-w",["^ ","^2H",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",73,"^8",8,"^9",73,"^:",16,"^2I",true,"^P",["^Q",["^2J",["^Q",[["~$this","~$old","~$new"]]]]]],"^2I",true,"^T","~$reagent.ratom/notify-w","^6","reagent/ratom.cljs","^:",16,"^2N",["^Q",[["^3[","^40","^41"]]],"^2O",null,"^2P",["^Q",[null,null]],"^8",1,"^2Q",false,"^7",73,"^2R","^3B","^9",73,"^2T",3,"^2U",true,"^P",["^Q",["^2J",["^Q",[["^3[","^40","^41"]]]]]],"~$->Reaction",["^ ","^2H",null,"^5",["^ ","^2W",["^M",["^2X","^2Y","^2Z","^2[","^30","^31","^32","^33","~$reagent.ratom/IRunnable","~$reagent.ratom/IDisposable","^34","^35"]],"^6","reagent/ratom.cljs","^:",18,"^8",10,"^36","^37","^7",341,"^9",341,"^P",["^Q",["^2J",["^Q",[["~$f","^3:","~$dirty?","~$nocache?","~$watching","^3;","~$auto-run","~$caught"]]]]],"^3<",["^M",["^2X","^2Y","^2Z","^2[","^31","^32","^34","^35"]],"^[","Positional factory function for reagent.ratom/Reaction."],"^2W",["^M",["^2X","^2Y","^2Z","^2[","^30","^31","^32","^33","^44","^45","^34","^35"]],"^T","~$reagent.ratom/->Reaction","^6","reagent/ratom.cljs","^:",18,"^2N",["^Q",[["~$f","^3:","^46","^47","^48","^3;","^49","^4:"]]],"^2O",null,"^2P",["^Q",[null,null]],"^8",1,"^2Q",false,"^36","^37","^7",341,"^2R","~$reagent.ratom/Reaction","^9",341,"^2T",8,"^2U",true,"^P",["^Q",["^2J",["^Q",[["~$f","^3:","^46","^47","^48","^3;","^49","^4:"]]]]],"^3<",["^M",["^2X","^2Y","^2Z","^2[","^31","^32","^34","^35"]],"^[","Positional factory function for reagent.ratom/Reaction."],"~$make-wrapper",["^ ","^2H",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",568,"^8",7,"^9",568,"^:",19,"^P",["^Q",["^2J",["^Q",[["~$value","~$callback-fn","^3I"]]]]]],"^T","~$reagent.ratom/make-wrapper","^6","reagent/ratom.cljs","^:",19,"^2N",["^Q",[["^4>","^4?","^3I"]]],"^2O",null,"^2P",["^Q",[null,null]],"^8",1,"^2Q",false,"^7",568,"^2R","~$reagent.ratom/Wrapper","^9",568,"^2T",3,"^2U",true,"^P",["^Q",["^2J",["^Q",[["^4>","^4?","^3I"]]]]]],"~$IReactiveAtom",["^ ","^5",["^ ","^6","reagent/ratom.cljs","^7",119,"^8",14,"^9",119,"^:",27,"^[",null,"~:protocol-symbol",true,"~:jsdoc",["^Q",["@interface"]],"~:protocol-info",["^ ","~:methods",["^ "]]],"^4C",true,"^T","^33","^6","reagent/ratom.cljs","^:",27,"^8",1,"^7",119,"^4E",["^ ","^4F",["^ "]],"~:info",null,"^9",119,"^3S","^2S","~:impls",["^M",["^3>","^3K","^4<","^3P"]],"^[",null,"^4D",["^Q",["@interface"]]],"~$track",["^ ","^2H",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",233,"^8",7,"^9",233,"^:",12,"^P",["^Q",["^2J",["^Q",[["~$f","~$&","^3I"]]]]],"^3X",["^ ","^2Q",true,"^2T",1,"^2N",[["^Q",["~$f","^3I"]]],"^P",["^Q",[["~$f","~$&","^3I"]]],"^2P",["^Q",[null]]]],"^T","~$reagent.ratom/track","^6","reagent/ratom.cljs","^:",12,"^3X",["^ ","^2Q",true,"^2T",1,"^2N",[["^Q",["~$f","^3I"]]],"^P",["^Q",[["~$f","~$&","^3I"]]],"^2P",["^Q",[null]]],"^2N",[["^Q",["~$f","^3I"]]],"^2O",null,"^2P",["^Q",[null]],"^8",1,"^2Q",true,"^7",233,"^2R","^2S","^9",233,"^2T",1,"^2U",true,"^P",["^Q",[["~$f","~$&","^3I"]]]],"~$dispose!",["^ ","^2H",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",331,"^8",4,"^9",331,"^:",12,"~:protocol","^45","^[",null,"^P",["^Q",["^2J",["^Q",[["^3["]]]]]],"^4L","^45","^T","~$reagent.ratom/dispose!","^6","reagent/ratom.cljs","^:",12,"^2N",["^Q",[["^3["]]],"^2O",null,"^2P",["^Q",[null,null]],"^8",1,"^2Q",false,"^7",330,"^2R","^2S","^9",331,"^2T",1,"^2U",true,"^P",["^Q",["^2J",["^Q",[["^3["]]]]],"^[",null],"~$arr-eq",["^ ","^2H",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",26,"^8",17,"^9",26,"^:",23,"^3S","~$boolean","^2I",true,"^P",["^Q",["^2J",["^Q",[["~$x","~$y"]]]]]],"^2I",true,"^T","~$reagent.ratom/arr-eq","^6","reagent/ratom.cljs","^:",23,"^2N",["^Q",[["~$x","~$y"]]],"^2O",null,"^2P",["^Q",[null,null]],"^8",1,"^2Q",false,"^7",26,"^2R","^4O","^9",26,"^2T",2,"^3S","^4O","^2U",true,"^P",["^Q",["^2J",["^Q",[["~$x","~$y"]]]]]],"~$handle-reaction-change",["^ ","^2H",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",337,"^8",8,"^9",337,"^:",30,"^2I",true,"^P",["^Q",["^2J",["^Q",[["^3[","~$sender","^40","^41"]]]]]],"^2I",true,"^T","~$reagent.ratom/handle-reaction-change","^6","reagent/ratom.cljs","^:",30,"^2N",["^Q",[["^3[","^4R","^40","^41"]]],"^2O",null,"^2P",["^Q",[null,null]],"^8",1,"^2Q",false,"^7",337,"^2R","^2S","^9",337,"^2T",4,"^2U",true,"^P",["^Q",["^2J",["^Q",[["^3[","^4R","^40","^41"]]]]]],"~$run",["^ ","^2H",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",335,"^8",4,"^9",335,"^:",7,"^4L","^44","^[",null,"^P",["^Q",["^2J",["^Q",[["^3["]]]]]],"^4L","^44","^T","~$reagent.ratom/run","^6","reagent/ratom.cljs","^:",7,"^2N",["^Q",[["^3["]]],"^2O",null,"^2P",["^Q",[null,null]],"^8",1,"^2Q",false,"^7",334,"^2R","^2S","^9",335,"^2T",1,"^2U",true,"^P",["^Q",["^2J",["^Q",[["^3["]]]]],"^[",null],"~$add-on-dispose!",["^ ","^2H",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",332,"^8",4,"^9",332,"^:",19,"^4L","^45","^[",null,"^P",["^Q",["^2J",["^Q",[["^3[","~$f"]]]]]],"^4L","^45","^T","~$reagent.ratom/add-on-dispose!","^6","reagent/ratom.cljs","^:",19,"^2N",["^Q",[["^3[","~$f"]]],"^2O",null,"^2P",["^Q",[null,null]],"^8",1,"^2Q",false,"^7",330,"^2R","^2S","^9",332,"^2T",2,"^2U",true,"^P",["^Q",["^2J",["^Q",[["^3[","~$f"]]]]],"^[",null],"~$temp-reaction",["^ ","^T","~$reagent.ratom/temp-reaction","^6","reagent/ratom.cljs","^7",500,"^8",1,"^9",500,"^:",29,"^2I",true,"^5",["^ ","^6","reagent/ratom.cljs","^7",500,"^8",16,"^9",500,"^:",29,"^2I",true],"^3S","^2S"],"~$cache-key",["^ ","^5",["^ ","^6","reagent/ratom.cljs","^7",176,"^8",35,"^9",176,"^:",44,"^2I",true,"~:const",true],"^2I",true,"^T","~$reagent.ratom/cache-key","^6","reagent/ratom.cljs","^:",44,"~:const-expr",["^ ","^11","^4[","~:val","reagReactionCache","~:env",["^ ","~:context","~:expr"],"^1?","reagReactionCache","^3S","~$string"],"^8",1,"^4[",true,"^7",176,"^9",176,"^3S","^56"],"~$make-track!",["^ ","^2H",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",226,"^8",7,"^9",226,"^:",18,"^P",["^Q",["^2J",["^Q",[["~$f","^3I"]]]]]],"^T","~$reagent.ratom/make-track!","^6","reagent/ratom.cljs","^:",18,"^2N",["^Q",[["~$f","^3I"]]],"^2O",null,"^2P",["^Q",[null,null]],"^8",1,"^2Q",false,"^7",226,"^2R","^2S","^9",226,"^2T",2,"^2U",true,"^P",["^Q",["^2J",["^Q",[["~$f","^3I"]]]]]],"~$generation",["^ ","^T","~$reagent.ratom/generation","^6","reagent/ratom.cljs","^7",11,"^8",1,"^9",11,"^:",30,"^2I",true,"^5",["^ ","^6","reagent/ratom.cljs","^7",11,"^8",20,"^9",11,"^:",30,"^2I",true],"^3S","~$number"],"~$run-in-reaction",["^ ","^2H",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",502,"^8",7,"^9",502,"^:",22,"^P",["^Q",["^2J",["^Q",[["~$f","^3F","~$key","^4T","^2L"]]]]]],"^T","~$reagent.ratom/run-in-reaction","^6","reagent/ratom.cljs","^:",22,"^2N",["^Q",[["~$f","^3F","^5=","^4T","^2L"]]],"^2O",null,"^2P",["^Q",[null,null]],"^8",1,"^2Q",false,"^7",502,"^2R","^2S","^9",502,"^2T",5,"^2U",true,"^P",["^Q",["^2J",["^Q",[["~$f","^3F","^5=","^4T","^2L"]]]]]],"~$IDisposable",["^ ","^5",["^ ","^6","reagent/ratom.cljs","^7",330,"^8",14,"^9",330,"^:",25,"^[",null,"^4C",true,"^4D",["^Q",["@interface"]],"^4E",["^ ","^4F",["^ ","^4K",[["^3["]],"^4V",[["^3[","~$f"]]]]],"^4C",true,"^T","^45","^6","reagent/ratom.cljs","^:",25,"^8",1,"^7",330,"^4E",["^ ","^4F",["^ ","^4K",[["^3["]],"^4V",[["^3[","~$f"]]]],"^4G",null,"^9",330,"^3S","^2S","^4H",["^M",["^4<"]],"^[",null,"^4D",["^Q",["@interface"]]],"~$check-watches",["^ ","^2H",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",58,"^8",8,"^9",58,"^:",21,"^2I",true,"^P",["^Q",["^2J",["^Q",[["^40","^41"]]]]]],"^2I",true,"^T","~$reagent.ratom/check-watches","^6","reagent/ratom.cljs","^:",21,"^2N",["^Q",[["^40","^41"]]],"^2O",null,"^2P",["^Q",[null,null]],"^8",1,"^2Q",false,"^7",58,"^9",58,"^2T",2,"^2U",true,"^P",["^Q",["^2J",["^Q",[["^40","^41"]]]]]],"~$with-let-destroy",["^ ","^2H",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",317,"^8",7,"^9",317,"^:",23,"^P",["^Q",["^2J",["^Q",[["~$v"]]]]]],"^T","~$reagent.ratom/with-let-destroy","^6","reagent/ratom.cljs","^:",23,"^2N",["^Q",[["~$v"]]],"^2O",null,"^2P",["^Q",[null,null]],"^8",1,"^2Q",false,"^7",317,"^2R",["^M",["^2S","^3B"]],"^9",317,"^2T",1,"^2U",true,"^P",["^Q",["^2J",["^Q",[["~$v"]]]]]],"~$make-reaction",["^ ","^2H",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",491,"^8",7,"^9",491,"^:",20,"^P",["^Q",["^2J",["^Q",[["~$f","~$&",["^ ","^3U",["^49","~$on-set","~$on-dispose"]]]]]]],"^3X",["^ ","^2Q",true,"^2T",1,"^2N",[["^Q",["~$f",["^ ","^3U",["^49","^5E","^5F"]]]]],"^P",["^Q",[["~$f","~$&",["^ ","^3U",["^49","^5E","^5F"]]]]],"^2P",["^Q",[null]]]],"^T","~$reagent.ratom/make-reaction","^6","reagent/ratom.cljs","^:",20,"^3X",["^ ","^2Q",true,"^2T",1,"^2N",[["^Q",["~$f",["^ ","^3U",["^49","^5E","^5F"]]]]],"^P",["^Q",[["~$f","~$&",["^ ","^3U",["^49","^5E","^5F"]]]]],"^2P",["^Q",[null]]],"^2N",[["^Q",["~$f",["^ ","^3U",["^49","^5E","^5F"]]]]],"^2O",null,"^2P",["^Q",[null]],"^8",1,"^2Q",true,"^7",491,"^2R","^2S","^9",491,"^2T",1,"^2U",true,"^P",["^Q",[["~$f","~$&",["^ ","^3U",["^49","^5E","^5F"]]]]]],"~$add-w",["^ ","^2H",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",63,"^8",8,"^9",63,"^:",13,"^2I",true,"^P",["^Q",["^2J",["^Q",[["^3[","^5=","~$f"]]]]]],"^2I",true,"^T","~$reagent.ratom/add-w","^6","reagent/ratom.cljs","^:",13,"^2N",["^Q",[["^3[","^5=","~$f"]]],"^2O",null,"^2P",["^Q",[null,null]],"^8",1,"^2Q",false,"^7",63,"^9",63,"^2T",3,"^2U",true,"^P",["^Q",["^2J",["^Q",[["^3[","^5=","~$f"]]]]]],"~$Reaction",["^ ","^3M",8,"^2W",["^M",["^2X","^2Y","^2Z","^2[","^30","^31","^32","^33","^44","^45","^34","^35"]],"^T","^4<","^6","reagent/ratom.cljs","^:",18,"^3Q",true,"^8",10,"^7",341,"^3R",false,"^9",341,"^3S","^3T","^3<",["^M",["^2X","^2Y","^2Z","^2[","^31","^32","^34","^35"]]],"~$flush!",["^ ","^2H",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",105,"^8",7,"^9",105,"^:",13,"^P",["^Q",["^2J",["^Q",[[]]]]]],"^T","~$reagent.ratom/flush!","^6","reagent/ratom.cljs","^:",13,"^2N",["^Q",[[]]],"^2O",null,"^2P",["^Q",[null,null]],"^8",1,"^2Q",false,"^7",105,"^2R","^3B","^9",105,"^2T",0,"^2U",true,"^P",["^Q",["^2J",["^Q",[[]]]]]],"~$RCursor",["^ ","^3M",5,"^2W",["^M",["^2X","^2Y","^2Z","^2[","^30","^31","^32","^33","^34","^35"]],"^T","^3>","^6","reagent/ratom.cljs","^:",17,"^3Q",true,"^8",10,"^7",243,"^3R",false,"^9",243,"^3S","^3T","^3<",["^M",["^2X","^2Y","^2Z","^2[","^31","^32","^34","^35"]]],"~$cached-reaction",["^ ","^2H",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",178,"^8",8,"^9",178,"^:",23,"^2I",true,"^P",["^Q",["^2J",["^Q",[["~$f","~$o","~$k","^3F","~$destroy"]]]]]],"^2I",true,"^T","~$reagent.ratom/cached-reaction","^6","reagent/ratom.cljs","^:",23,"^2N",["^Q",[["~$f","~$o","~$k","^3F","^5O"]]],"^2O",null,"^2P",["^Q",[null,null]],"^8",1,"^2Q",false,"^7",178,"^2R","^2S","^9",178,"^2T",5,"^2U",true,"^P",["^Q",["^2J",["^Q",[["~$f","~$o","~$k","^3F","^5O"]]]]]],"~$Track",["^ ","^3M",3,"^2W",["^M",["^2Z","^2[","^33","^34","^35"]],"^T","^3K","^6","reagent/ratom.cljs","^:",15,"^3Q",true,"^8",10,"^7",202,"^3R",false,"^9",202,"^3S","^3T","^3<",["^M",["^2Z","^2[","^34","^35"]]],"~$debug",["^ ","^T","~$reagent.ratom/debug","^6","reagent/ratom.cljs","^7",10,"^8",1,"^9",10,"^:",24,"^3S","^4O","^5",["^ ","^6","reagent/ratom.cljs","^7",10,"^8",19,"^9",10,"^:",24,"^3S","^4O"]],"~$-running",["^ ","^T","~$reagent.ratom/-running","^6","reagent/ratom.cljs","^7",12,"^8",1,"^9",12,"^:",28,"^2I",true,"^5",["^ ","^6","reagent/ratom.cljs","^7",12,"^8",20,"^9",12,"^:",28,"^2I",true],"^3S","^2S"],"~$cursor",["^ ","^2H",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",305,"^8",7,"^9",305,"^:",13,"^P",["^Q",["^2J",["^Q",[["~$src","^39"]]]]]],"^T","~$reagent.ratom/cursor","^6","reagent/ratom.cljs","^:",13,"^2N",["^Q",[["^5W","^39"]]],"^2O",null,"^2P",["^Q",[null,null]],"^8",1,"^2Q",false,"^7",305,"^2R","^3>","^9",305,"^2T",2,"^2U",true,"^P",["^Q",["^2J",["^Q",[["^5W","^39"]]]]]],"~$Wrapper",["^ ","^3M",4,"^2W",["^M",["^2X","^2Y","^2Z","^31","^32","^34","^35"]],"^T","^4A","^6","reagent/ratom.cljs","^:",17,"^3Q",true,"^8",10,"^7",521,"^3R",false,"^9",521,"^3S","^3T","^3<",["^M",["^2X","^2Y","^2Z","^31","^32","^34","^35"]]],"~$running",["^ ","^2H",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",20,"^8",7,"^9",20,"^:",14,"^P",["^Q",["^2J",["^Q",[[]]]]]],"^T","~$reagent.ratom/running","^6","reagent/ratom.cljs","^:",14,"^2N",["^Q",[[]]],"^2O",null,"^2P",["^Q",[null,null]],"^8",1,"^2Q",false,"^7",20,"^2R","^2S","^9",20,"^2T",0,"^2U",true,"^P",["^Q",["^2J",["^Q",[[]]]]]],"~$IRunnable",["^ ","^5",["^ ","^6","reagent/ratom.cljs","^7",334,"^8",14,"^9",334,"^:",23,"^[",null,"^4C",true,"^4D",["^Q",["@interface"]],"^4E",["^ ","^4F",["^ ","^4T",[["^3["]]]]],"^4C",true,"^T","^44","^6","reagent/ratom.cljs","^:",23,"^8",1,"^7",334,"^4E",["^ ","^4F",["^ ","^4T",[["^3["]]]],"^4G",null,"^9",334,"^3S","^2S","^4H",["^M",["^4<"]],"^[",null,"^4D",["^Q",["@interface"]]],"~$reactive?",["^ ","^2H",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",14,"^8",16,"^9",14,"^:",25,"^3S","^4O","^P",["^Q",["^2J",["^Q",[[]]]]]],"^T","~$reagent.ratom/reactive?","^6","reagent/ratom.cljs","^:",25,"^2N",["^Q",[[]]],"^2O",null,"^2P",["^Q",[null,null]],"^8",1,"^2Q",false,"^7",14,"^2R","^4O","^9",14,"^2T",0,"^3S","^4O","^2U",true,"^P",["^Q",["^2J",["^Q",[[]]]]]],"~$deref-capture",["^ ","^2H",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",39,"^8",8,"^9",39,"^:",21,"^2I",true,"^P",["^Q",["^2J",["^Q",[["~$f","~$r"]]]]]],"^2I",true,"^T","~$reagent.ratom/deref-capture","^6","reagent/ratom.cljs","^:",21,"^2N",["^Q",[["~$f","~$r"]]],"^2O",null,"^2P",["^Q",[null,null]],"^8",1,"^2Q",false,"^7",39,"^2R","^2S","^9",39,"^2T",2,"^2U",true,"^P",["^Q",["^2J",["^Q",[["~$f","~$r"]]]]]],"~$rea-queue",["^ ","^T","~$reagent.ratom/rea-queue","^6","reagent/ratom.cljs","^7",97,"^8",1,"^9",97,"^:",29,"^2I",true,"^5",["^ ","^6","reagent/ratom.cljs","^7",97,"^8",20,"^9",97,"^:",29,"^2I",true],"^3S","^3B"],"~$with-let-values",["^ ","^2H",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",321,"^8",7,"^9",321,"^:",22,"^P",["^Q",["^2J",["^Q",[["^5="]]]]]],"^T","~$reagent.ratom/with-let-values","^6","reagent/ratom.cljs","^:",22,"^2N",["^Q",[["^5="]]],"^2O",null,"^2P",["^Q",[null,null]],"^8",1,"^2Q",false,"^7",321,"^2R",["^M",["^2S","~$array"]],"^9",321,"^2T",1,"^2U",true,"^P",["^Q",["^2J",["^Q",[["^5="]]]]]],"~$track!",["^ ","^2H",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",237,"^8",7,"^9",237,"^:",13,"^P",["^Q",["^2J",["^Q",[["~$f","~$&","^3I"]]]]],"^3X",["^ ","^2Q",true,"^2T",1,"^2N",[["^Q",["~$f","^3I"]]],"^P",["^Q",[["~$f","~$&","^3I"]]],"^2P",["^Q",[null]]]],"^T","~$reagent.ratom/track!","^6","reagent/ratom.cljs","^:",13,"^3X",["^ ","^2Q",true,"^2T",1,"^2N",[["^Q",["~$f","^3I"]]],"^P",["^Q",[["~$f","~$&","^3I"]]],"^2P",["^Q",[null]]],"^2N",[["^Q",["~$f","^3I"]]],"^2O",null,"^2P",["^Q",[null]],"^8",1,"^2Q",true,"^7",237,"^2R","^2S","^9",237,"^2T",1,"^2U",true,"^P",["^Q",[["~$f","~$&","^3I"]]]],"~$*ratom-context*",["^ ","^T","~$reagent.ratom/*ratom-context*","^6","reagent/ratom.cljs","^7",9,"^8",1,"^9",9,"^:",35,"~:dynamic",true,"~:declared",true,"^5",["^ ","^6","reagent/ratom.cljs","^7",9,"^8",20,"^9",9,"^:",35,"^6>",true,"^6?",true]],"~$check-derefs",["^ ","^2H",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",513,"^8",7,"^9",513,"^:",19,"^P",["^Q",["^2J",["^Q",[["~$f"]]]]]],"^T","~$reagent.ratom/check-derefs","^6","reagent/ratom.cljs","^:",19,"^2N",["^Q",[["~$f"]]],"^2O",null,"^2P",["^Q",[null,null]],"^8",1,"^2Q",false,"^7",513,"^2R","~$cljs.core/IVector","^9",513,"^2T",1,"^2U",true,"^P",["^Q",["^2J",["^Q",[["~$f"]]]]]],"~$remove-w",["^ ","^2H",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",68,"^8",8,"^9",68,"^:",16,"^2I",true,"^P",["^Q",["^2J",["^Q",[["^3[","^5="]]]]]],"^2I",true,"^T","~$reagent.ratom/remove-w","^6","reagent/ratom.cljs","^:",16,"^2N",["^Q",[["^3[","^5="]]],"^2O",null,"^2P",["^Q",[null,null]],"^8",1,"^2Q",false,"^7",68,"^9",68,"^2T",2,"^2U",true,"^P",["^Q",["^2J",["^Q",[["^3[","^5="]]]]]],"~$->Wrapper",["^ ","^2H",null,"^5",["^ ","^2W",["^M",["^2X","^2Y","^2Z","^31","^32","^34","^35"]],"^6","reagent/ratom.cljs","^:",17,"^8",10,"^36","^37","^7",521,"^9",521,"^P",["^Q",["^2J",["^Q",[["^3:","~$callback","~$changed","^3;"]]]]],"^3<",["^M",["^2X","^2Y","^2Z","^31","^32","^34","^35"]],"^[","Positional factory function for reagent.ratom/Wrapper."],"^2W",["^M",["^2X","^2Y","^2Z","^31","^32","^34","^35"]],"^T","~$reagent.ratom/->Wrapper","^6","reagent/ratom.cljs","^:",17,"^2N",["^Q",[["^3:","^6F","^6G","^3;"]]],"^2O",null,"^2P",["^Q",[null,null]],"^8",1,"^2Q",false,"^36","^37","^7",521,"^2R","^4A","^9",521,"^2T",4,"^2U",true,"^P",["^Q",["^2J",["^Q",[["^3:","^6F","^6G","^3;"]]]]],"^3<",["^M",["^2X","^2Y","^2Z","^31","^32","^34","^35"]],"^[","Positional factory function for reagent.ratom/Wrapper."],"~$arr-len",["^ ","^2H",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",23,"^8",16,"^9",23,"^:",23,"^3S","^5;","^2I",true,"^P",["^Q",["^2J",["^Q",[["~$x"]]]]]],"^2I",true,"^T","~$reagent.ratom/arr-len","^6","reagent/ratom.cljs","^:",23,"^2N",["^Q",[["~$x"]]],"^2O",null,"^2P",["^Q",[null,null]],"^8",1,"^2Q",false,"^7",23,"^2R","^5;","^9",23,"^2T",1,"^3S","^5;","^2U",true,"^P",["^Q",["^2J",["^Q",[["~$x"]]]]]],"~$->RAtom",["^ ","^2H",null,"^5",["^ ","^2W",["^M",["^2X","^2Y","^2Z","^2[","^31","^32","^33","^3N","^34","^35","^3O"]],"^6","reagent/ratom.cljs","^:",15,"^8",10,"^36","^37","^7",121,"^9",121,"^P",["^Q",["^2J",["^Q",[["^3:","^3V","^3W","^3;"]]]]],"^3<",["^M",["^2X","^2Y","^2Z","^2[","^31","^32","^3N","^34","^35","^3O"]],"^[","Positional factory function for reagent.ratom/RAtom."],"^2W",["^M",["^2X","^2Y","^2Z","^2[","^31","^32","^33","^3N","^34","^35","^3O"]],"^T","~$reagent.ratom/->RAtom","^6","reagent/ratom.cljs","^:",15,"^2N",["^Q",[["^3:","^3V","^3W","^3;"]]],"^2O",null,"^2P",["^Q",[null,null]],"^8",1,"^2Q",false,"^36","^37","^7",121,"^2R","^3P","^9",121,"^2T",4,"^2U",true,"^P",["^Q",["^2J",["^Q",[["^3:","^3V","^3W","^3;"]]]]],"^3<",["^M",["^2X","^2Y","^2Z","^2[","^31","^32","^3N","^34","^35","^3O"]],"^[","Positional factory function for reagent.ratom/RAtom."],"~$->Track",["^ ","^2H",null,"^5",["^ ","^2W",["^M",["^2Z","^2[","^33","^34","^35"]],"^6","reagent/ratom.cljs","^:",15,"^8",10,"^36","^37","^7",202,"^9",202,"^P",["^Q",["^2J",["^Q",[["~$f","^3I","^X"]]]]],"^3<",["^M",["^2Z","^2[","^34","^35"]],"^[","Positional factory function for reagent.ratom/Track."],"^2W",["^M",["^2Z","^2[","^33","^34","^35"]],"^T","~$reagent.ratom/->Track","^6","reagent/ratom.cljs","^:",15,"^2N",["^Q",[["~$f","^3I","^X"]]],"^2O",null,"^2P",["^Q",[null,null]],"^8",1,"^2Q",false,"^36","^37","^7",202,"^2R","^3K","^9",202,"^2T",3,"^2U",true,"^P",["^Q",["^2J",["^Q",[["~$f","^3I","^X"]]]]],"^3<",["^M",["^2Z","^2[","^34","^35"]],"^[","Positional factory function for reagent.ratom/Track."]],"^1=",["^ ","^D","^D","^F","^F","^19","^19"],"~:cljs.analyzer/constants",["^ ","^1;",["^M",["~:on-set","^4:","^48","^4O","^X","^6F","^5","~:else","^39","^3I","~:validator","^3;","^3V","^3W","^46","~:no-cache","^38","^3:","~:auto-run","~:on-dispose","^3S","~:mutable","^6G","^49","^47","~$f"]],"~:order",["^3:","^6V","^3V","^3W","^3;","^5","^6R","^6Q","^6U","~$f","^3I","^X","^6T","^38","^39","^6P","^6S","^46","^3S","^4O","^47","^48","^49","^4:","^6F","^6G"]],"^1F",["^ ","^1=",["^M",[]],"^1<",["^M",[]]],"^1G",["^ "],"^1H",["^1:","^19","^14","^F","^16","^18"]],"^V","^D","~:ns-specs",["^ "],"~:ns-speced-vars",[],"~:compiler-options",["^1V",[["^6Z","~:static-fns"],true,["^6Z","~:elide-asserts"],false,["^6Z","~:optimize-constants"],null,["^6Z","~:external-config"],null,["^6Z","~:tooling-config"],null,["^6Z","~:emit-constants"],null,["^6Z","~:infer-externs"],true,["^6Z","^1O"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^6Z","~:fn-invoke-direct"],null,["^6Z","~:source-map"],"/dev/null"]]]