["^ ","~:output",["^ ","~:js","goog.provide('reagent.impl.batching');\ngoog.require('cljs.core');\ngoog.require('reagent.debug');\ngoog.require('reagent.interop');\ngoog.require('reagent.impl.util');\ngoog.require('clojure.string');\nif((typeof reagent !== 'undefined') && (typeof reagent.impl !== 'undefined') && (typeof reagent.impl.batching !== 'undefined') && (typeof reagent.impl.batching.mount_count !== 'undefined')){\n} else {\nreagent.impl.batching.mount_count = (0);\n}\nreagent.impl.batching.next_mount_count = (function reagent$impl$batching$next_mount_count(){\nreturn reagent.impl.batching.mount_count = (reagent.impl.batching.mount_count + (1));\n});\nreagent.impl.batching.fake_raf = (function reagent$impl$batching$fake_raf(f){\nreturn setTimeout(f,(16));\n});\nreagent.impl.batching.next_tick = (((!(reagent.impl.util.is_client)))?reagent.impl.batching.fake_raf:(function (){var w = window;\nvar or__4047__auto__ = (w[\"requestAnimationFrame\"]);\nif(cljs.core.truth_(or__4047__auto__)){\nreturn or__4047__auto__;\n} else {\nvar or__4047__auto____$1 = (w[\"webkitRequestAnimationFrame\"]);\nif(cljs.core.truth_(or__4047__auto____$1)){\nreturn or__4047__auto____$1;\n} else {\nvar or__4047__auto____$2 = (w[\"mozRequestAnimationFrame\"]);\nif(cljs.core.truth_(or__4047__auto____$2)){\nreturn or__4047__auto____$2;\n} else {\nvar or__4047__auto____$3 = (w[\"msRequestAnimationFrame\"]);\nif(cljs.core.truth_(or__4047__auto____$3)){\nreturn or__4047__auto____$3;\n} else {\nreturn reagent.impl.batching.fake_raf;\n}\n}\n}\n}\n})());\nreagent.impl.batching.compare_mount_order = (function reagent$impl$batching$compare_mount_order(c1,c2){\nreturn ((c1[\"cljsMountOrder\"]) - (c2[\"cljsMountOrder\"]));\n});\nreagent.impl.batching.run_queue = (function reagent$impl$batching$run_queue(a){\na.sort(reagent.impl.batching.compare_mount_order);\n\nvar n__4518__auto__ = a.length;\nvar i = (0);\nwhile(true){\nif((i < n__4518__auto__)){\nvar c_21011 = (a[i]);\nif((c_21011[\"cljsIsDirty\"]) === true){\n(c_21011[\"forceUpdate\"])();\n} else {\n}\n\nvar G__21012 = (i + (1));\ni = G__21012;\ncontinue;\n} else {\nreturn null;\n}\nbreak;\n}\n});\nif((typeof reagent !== 'undefined') && (typeof reagent.impl !== 'undefined') && (typeof reagent.impl.batching !== 'undefined') && (typeof reagent.impl.batching.ratom_flush !== 'undefined')){\n} else {\nreagent.impl.batching.ratom_flush = (function reagent$impl$batching$ratom_flush(){\nreturn null;\n});\n}\n\n/**\n* @constructor\n*/\nreagent.impl.batching.RenderQueue = (function (scheduled_QMARK_){\nthis.scheduled_QMARK_ = scheduled_QMARK_;\n});\nreagent.impl.batching.RenderQueue.prototype.run_funs = (function (k){\nvar self__ = this;\nvar this$ = this;\nvar temp__5461__auto__ = (this$[k]);\nif((temp__5461__auto__ == null)){\nreturn null;\n} else {\nvar fs = temp__5461__auto__;\n(this$[k] = null);\n\nvar n__4518__auto__ = fs.length;\nvar i = (0);\nwhile(true){\nif((i < n__4518__auto__)){\nvar fexpr__20997_21014 = (fs[i]);\n(fexpr__20997_21014.cljs$core$IFn$_invoke$arity$0 ? fexpr__20997_21014.cljs$core$IFn$_invoke$arity$0() : fexpr__20997_21014.call(null));\n\nvar G__21015 = (i + (1));\ni = G__21015;\ncontinue;\n} else {\nreturn null;\n}\nbreak;\n}\n}\n});\n\nreagent.impl.batching.RenderQueue.prototype.flush_after_render = (function (){\nvar self__ = this;\nvar this$ = this;\nreturn this$.run_funs(\"afterRender\");\n});\n\nreagent.impl.batching.RenderQueue.prototype.queue_render = (function (c){\nvar self__ = this;\nvar this$ = this;\nreturn this$.enqueue(\"componentQueue\",c);\n});\n\nreagent.impl.batching.RenderQueue.prototype.schedule = (function (){\nvar self__ = this;\nvar this$ = this;\nif(self__.scheduled_QMARK_){\nreturn null;\n} else {\nself__.scheduled_QMARK_ = true;\n\nvar G__20999 = ((function (this$){\nreturn (function (){\nreturn this$.run_queues();\n});})(this$))\n;\nreturn (reagent.impl.batching.next_tick.cljs$core$IFn$_invoke$arity$1 ? reagent.impl.batching.next_tick.cljs$core$IFn$_invoke$arity$1(G__20999) : reagent.impl.batching.next_tick.call(null,G__20999));\n}\n});\n\nreagent.impl.batching.RenderQueue.prototype.flush_queues = (function (){\nvar self__ = this;\nvar this$ = this;\nthis$.run_funs(\"beforeFlush\");\n\nreagent.impl.batching.ratom_flush();\n\nvar temp__5461__auto___21016 = (this$[\"componentQueue\"]);\nif((temp__5461__auto___21016 == null)){\n} else {\nvar cs_21017 = temp__5461__auto___21016;\n(this$[\"componentQueue\"] = null);\n\nreagent.impl.batching.run_queue(cs_21017);\n}\n\nreturn this$.flush_after_render();\n});\n\nreagent.impl.batching.RenderQueue.prototype.run_queues = (function (){\nvar self__ = this;\nvar this$ = this;\nself__.scheduled_QMARK_ = false;\n\nreturn this$.flush_queues();\n});\n\nreagent.impl.batching.RenderQueue.prototype.enqueue = (function (k,f){\nvar self__ = this;\nvar this$ = this;\nif(cljs.core.truth_(f)){\n} else {\nthrow (new Error([\"Assert failed: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1([\"Enqueued function\",\" must not be nil\"].join('')),\"\\n\",\"f\"].join('')));\n}\n\nif(((this$[k]) == null)){\n(this$[k] = []);\n} else {\n}\n\n(this$[k]).push(f);\n\nreturn this$.schedule();\n});\n\nreagent.impl.batching.RenderQueue.prototype.add_before_flush = (function (f){\nvar self__ = this;\nvar this$ = this;\nreturn this$.enqueue(\"beforeFlush\",f);\n});\n\nreagent.impl.batching.RenderQueue.prototype.add_after_render = (function (f){\nvar self__ = this;\nvar this$ = this;\nreturn this$.enqueue(\"afterRender\",f);\n});\n\nreagent.impl.batching.RenderQueue.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,\"scheduled?\",\"scheduled?\",579986609,null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Symbol(null,\"boolean\",\"boolean\",-278886877,null),new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null))], null);\n});\n\nreagent.impl.batching.RenderQueue.cljs$lang$type = true;\n\nreagent.impl.batching.RenderQueue.cljs$lang$ctorStr = \"reagent.impl.batching/RenderQueue\";\n\nreagent.impl.batching.RenderQueue.cljs$lang$ctorPrWriter = (function (this__4290__auto__,writer__4291__auto__,opt__4292__auto__){\nreturn cljs.core._write(writer__4291__auto__,\"reagent.impl.batching/RenderQueue\");\n});\n\n/**\n * Positional factory function for reagent.impl.batching/RenderQueue.\n */\nreagent.impl.batching.__GT_RenderQueue = (function reagent$impl$batching$__GT_RenderQueue(scheduled_QMARK_){\nreturn (new reagent.impl.batching.RenderQueue(scheduled_QMARK_));\n});\n\nif((typeof reagent !== 'undefined') && (typeof reagent.impl !== 'undefined') && (typeof reagent.impl.batching !== 'undefined') && (typeof reagent.impl.batching.render_queue !== 'undefined')){\n} else {\nreagent.impl.batching.render_queue = reagent.impl.batching.__GT_RenderQueue(false);\n}\nreagent.impl.batching.flush = (function reagent$impl$batching$flush(){\nreturn reagent.impl.batching.render_queue.flush_queues();\n});\nreagent.impl.batching.flush_after_render = (function reagent$impl$batching$flush_after_render(){\nreturn reagent.impl.batching.render_queue.flush_after_render();\n});\nreagent.impl.batching.queue_render = (function reagent$impl$batching$queue_render(c){\nif(cljs.core.truth_((c[\"cljsIsDirty\"]))){\nreturn null;\n} else {\n(c[\"cljsIsDirty\"] = true);\n\nreturn reagent.impl.batching.render_queue.queue_render(c);\n}\n});\nreagent.impl.batching.mark_rendered = (function reagent$impl$batching$mark_rendered(c){\nreturn (c[\"cljsIsDirty\"] = false);\n});\nreagent.impl.batching.do_before_flush = (function reagent$impl$batching$do_before_flush(f){\nreturn reagent.impl.batching.render_queue.add_before_flush(f);\n});\nreagent.impl.batching.do_after_render = (function reagent$impl$batching$do_after_render(f){\nreturn reagent.impl.batching.render_queue.add_after_render(f);\n});\nreagent.impl.batching.schedule = (function reagent$impl$batching$schedule(){\nif(reagent.impl.batching.render_queue.scheduled_QMARK_ === false){\nreturn reagent.impl.batching.render_queue.schedule();\n} else {\nreturn null;\n}\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","reagent/impl/batching.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",26],"~:ns-aliases",["^ ","~$react","~$module$node_modules$react$index","~$create-react-class","~$module$node_modules$create_react_class$index","~$react-dom","~$module$node_modules$react_dom$index"],"~:use-macros",["^ ","~$dbg","~$reagent.debug","~$assert-some","^D","~$$","~$reagent.interop","~$$!","^F"],"~:excludes",["~#set",["~$flush"]],"~:name","~$reagent.impl.batching","~:op","~:ns","~:imports",null,"~:requires",["^ ","^D","^D","^F","^F","~$reagent.impl.util","^Q","~$clojure.string","^R","~$string","^R","~$cljs.core","^T","~$goog","^U"],"~:seen",["^I",["~:require"]],"~:uses",["^ ","~$is-client","^Q"],"~:require-macros",["^ ","^D","^D","^F","^F","^T","^T"],"~:form",["~#list",["~$ns","^L",["^10",["~:refer-clojure","~:exclude",["^J"]]],["^10",["^W",["^D","~:refer-macros",["^C","^E"]],["^F","^14",["~$$","^G"]],["^Q","~:refer",["^Y"]],["^R","~:as","^S"]]]]],"~:flags",["^ ","^W",["^I",[]]],"~:js-deps",["^ "],"~:deps",["^U","^T","^D","^F","^Q","^R"]],"^N","^L","~:resource-id",["~:shadow.build.classpath/resource","reagent/impl/batching.cljs"],"~:compiled-at",1547237659692,"~:resource-name","reagent/impl/batching.cljs","~:warnings",[],"~:source","(ns reagent.impl.batching\n  (:refer-clojure :exclude [flush])\n  (:require [reagent.debug :refer-macros [dbg assert-some]]\n            [reagent.interop :refer-macros [$ $!]]\n            [reagent.impl.util :refer [is-client]]\n            [clojure.string :as string]))\n\n;;; Update batching\n\n(defonce mount-count 0)\n\n(defn next-mount-count []\n  (set! mount-count (inc mount-count)))\n\n(defn fake-raf [f]\n  (js/setTimeout f 16))\n\n(def next-tick\n  (if-not is-client\n    fake-raf\n    (let [w js/window]\n      (or ($ w :requestAnimationFrame)\n          ($ w :webkitRequestAnimationFrame)\n          ($ w :mozRequestAnimationFrame)\n          ($ w :msRequestAnimationFrame)\n          fake-raf))))\n\n(defn compare-mount-order [c1 c2]\n  (- ($ c1 :cljsMountOrder)\n     ($ c2 :cljsMountOrder)))\n\n(defn run-queue [a]\n  ;; sort components by mount order, to make sure parents\n  ;; are rendered before children\n  (.sort a compare-mount-order)\n  (dotimes [i (alength a)]\n    (let [c (aget a i)]\n      (when (true? ($ c :cljsIsDirty))\n        ($ c forceUpdate)))))\n\n\n;; Set from ratom.cljs\n(defonce ratom-flush (fn []))\n\n(deftype RenderQueue [^:mutable ^boolean scheduled?]\n  Object\n  (enqueue [this k f]\n    (assert-some f \"Enqueued function\")\n    (when (nil? (aget this k))\n      (aset this k (array)))\n    (.push (aget this k) f)\n    (.schedule this))\n\n  (run-funs [this k]\n    (when-some [fs (aget this k)]\n      (aset this k nil)\n      (dotimes [i (alength fs)]\n        ((aget fs i)))))\n\n  (schedule [this]\n    (when-not scheduled?\n      (set! scheduled? true)\n      (next-tick #(.run-queues this))))\n\n  (queue-render [this c]\n    (.enqueue this \"componentQueue\" c))\n\n  (add-before-flush [this f]\n    (.enqueue this \"beforeFlush\" f))\n\n  (add-after-render [this f]\n    (.enqueue this \"afterRender\" f))\n\n  (run-queues [this]\n    (set! scheduled? false)\n    (.flush-queues this))\n\n  (flush-after-render [this]\n    (.run-funs this \"afterRender\"))\n\n  (flush-queues [this]\n    (.run-funs this \"beforeFlush\")\n    (ratom-flush)\n    (when-some [cs (aget this \"componentQueue\")]\n      (aset this \"componentQueue\" nil)\n      (run-queue cs))\n    (.flush-after-render this)))\n\n(defonce render-queue (->RenderQueue false))\n\n(defn flush []\n  (.flush-queues render-queue))\n\n(defn flush-after-render []\n  (.flush-after-render render-queue))\n\n(defn queue-render [c]\n  (when-not ($ c :cljsIsDirty)\n    ($! c :cljsIsDirty true)\n    (.queue-render render-queue c)))\n\n(defn mark-rendered [c]\n  ($! c :cljsIsDirty false))\n\n(defn do-before-flush [f]\n  (.add-before-flush render-queue f))\n\n(defn do-after-render [f]\n  (.add-after-render render-queue f))\n\n(defn schedule []\n  (when (false? (.-scheduled? render-queue))\n    (.schedule render-queue)))\n","~:reader-features",["^I",["~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings","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","names",["js/reagent","js/reagent.impl","js/reagent.impl.batching","js/reagent.impl.batching.mount-count","reagent.impl.batching/mount-count","reagent.impl.batching/next-mount-count","reagent.impl.batching/fake-raf","js/setTimeout","f","reagent.impl.batching/next-tick","reagent.impl.util/is-client","js/window","or__4047__auto__","w","reagent.impl.batching/compare-mount-order","c1","c2","reagent.impl.batching/run-queue","a","n__4518__auto__","i","c","js/reagent.impl.batching.ratom-flush","reagent.impl.batching/ratom-flush","cljs.core/-write","writer__4291__auto__","reagent.impl.batching/RenderQueue","reagent.impl.batching/->RenderQueue","scheduled?","js/Error","this","k","temp__5461__auto__","fs","fexpr__20997","G__20999","cs","js/reagent.impl.batching.render-queue","reagent.impl.batching/render-queue","reagent.impl.batching/flush","reagent.impl.batching/flush-after-render","reagent.impl.batching/queue-render","reagent.impl.batching/mark-rendered","reagent.impl.batching/do-before-flush","reagent.impl.batching/do-after-render","reagent.impl.batching/schedule"]]],"~:cache-keys",["~#cmap",[["^1;","reagent/impl/batching.cljs"],[1547237504940,"^U","^T","^D","^F","^Q","^R"],["~:macro","^T"],[1547237500000],["^1;","goog/math/math.js"],[1547237499888,"^U","~$goog.array","~$goog.asserts"],["^1H","^D"],[1547237504000],["^1;","goog/array/array.js"],[1547237499888,"^U","^1J"],["^1;","reagent/impl/util.cljs"],[1547237504940,"^U","^T","^D","^F","^R"],["^1;","goog/debug/error.js"],[1547237499888,"^U"],["^1;","goog/dom/nodetype.js"],[1547237499888,"^U"],["^1;","goog/object/object.js"],[1547237499888,"^U"],"~:SHADOW-TIMESTAMP",[1547237503000,1547237500000],["^1;","goog/math/long.js"],[1547237499888,"^U","^1J","~$goog.reflect"],["^1H","^F"],[1547237504000],["^1;","goog/functions/functions.js"],[1547237499888,"^U"],["^1;","goog/structs/map.js"],[1547237499888,"^U","~$goog.iter.Iterator","~$goog.iter.StopIteration","~$goog.object"],["^1;","goog/asserts/asserts.js"],[1547237499888,"^U","~$goog.debug.Error","~$goog.dom.NodeType","~$goog.string"],["^1;","goog/uri/uri.js"],[1547237499888,"^U","^1I","^1J","^1R","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"],["^1;","goog/base.js"],[1547237499888],["^1;","goog/structs/structs.js"],[1547237499888,"^U","^1I","^1O"],["^1;","clojure/string.cljs"],[1547237500020,"^U","^T","^1R","~$goog.string.StringBuffer"],["^1;","goog/string/string.js"],[1547237499888,"^U"],["^1;","goog/reflect/reflect.js"],[1547237499888,"^U"],["^1;","goog/string/stringbuffer.js"],[1547237499888,"^U"],["^1;","goog/iter/iter.js"],[1547237499888,"^U","^1I","^1J","~$goog.functions","~$goog.math"],["^1;","reagent/interop.cljs"],[1547237504940,"^U","^T"],["^1;","cljs/core.cljs"],[1547237500020,"~$goog.math.Long","~$goog.math.Integer","^1R","^1O","^1I","~$goog.Uri","^1X"],["^1;","reagent/debug.cljs"],[1547237504940,"^U","^T"],["^1;","goog/math/integer.js"],[1547237499888,"^U"],["^1;","goog/uri/utils.js"],[1547237499888,"^U","^1I","^1J","^1R"]]],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","reagent/impl/batching.cljs","^7",1,"^8",5,"^9",1,"^:",26],"^;",["^ ","^<","^=","^>","^?","^@","^A"],"^B",["^ ","^C","^D","^E","^D","~$$","^F","^G","^F"],"^H",["^I",["^J"]],"~:shadow/js-access-properties",["^I",["flush-after-render","add-after-render","queue-render","schedule","flush-queues","run-funs","add-before-flush","run-queues"]],"^K","^L","^O",null,"^P",["^ ","^D","^D","^F","^F","^Q","^Q","^R","^R","^S","^R","^T","^T","^U","^U"],"^V",["^I",["^W"]],"~:shadow/js-access-global",["^I",["window","Error","setTimeout"]],"^X",["^ ","^Y","^Q"],"~:defs",["^ ","~$fake-raf",["^ ","~:protocol-inline",null,"^5",["^ ","^6","reagent/impl/batching.cljs","^7",15,"^8",7,"^9",15,"^:",15,"~:arglists",["^10",["~$quote",["^10",[["~$f"]]]]]],"^K","~$reagent.impl.batching/fake-raf","^6","reagent/impl/batching.cljs","^:",15,"~:method-params",["^10",[["~$f"]]],"~:protocol-impl",null,"~:arglists-meta",["^10",[null,null]],"^8",1,"~:variadic?",false,"^7",15,"~:ret-tag","~$js","^9",15,"~:max-fixed-arity",1,"~:fn-var",true,"^28",["^10",["^29",["^10",[["~$f"]]]]]],"~$do-before-flush",["^ ","^27",null,"^5",["^ ","^6","reagent/impl/batching.cljs","^7",105,"^8",7,"^9",105,"^:",22,"^28",["^10",["^29",["^10",[["~$f"]]]]]],"^K","~$reagent.impl.batching/do-before-flush","^6","reagent/impl/batching.cljs","^:",22,"^2;",["^10",[["~$f"]]],"^2<",null,"^2=",["^10",[null,null]],"^8",1,"^2>",false,"^7",105,"^2?","~$any","^9",105,"^2A",1,"^2B",true,"^28",["^10",["^29",["^10",[["~$f"]]]]]],"~$flush-after-render",["^ ","^27",null,"^5",["^ ","^6","reagent/impl/batching.cljs","^7",94,"^8",7,"^9",94,"^:",25,"^28",["^10",["^29",["^10",[[]]]]]],"^K","~$reagent.impl.batching/flush-after-render","^6","reagent/impl/batching.cljs","^:",25,"^2;",["^10",[[]]],"^2<",null,"^2=",["^10",[null,null]],"^8",1,"^2>",false,"^7",94,"^2?","^2E","^9",94,"^2A",0,"^2B",true,"^28",["^10",["^29",["^10",[[]]]]]],"~$queue-render",["^ ","^27",null,"^5",["^ ","^6","reagent/impl/batching.cljs","^7",97,"^8",7,"^9",97,"^:",19,"^28",["^10",["^29",["^10",[["~$c"]]]]]],"^K","~$reagent.impl.batching/queue-render","^6","reagent/impl/batching.cljs","^:",19,"^2;",["^10",[["~$c"]]],"^2<",null,"^2=",["^10",[null,null]],"^8",1,"^2>",false,"^7",97,"^2?",["^I",["^2E","~$clj-nil"]],"^9",97,"^2A",1,"^2B",true,"^28",["^10",["^29",["^10",[["~$c"]]]]]],"~$next-tick",["^ ","^K","~$reagent.impl.batching/next-tick","^6","reagent/impl/batching.cljs","^7",18,"^8",1,"^9",18,"^:",15,"^5",["^ ","^6","reagent/impl/batching.cljs","^7",18,"^8",6,"^9",18,"^:",15],"~:tag",["^I",[null,"^2E"]]],"^J",["^ ","^27",null,"^5",["^ ","^6","reagent/impl/batching.cljs","^7",91,"^8",7,"^9",91,"^:",12,"^28",["^10",["^29",["^10",[[]]]]]],"^K","~$reagent.impl.batching/flush","^6","reagent/impl/batching.cljs","^:",12,"^2;",["^10",[[]]],"^2<",null,"^2=",["^10",[null,null]],"^8",1,"^2>",false,"^7",91,"^2?","^2E","^9",91,"^2A",0,"^2B",true,"^28",["^10",["^29",["^10",[[]]]]]],"~$mark-rendered",["^ ","^27",null,"^5",["^ ","^6","reagent/impl/batching.cljs","^7",102,"^8",7,"^9",102,"^:",20,"^28",["^10",["^29",["^10",[["~$c"]]]]]],"^K","~$reagent.impl.batching/mark-rendered","^6","reagent/impl/batching.cljs","^:",20,"^2;",["^10",[["~$c"]]],"^2<",null,"^2=",["^10",[null,null]],"^8",1,"^2>",false,"^7",102,"^2?","^2E","^9",102,"^2A",1,"^2B",true,"^28",["^10",["^29",["^10",[["~$c"]]]]]],"~$schedule",["^ ","^27",null,"^5",["^ ","^6","reagent/impl/batching.cljs","^7",111,"^8",7,"^9",111,"^:",15,"^28",["^10",["^29",["^10",[[]]]]]],"^K","~$reagent.impl.batching/schedule","^6","reagent/impl/batching.cljs","^:",15,"^2;",["^10",[[]]],"^2<",null,"^2=",["^10",[null,null]],"^8",1,"^2>",false,"^7",111,"^2?",["^I",["^2E","^2J"]],"^9",111,"^2A",0,"^2B",true,"^28",["^10",["^29",["^10",[[]]]]]],"~$render-queue",["^ ","^K","~$reagent.impl.batching/render-queue","^6","reagent/impl/batching.cljs","^7",89,"^8",1,"^9",89,"^:",22,"^5",["^ ","^6","reagent/impl/batching.cljs","^7",89,"^8",10,"^9",89,"^:",22],"^2M","~$reagent.impl.batching/RenderQueue"],"~$RenderQueue",["^ ","~:num-fields",1,"~:protocols",["^I",["~$cljs.core/Object"]],"^K","^2U","^6","reagent/impl/batching.cljs","^:",21,"~:type",true,"^8",10,"^7",45,"~:record",false,"^9",45,"^2M","~$function","~:skip-protocol-flag",null],"~$compare-mount-order",["^ ","^27",null,"^5",["^ ","^6","reagent/impl/batching.cljs","^7",28,"^8",7,"^9",28,"^:",26,"^28",["^10",["^29",["^10",[["~$c1","~$c2"]]]]]],"^K","~$reagent.impl.batching/compare-mount-order","^6","reagent/impl/batching.cljs","^:",26,"^2;",["^10",[["^33","^34"]]],"^2<",null,"^2=",["^10",[null,null]],"^8",1,"^2>",false,"^7",28,"^2?","~$number","^9",28,"^2A",2,"^2B",true,"^28",["^10",["^29",["^10",[["^33","^34"]]]]]],"~$mount-count",["^ ","^K","~$reagent.impl.batching/mount-count","^6","reagent/impl/batching.cljs","^7",10,"^8",1,"^9",10,"^:",21,"^5",["^ ","^6","reagent/impl/batching.cljs","^7",10,"^8",10,"^9",10,"^:",21],"^2M","^36"],"~$next-mount-count",["^ ","^27",null,"^5",["^ ","^6","reagent/impl/batching.cljs","^7",12,"^8",7,"^9",12,"^:",23,"^28",["^10",["^29",["^10",[[]]]]]],"^K","~$reagent.impl.batching/next-mount-count","^6","reagent/impl/batching.cljs","^:",23,"^2;",["^10",[[]]],"^2<",null,"^2=",["^10",[null,null]],"^8",1,"^2>",false,"^7",12,"^9",12,"^2A",0,"^2B",true,"^28",["^10",["^29",["^10",[[]]]]]],"~$->RenderQueue",["^ ","^27",null,"^5",["^ ","^2X",["^I",["^2Y"]],"^6","reagent/impl/batching.cljs","^:",21,"^8",10,"~:factory","~:positional","^7",45,"^9",45,"^28",["^10",["^29",["^10",[["~$scheduled?"]]]]],"^31",null,"~:doc","Positional factory function for reagent.impl.batching/RenderQueue."],"^2X",["^I",["^2Y"]],"^K","~$reagent.impl.batching/->RenderQueue","^6","reagent/impl/batching.cljs","^:",21,"^2;",["^10",[["^3>"]]],"^2<",null,"^2=",["^10",[null,null]],"^8",1,"^2>",false,"^3<","^3=","^7",45,"^2?","^2U","^9",45,"^2A",1,"^2B",true,"^28",["^10",["^29",["^10",[["^3>"]]]]],"^31",null,"^3?","Positional factory function for reagent.impl.batching/RenderQueue."],"~$do-after-render",["^ ","^27",null,"^5",["^ ","^6","reagent/impl/batching.cljs","^7",108,"^8",7,"^9",108,"^:",22,"^28",["^10",["^29",["^10",[["~$f"]]]]]],"^K","~$reagent.impl.batching/do-after-render","^6","reagent/impl/batching.cljs","^:",22,"^2;",["^10",[["~$f"]]],"^2<",null,"^2=",["^10",[null,null]],"^8",1,"^2>",false,"^7",108,"^2?","^2E","^9",108,"^2A",1,"^2B",true,"^28",["^10",["^29",["^10",[["~$f"]]]]]],"~$run-queue",["^ ","^27",null,"^5",["^ ","^6","reagent/impl/batching.cljs","^7",32,"^8",7,"^9",32,"^:",16,"^28",["^10",["^29",["^10",[["~$a"]]]]]],"^K","~$reagent.impl.batching/run-queue","^6","reagent/impl/batching.cljs","^:",16,"^2;",["^10",[["~$a"]]],"^2<",null,"^2=",["^10",[null,null]],"^8",1,"^2>",false,"^7",32,"^2?","^2J","^9",32,"^2A",1,"^2B",true,"^28",["^10",["^29",["^10",[["~$a"]]]]]],"~$ratom-flush",["^ ","^27",null,"^5",["^ ","^6","reagent/impl/batching.cljs","^7",43,"^8",10,"^9",43,"^:",21],"^K","~$reagent.impl.batching/ratom-flush","^6","reagent/impl/batching.cljs","^:",21,"^2;",["^10",[[]]],"^2<",null,"^2=",["^10",[]],"^8",1,"^2>",false,"^7",43,"^2?","^2J","^9",43,"^2A",0,"^2B",true,"^28",null]],"^Z",["^ ","^D","^D","^F","^F","^T","^T"],"~:cljs.analyzer/constants",["^ ","^V",["^I",["~$boolean","^3>","^2M","~:mutable"]],"~:order",["^3>","^2M","^3I","^3H"]],"^17",["^ ","^W",["^I",[]]],"^18",["^ "],"^19",["^U","^T","^D","^F","^Q","^R"]],"^N","^L","~:ns-specs",["^ "],"~:ns-speced-vars",[],"~:compiler-options",["^1G",[["^3M","~:static-fns"],true,["^3M","~:elide-asserts"],false,["^3M","~:optimize-constants"],null,["^3M","~:external-config"],null,["^3M","~:tooling-config"],null,["^3M","~:emit-constants"],null,["^3M","~:infer-externs"],true,["^3M","^1@"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^3M","~:fn-invoke-direct"],null,["^3M","~:source-map"],"/dev/null"]]]