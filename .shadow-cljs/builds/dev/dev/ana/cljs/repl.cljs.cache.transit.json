["^ ","~:output",["^ ","~:js","goog.provide('cljs.repl');\ngoog.require('cljs.core');\ngoog.require('cljs.spec.alpha');\ncljs.repl.print_doc = (function cljs$repl$print_doc(p__12740){\nvar map__12741 = p__12740;\nvar map__12741__$1 = (((((!((map__12741 == null))))?(((((map__12741.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__12741.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__12741):map__12741);\nvar m = map__12741__$1;\nvar n = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12741__$1,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760));\nvar nm = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12741__$1,new cljs.core.Keyword(null,\"name\",\"name\",1843675177));\ncljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"-------------------------\"], 0));\n\ncljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(function (){var or__4047__auto__ = new cljs.core.Keyword(null,\"spec\",\"spec\",347520401).cljs$core$IFn$_invoke$arity$1(m);\nif(cljs.core.truth_(or__4047__auto__)){\nreturn or__4047__auto__;\n} else {\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1((function (){var temp__5457__auto__ = new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(m);\nif(cljs.core.truth_(temp__5457__auto__)){\nvar ns = temp__5457__auto__;\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns),\"/\"].join('');\n} else {\nreturn null;\n}\n})()),cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(m))].join('');\n}\n})()], 0));\n\nif(cljs.core.truth_(new cljs.core.Keyword(null,\"protocol\",\"protocol\",652470118).cljs$core$IFn$_invoke$arity$1(m))){\ncljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"Protocol\"], 0));\n} else {\n}\n\nif(cljs.core.truth_(new cljs.core.Keyword(null,\"forms\",\"forms\",2045992350).cljs$core$IFn$_invoke$arity$1(m))){\nvar seq__12744_12775 = cljs.core.seq(new cljs.core.Keyword(null,\"forms\",\"forms\",2045992350).cljs$core$IFn$_invoke$arity$1(m));\nvar chunk__12745_12776 = null;\nvar count__12746_12777 = (0);\nvar i__12747_12778 = (0);\nwhile(true){\nif((i__12747_12778 < count__12746_12777)){\nvar f_12779 = chunk__12745_12776.cljs$core$IIndexed$_nth$arity$2(null,i__12747_12778);\ncljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"  \",f_12779], 0));\n\n\nvar G__12780 = seq__12744_12775;\nvar G__12781 = chunk__12745_12776;\nvar G__12782 = count__12746_12777;\nvar G__12783 = (i__12747_12778 + (1));\nseq__12744_12775 = G__12780;\nchunk__12745_12776 = G__12781;\ncount__12746_12777 = G__12782;\ni__12747_12778 = G__12783;\ncontinue;\n} else {\nvar temp__5457__auto___12784 = cljs.core.seq(seq__12744_12775);\nif(temp__5457__auto___12784){\nvar seq__12744_12785__$1 = temp__5457__auto___12784;\nif(cljs.core.chunked_seq_QMARK_(seq__12744_12785__$1)){\nvar c__4461__auto___12786 = cljs.core.chunk_first(seq__12744_12785__$1);\nvar G__12787 = cljs.core.chunk_rest(seq__12744_12785__$1);\nvar G__12788 = c__4461__auto___12786;\nvar G__12789 = cljs.core.count(c__4461__auto___12786);\nvar G__12790 = (0);\nseq__12744_12775 = G__12787;\nchunk__12745_12776 = G__12788;\ncount__12746_12777 = G__12789;\ni__12747_12778 = G__12790;\ncontinue;\n} else {\nvar f_12791 = cljs.core.first(seq__12744_12785__$1);\ncljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"  \",f_12791], 0));\n\n\nvar G__12792 = cljs.core.next(seq__12744_12785__$1);\nvar G__12793 = null;\nvar G__12794 = (0);\nvar G__12795 = (0);\nseq__12744_12775 = G__12792;\nchunk__12745_12776 = G__12793;\ncount__12746_12777 = G__12794;\ni__12747_12778 = G__12795;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n} else {\nif(cljs.core.truth_(new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754).cljs$core$IFn$_invoke$arity$1(m))){\nvar arglists_12796 = new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754).cljs$core$IFn$_invoke$arity$1(m);\nif(cljs.core.truth_((function (){var or__4047__auto__ = new cljs.core.Keyword(null,\"macro\",\"macro\",-867863404).cljs$core$IFn$_invoke$arity$1(m);\nif(cljs.core.truth_(or__4047__auto__)){\nreturn or__4047__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\"repl-special-function\",\"repl-special-function\",1262603725).cljs$core$IFn$_invoke$arity$1(m);\n}\n})())){\ncljs.core.prn.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([arglists_12796], 0));\n} else {\ncljs.core.prn.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),cljs.core.first(arglists_12796)))?cljs.core.second(arglists_12796):arglists_12796)], 0));\n}\n} else {\n}\n}\n\nif(cljs.core.truth_(new cljs.core.Keyword(null,\"special-form\",\"special-form\",-1326536374).cljs$core$IFn$_invoke$arity$1(m))){\ncljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"Special Form\"], 0));\n\ncljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\" \",new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891).cljs$core$IFn$_invoke$arity$1(m)], 0));\n\nif(cljs.core.contains_QMARK_(m,new cljs.core.Keyword(null,\"url\",\"url\",276297046))){\nif(cljs.core.truth_(new cljs.core.Keyword(null,\"url\",\"url\",276297046).cljs$core$IFn$_invoke$arity$1(m))){\nreturn cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([[\"\\n  Please see http://clojure.org/\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"url\",\"url\",276297046).cljs$core$IFn$_invoke$arity$1(m))].join('')], 0));\n} else {\nreturn null;\n}\n} else {\nreturn cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([[\"\\n  Please see http://clojure.org/special_forms#\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(m))].join('')], 0));\n}\n} else {\nif(cljs.core.truth_(new cljs.core.Keyword(null,\"macro\",\"macro\",-867863404).cljs$core$IFn$_invoke$arity$1(m))){\ncljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"Macro\"], 0));\n} else {\n}\n\nif(cljs.core.truth_(new cljs.core.Keyword(null,\"spec\",\"spec\",347520401).cljs$core$IFn$_invoke$arity$1(m))){\ncljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"Spec\"], 0));\n} else {\n}\n\nif(cljs.core.truth_(new cljs.core.Keyword(null,\"repl-special-function\",\"repl-special-function\",1262603725).cljs$core$IFn$_invoke$arity$1(m))){\ncljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"REPL Special Function\"], 0));\n} else {\n}\n\ncljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\" \",new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891).cljs$core$IFn$_invoke$arity$1(m)], 0));\n\nif(cljs.core.truth_(new cljs.core.Keyword(null,\"protocol\",\"protocol\",652470118).cljs$core$IFn$_invoke$arity$1(m))){\nvar seq__12752_12799 = cljs.core.seq(new cljs.core.Keyword(null,\"methods\",\"methods\",453930866).cljs$core$IFn$_invoke$arity$1(m));\nvar chunk__12753_12800 = null;\nvar count__12754_12801 = (0);\nvar i__12755_12802 = (0);\nwhile(true){\nif((i__12755_12802 < count__12754_12801)){\nvar vec__12756_12803 = chunk__12753_12800.cljs$core$IIndexed$_nth$arity$2(null,i__12755_12802);\nvar name_12804 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12756_12803,(0),null);\nvar map__12760_12805 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12756_12803,(1),null);\nvar map__12760_12806__$1 = (((((!((map__12760_12805 == null))))?(((((map__12760_12805.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__12760_12805.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__12760_12805):map__12760_12805);\nvar doc_12807 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12760_12806__$1,new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891));\nvar arglists_12808 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12760_12806__$1,new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754));\ncljs.core.println();\n\ncljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\" \",name_12804], 0));\n\ncljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\" \",arglists_12808], 0));\n\nif(cljs.core.truth_(doc_12807)){\ncljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\" \",doc_12807], 0));\n} else {\n}\n\n\nvar G__12811 = seq__12752_12799;\nvar G__12812 = chunk__12753_12800;\nvar G__12813 = count__12754_12801;\nvar G__12814 = (i__12755_12802 + (1));\nseq__12752_12799 = G__12811;\nchunk__12753_12800 = G__12812;\ncount__12754_12801 = G__12813;\ni__12755_12802 = G__12814;\ncontinue;\n} else {\nvar temp__5457__auto___12815 = cljs.core.seq(seq__12752_12799);\nif(temp__5457__auto___12815){\nvar seq__12752_12816__$1 = temp__5457__auto___12815;\nif(cljs.core.chunked_seq_QMARK_(seq__12752_12816__$1)){\nvar c__4461__auto___12817 = cljs.core.chunk_first(seq__12752_12816__$1);\nvar G__12818 = cljs.core.chunk_rest(seq__12752_12816__$1);\nvar G__12819 = c__4461__auto___12817;\nvar G__12820 = cljs.core.count(c__4461__auto___12817);\nvar G__12821 = (0);\nseq__12752_12799 = G__12818;\nchunk__12753_12800 = G__12819;\ncount__12754_12801 = G__12820;\ni__12755_12802 = G__12821;\ncontinue;\n} else {\nvar vec__12762_12822 = cljs.core.first(seq__12752_12816__$1);\nvar name_12823 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12762_12822,(0),null);\nvar map__12765_12824 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12762_12822,(1),null);\nvar map__12765_12825__$1 = (((((!((map__12765_12824 == null))))?(((((map__12765_12824.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__12765_12824.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__12765_12824):map__12765_12824);\nvar doc_12826 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12765_12825__$1,new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891));\nvar arglists_12827 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12765_12825__$1,new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754));\ncljs.core.println();\n\ncljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\" \",name_12823], 0));\n\ncljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\" \",arglists_12827], 0));\n\nif(cljs.core.truth_(doc_12826)){\ncljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\" \",doc_12826], 0));\n} else {\n}\n\n\nvar G__12828 = cljs.core.next(seq__12752_12816__$1);\nvar G__12829 = null;\nvar G__12830 = (0);\nvar G__12831 = (0);\nseq__12752_12799 = G__12828;\nchunk__12753_12800 = G__12829;\ncount__12754_12801 = G__12830;\ni__12755_12802 = G__12831;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n} else {\n}\n\nif(cljs.core.truth_(n)){\nvar temp__5457__auto__ = cljs.spec.alpha.get_spec(cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.ns_name(n)),cljs.core.name(nm)));\nif(cljs.core.truth_(temp__5457__auto__)){\nvar fnspec = temp__5457__auto__;\ncljs.core.print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"Spec\"], 0));\n\nvar seq__12771 = cljs.core.seq(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"args\",\"args\",1315556576),new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814),new cljs.core.Keyword(null,\"fn\",\"fn\",-1175266204)], null));\nvar chunk__12772 = null;\nvar count__12773 = (0);\nvar i__12774 = (0);\nwhile(true){\nif((i__12774 < count__12773)){\nvar role = chunk__12772.cljs$core$IIndexed$_nth$arity$2(null,i__12774);\nvar temp__5457__auto___12832__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(fnspec,role);\nif(cljs.core.truth_(temp__5457__auto___12832__$1)){\nvar spec_12833 = temp__5457__auto___12832__$1;\ncljs.core.print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([[\"\\n \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.name(role)),\":\"].join(''),cljs.spec.alpha.describe(spec_12833)], 0));\n} else {\n}\n\n\nvar G__12834 = seq__12771;\nvar G__12835 = chunk__12772;\nvar G__12836 = count__12773;\nvar G__12837 = (i__12774 + (1));\nseq__12771 = G__12834;\nchunk__12772 = G__12835;\ncount__12773 = G__12836;\ni__12774 = G__12837;\ncontinue;\n} else {\nvar temp__5457__auto____$1 = cljs.core.seq(seq__12771);\nif(temp__5457__auto____$1){\nvar seq__12771__$1 = temp__5457__auto____$1;\nif(cljs.core.chunked_seq_QMARK_(seq__12771__$1)){\nvar c__4461__auto__ = cljs.core.chunk_first(seq__12771__$1);\nvar G__12839 = cljs.core.chunk_rest(seq__12771__$1);\nvar G__12840 = c__4461__auto__;\nvar G__12841 = cljs.core.count(c__4461__auto__);\nvar G__12842 = (0);\nseq__12771 = G__12839;\nchunk__12772 = G__12840;\ncount__12773 = G__12841;\ni__12774 = G__12842;\ncontinue;\n} else {\nvar role = cljs.core.first(seq__12771__$1);\nvar temp__5457__auto___12843__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(fnspec,role);\nif(cljs.core.truth_(temp__5457__auto___12843__$2)){\nvar spec_12844 = temp__5457__auto___12843__$2;\ncljs.core.print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([[\"\\n \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.name(role)),\":\"].join(''),cljs.spec.alpha.describe(spec_12844)], 0));\n} else {\n}\n\n\nvar G__12845 = cljs.core.next(seq__12771__$1);\nvar G__12846 = null;\nvar G__12847 = (0);\nvar G__12848 = (0);\nseq__12771 = G__12845;\nchunk__12772 = G__12846;\ncount__12773 = G__12847;\ni__12774 = G__12848;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n}\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","cljs/repl.cljs","~:line",9,"~:column",5,"~:end-line",9,"~:end-column",14],"~:ns-aliases",["^ ","~$react","~$module$node_modules$react$index","~$create-react-class","~$module$node_modules$create_react_class$index","~$react-dom","~$module$node_modules$react_dom$index"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:macros",["^ ","~$doc",["^ ","~:arglists",["~#list",[["~$name"]]],"~:doc","Prints documentation for a var or special form given its name,\n  or for a spec if given a keyword","^7",1241,"^8",1,"^6","cljs/repl.cljc","~:name","~$cljs.repl/doc","~:ns","~$cljs.repl","~:macro",true],"~$find-doc",["^ ","^G",["^H",[["~$re-string-or-pattern"]]],"^J","Prints documentation for any var whose documentation or name\n contains a match for re-string-or-pattern","^7",1281,"^8",1,"^6","cljs/repl.cljc","^K","~$cljs.repl/find-doc","^M","^N","^O",true],"~$dir",["^ ","^G",["^H",[["~$ns"]]],"^J","Prints a sorted directory of public vars in a namespace","^7",1381,"^8",1,"^6","cljs/repl.cljc","^K","~$cljs.repl/dir","^M","^N","^O",true],"~$pst",["^ ","^G",["^H",[[],["~$e"]]],"^7",1387,"^8",1,"^6","cljs/repl.cljc","^K","~$cljs.repl/pst","^M","^N","^O",true],"~$source",["^ ","^G",["^H",[["~$n"]]],"^J","Prints the source code for the given symbol, if it can find it.\n  This requires that the symbol resolve to a Var defined in a\n  namespace for which the .cljs is in the classpath.\n\n  Example: (source filter)","^7",1340,"^8",1,"^6","cljs/repl.cljc","^K","~$cljs.repl/source","^M","^N","^O",true],"~$apropos",["^ ","^G",["^H",[["~$str-or-pattern"]]],"^J","Given a regular expression or stringable thing, return a seq of all\npublic definitions in all currently-loaded namespaces that match the\nstr-or-pattern.","^7",1356,"^8",1,"^6","cljs/repl.cljc","^K","~$cljs.repl/apropos","^M","^N","^O",true]],"^K","^N","~:op","^M","~:imports",null,"~:requires",["^ ","~$cljs.spec.alpha","^14","~$spec","^14","~$cljs.core","^16","~$goog","^17"],"~:seen",["^D",["~:require","~:require-macros"]],"~:uses",null,"^1:",["^ ","^N","^N","^16","^16","^14","^14","^15","^14"],"~:form",["^H",["^T","^N",["^H",["^1:","^N"]],["^H",["^19",["^14","~:as","^15"]]]]],"~:flags",["^ ","^1:",["^D",[]],"^19",["^D",[]]],"~:js-deps",["^ "],"~:deps",["^17","^16","^14"]],"^M","^N","~:resource-id",["~:shadow.build.classpath/resource","cljs/repl.cljs"],"~:compiled-at",1547052595696,"~:resource-name","cljs/repl.cljs","~:warnings",[],"~:source",";; Copyright (c) Rich Hickey. All rights reserved.\n;; The use and distribution terms for this software are covered by the\n;; Eclipse Public License 1.0 (http://opensource.org/licenses/eclipse-1.0.php)\n;; which can be found in the file epl-v10.html at the root of this distribution.\n;; By using this software in any fashion, you are agreeing to be bound by\n;; the terms of this license.\n;; You must not remove this notice, or any other, from this software.\n\n(ns cljs.repl\n  (:require-macros cljs.repl)\n  (:require [cljs.spec.alpha :as spec]))\n\n(defn print-doc [{n :ns nm :name :as m}]\n  (println \"-------------------------\")\n  (println (or (:spec m) (str (when-let [ns (:ns m)] (str ns \"/\")) (:name m))))\n  (when (:protocol m)\n    (println \"Protocol\"))\n  (cond\n    (:forms m) (doseq [f (:forms m)]\n                 (println \"  \" f))\n    (:arglists m) (let [arglists (:arglists m)]\n                    (if (or (:macro m)\n                         (:repl-special-function m))\n                     (prn arglists)\n                     (prn\n                       (if (= 'quote (first arglists))\n                         (second arglists)\n                         arglists)))))\n  (if (:special-form m)\n    (do\n      (println \"Special Form\")\n      (println \" \" (:doc m))\n      (if (contains? m :url)\n        (when (:url m)\n          (println (str \"\\n  Please see http://clojure.org/\" (:url m))))\n        (println (str \"\\n  Please see http://clojure.org/special_forms#\"\n                   (:name m)))))\n    (do\n      (when (:macro m)\n        (println \"Macro\"))\n      (when (:spec m)\n        (println \"Spec\"))\n      (when (:repl-special-function m)\n        (println \"REPL Special Function\"))\n      (println \" \" (:doc m))\n      (when (:protocol m)\n        (doseq [[name {:keys [doc arglists]}] (:methods m)]\n          (println)\n          (println \" \" name)\n          (println \" \" arglists)\n          (when doc\n            (println \" \" doc))))\n      (when n\n        (when-let [fnspec (spec/get-spec (symbol (str (ns-name n)) (name nm)))]\n          (print \"Spec\")\n          (doseq [role [:args :ret :fn]]\n            (when-let [spec (get fnspec role)]\n              (print (str \"\\n \" (name role) \":\") (spec/describe spec)))))))))\n","~:reader-features",["^D",["~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings",";;;AAYA,AAAA,AAAA,AAAMM;AAAN,AAAA,AAAA,AAAAN;AAAA,AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAC,AAAA,AAAAD,AAAA,AAAA,AAAA,AAAA,AAAAE,AAAAC,AAAAH,AAAAA;AAAAA,AAAqC;AAArC,AAAAI,AAAAJ,AAAA,AAAkB;AAAlB,AAAAI,AAAAJ,AAAA,AAAwB;AAAxB,AACE,AAAA,AAACM;;AACD,AAACA,AAAQ,AAAA,AAAI,AAAA,AAAOE;AAAX,AAAA,AAAAD;AAAAA;;AAAc,AAAK,AAAA,AAAc,AAAA,AAAKC;AAAnB,AAAA,AAAAC;AAAA,AAAA,AAAAA,AAAW;AAAX,AAAuB,AAAA,AAAKC;;AAA5B;;AAAqC,AAAA,AAAOF;;;;AACxE,AAAM,AAAA,AAAWA;AAAjB,AACE,AAAA,AAACF;;AADH;;AAEA,AACE,AAAA,AAAQE;AAAG,AAAA,AAAA,AAAAG,AAAU,AAAA,AAAQH;AAAlB,AAAA;AAAA,AAAA;AAAA,AAAA;;AAAA,AAAA,AAAA,AAAA,AAAAI,AAAAC;AAAA,AAAA,AAAAC,AAAAF,AAAQ;AAAR,AAAA,AACE,AAAA,AAACN,AAAaiB;;AADhB;AAAA,AAAAR;AAAAD;AAAAD;AAAA,AAAAD,AAAA;;;;;;;AAAA,AAAA,AAAA,AAAAD,AAAAI;AAAA,AAAA,AAAAN;AAAA,AAAA,AAAA,AAAAA;AAAA,AAAA,AAAA,AAAAO,AAAAD;AAAA,AAAA,AAAA,AAAAE,AAAAF;AAAA,AAAA,AAAA,AAAAG,AAAAH;AAAAI;AAAA,AAAAC,AAAAD;AAAA;;;;;;;AAAA,AAAA,AAAAE,AAAAN,AAAQ;AAAR,AAAA,AACE,AAAA,AAACT,AAAaiB;;AADhB;AAAA,AAAA,AAAAD,AAAAP;AAAA;AAAA;AAAA;;;;;;;;AAAA;;;;;AADb,AAGE,AAAA,AAAWP;AAAG,AAAM,AAAS,AAAA,AAAWA;AAA1B,AACE,AAAI,AAAA,AAAI,AAAA,AAAQA;AAAZ,AAAA,AAAAD;AAAAA;;AACC,AAAA,AAAwBC;;;AAC5B,AAACgB,AAAIC;;AACL,AAACD,AACC,AAAI,AAAA,AAAA,AAACE,AAAS,AAACL,AAAMI,AACnB,AAACE,AAAOF,AACRA;;;AAVvB;;;AAWA,AAAI,AAAA,AAAejB;AACjB,AACE,AAAA,AAACF;;AACD,AAAA,AAACA,AAAY,AAAA,AAAME;;AACnB,AAAI,AAAA,AAACoB,AAAUpB;AACb,AAAM,AAAA,AAAMA;AAAZ,AACE,AAACF,AAAQ,AAAA,AAA0C,AAAA,AAAME;;AAD3D;;;AAEA,AAACF,AAAQ,AAAA,AACE,AAAA,AAAOE;;;AACtB,AACE,AAAM,AAAA,AAAQA;AAAd,AACE,AAAA,AAACF;;AADH;;AAEA,AAAM,AAAA,AAAOE;AAAb,AACE,AAAA,AAACF;;AADH;;AAEA,AAAM,AAAA,AAAwBE;AAA9B,AACE,AAAA,AAACF;;AADH;;AAEA,AAAA,AAACA,AAAY,AAAA,AAAME;;AACnB,AAAM,AAAA,AAAWA;AAAjB,AACE,AAAA,AAAA,AAAAG,AAAsC,AAAA,AAAUH;AAAhD,AAAA;AAAA,AAAA;AAAA,AAAA;;AAAA,AAAA,AAAA,AAAA,AAAAqB,AAAAC;AAAA,AAAA,AAAA,AAAAC,AAAAF;AAAA,AAAAG,AAAAC,AAAA,AAAA,AAAS;AAAT,AAAA,AAAAD,AAAAC,AAAA,AAAA;AAAA,AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAjC,AAAA,AAAAiC,AAAA,AAAA,AAAA,AAAA,AAAAhC,AAAAC,AAAA+B,AAAAA;AAAA,AAAA9B,AAAA8B,AAAA,AAAsB;AAAtB,AAAA9B,AAAA8B,AAAA,AAA0B;AAA1B,AAAA,AACE,AAACI;;AACD,AAAA,AAAChC,AAAYiC;;AACb,AAAA,AAACjC,AAAYmB;;AACb,AAAMe;AAAN,AACE,AAAA,AAAClC,AAAYkC;;AADf;;AAJF;AAAA,AAAAL;AAAAJ;AAAAD;AAAA,AAAAD,AAAA;;;;;;;AAAA,AAAA,AAAA,AAAAlB,AAAAwB;AAAA,AAAA,AAAA1B;AAAA,AAAA,AAAA,AAAAA;AAAA,AAAA,AAAA,AAAAO,AAAAmB;AAAA,AAAA,AAAA,AAAAlB,AAAAkB;AAAA,AAAA,AAAA,AAAAjB,AAAAiB;AAAAhB;AAAA,AAAAC,AAAAD;AAAA;;;;;;;AAAA,AAAA,AAAA,AAAAE,AAAAc;AAAA,AAAAH,AAAAI,AAAA,AAAA,AAAS;AAAT,AAAA,AAAAJ,AAAAI,AAAA,AAAA;AAAA,AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAApC,AAAA,AAAAoC,AAAA,AAAA,AAAA,AAAA,AAAAnC,AAAAC,AAAAkC,AAAAA;AAAA,AAAAjC,AAAAiC,AAAA,AAAsB;AAAtB,AAAAjC,AAAAiC,AAAA,AAA0B;AAA1B,AAAA,AACE,AAACC;;AACD,AAAA,AAAChC,AAAYiC;;AACb,AAAA,AAACjC,AAAYmB;;AACb,AAAMe;AAAN,AACE,AAAA,AAAClC,AAAYkC;;AADf;;AAJF;AAAA,AAAA,AAAAlB,AAAAa;AAAA;AAAA;AAAA;;;;;;;;AAAA;;;;;AADF;;AAOA,AAAMM;AAAN,AACE,AAAA,AAAkB,AAACC,AAAc,AAACC,AAAO,AAAK,AAACC,AAAQH,AAAI,AAACI,AAAKC;AAAjE,AAAA,AAAArC;AAAA,AAAA,AAAAA,AAAW;AAAX,AACE,AAAA,AAACsC;;AACD,AAAA,AAAA,AAAApC,AAAA,AAAA,AAAA,AAAA;AAAA,AAAA;AAAA,AAAA;AAAA,AAAA;;AAAA,AAAA,AAAA,AAAA,AAAAqC,AAAAC;AAAA,AAAA,AAAAC,AAAAF,AAAQ;AAAR,AAAA,AACE,AAAA,AAAgB,AAAC5C,AAAIgD,AAAOC;AAA5B,AAAA,AAAA5C;AAAA,AAAA,AAAAA,AAAW;AAAX,AACE,AAACsC,AAAM,AAAA,AAAA,AAAW,AAACF,AAAKQ,AAAW,AAACC,AAAcC;;AADpD;;AADF;AAAA,AAAAJ;AAAAD;AAAAD;AAAA,AAAAD,AAAA;;;;;;;AAAA,AAAA,AAAA,AAAArC,AAAAwC;AAAA,AAAA,AAAA1C;AAAA,AAAA,AAAA,AAAAA;AAAA,AAAA,AAAA,AAAAO,AAAAmC;AAAA,AAAA,AAAA,AAAAlC,AAAAkC;AAAA,AAAA,AAAA,AAAAjC,AAAAiC;AAAAhC;AAAA,AAAAC,AAAAD;AAAA;;;;;;;AAAA,AAAA,AAAAE,AAAA8B,AAAQ;AAAR,AAAA,AACE,AAAA,AAAgB,AAAC/C,AAAIgD,AAAOC;AAA5B,AAAA,AAAA5C;AAAA,AAAA,AAAAA,AAAW;AAAX,AACE,AAACsC,AAAM,AAAA,AAAA,AAAW,AAACF,AAAKQ,AAAW,AAACC,AAAcC;;AADpD;;AADF;AAAA,AAAA,AAAAjC,AAAA6B;AAAA;AAAA;AAAA;;;;;;;;AAAA;;;;;;AAFF;;;AADF","names",["p__12740","map__12741","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","cljs.repl/print-doc","cljs.core.println.cljs$core$IFn$_invoke$arity$variadic","or__4047__auto__","m","temp__5457__auto__","ns","cljs.core/seq","i__12747","count__12746","chunk__12745","seq__12744","cljs.core/chunked-seq?","cljs.core/chunk-first","cljs.core/chunk-rest","c__4461__auto__","cljs.core/count","cljs.core/first","cljs.core/next","f","cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic","arglists","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","cljs.core/second","cljs.core/contains?","i__12755","count__12754","chunk__12753","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","vec__12756","map__12760","seq__12752","vec__12762","map__12765","cljs.core/println","name","doc","n","cljs.spec.alpha/get-spec","cljs.core.symbol.cljs$core$IFn$_invoke$arity$2","cljs.core/ns-name","cljs.core/name","nm","cljs.core.print.cljs$core$IFn$_invoke$arity$variadic","i__12774","count__12773","chunk__12772","seq__12771","fnspec","role","cljs.spec.alpha/describe","spec"]]],"~:cache-keys",["~#cmap",[["^O","^16"],[1546977868000],["^1B","cljs/spec/gen/alpha.cljs"],[1546977868398,"^17","^16","~$goog.Uri"],["^1B","goog/math/math.js"],[1546977570058,"^17","~$goog.array","~$goog.asserts"],["^1B","goog/array/array.js"],[1546977570058,"^17","^1Q"],["^1B","goog/debug/error.js"],[1546977570058,"^17"],["^1B","goog/dom/nodetype.js"],[1546977570058,"^17"],["^O","~$cljs.spec.gen.alpha"],[1546977868000],["^1B","goog/object/object.js"],[1546977570058,"^17"],"~:SHADOW-TIMESTAMP",[1546977871000,1546977868000],["^1B","goog/math/long.js"],[1546977570058,"^17","^1Q","~$goog.reflect"],["^O","^N"],[1546977868000],["^1B","goog/functions/functions.js"],[1546977570058,"^17"],["^1B","clojure/walk.cljs"],[1546977868398,"^17","^16"],["^1B","goog/structs/map.js"],[1546977570058,"^17","~$goog.iter.Iterator","~$goog.iter.StopIteration","~$goog.object"],["^O","^14"],[1546977868000],["^1B","goog/asserts/asserts.js"],[1546977570058,"^17","~$goog.debug.Error","~$goog.dom.NodeType","~$goog.string"],["^1B","goog/uri/uri.js"],[1546977570058,"^17","^1P","^1Q","^1Z","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"],["^1B","cljs/spec/alpha.cljs"],[1546977868398,"^17","^16","^1W","~$clojure.walk","^1R","~$clojure.string"],["^1B","goog/base.js"],[1546977570058],["^1B","goog/structs/structs.js"],[1546977570058,"^17","^1P","^1W"],["^1B","clojure/string.cljs"],[1546977868398,"^17","^16","^1Z","~$goog.string.StringBuffer"],["^1B","cljs/repl.cljs"],[1546977868398,"^17","^16","^14"],["^1B","goog/string/string.js"],[1546977570058,"^17"],["^1B","goog/reflect/reflect.js"],[1546977570058,"^17"],["^1B","goog/string/stringbuffer.js"],[1546977570058,"^17"],["^1B","goog/iter/iter.js"],[1546977570058,"^17","^1P","^1Q","~$goog.functions","~$goog.math"],["^1B","cljs/core.cljs"],[1546977868398,"~$goog.math.Long","~$goog.math.Integer","^1Z","^1W","^1P","^1O","^26"],["^1B","goog/math/integer.js"],[1546977570058,"^17"],["^1B","goog/uri/utils.js"],[1546977570058,"^17","^1P","^1Q","^1Z"]]],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","cljs/repl.cljs","^7",9,"^8",5,"^9",9,"^:",14],"^;",["^ ","^<","^=","^>","^?","^@","^A"],"^B",null,"^C",["^D",[]],"^E",["^ ","^F",["^ ","^G",["^H",[["^I"]]],"^J","Prints documentation for a var or special form given its name,\n  or for a spec if given a keyword","^7",1241,"^8",1,"^6","cljs/repl.cljc","^K","^L","^M","^N","^O",true],"^P",["^ ","^G",["^H",[["^Q"]]],"^J","Prints documentation for any var whose documentation or name\n contains a match for re-string-or-pattern","^7",1281,"^8",1,"^6","cljs/repl.cljc","^K","^R","^M","^N","^O",true],"^S",["^ ","^G",["^H",[["^T"]]],"^J","Prints a sorted directory of public vars in a namespace","^7",1381,"^8",1,"^6","cljs/repl.cljc","^K","^U","^M","^N","^O",true],"^V",["^ ","^G",["^H",[[],["~$e"]]],"^7",1387,"^8",1,"^6","cljs/repl.cljc","^K","^W","^M","^N","^O",true],"^X",["^ ","^G",["^H",[["~$n"]]],"^J","Prints the source code for the given symbol, if it can find it.\n  This requires that the symbol resolve to a Var defined in a\n  namespace for which the .cljs is in the classpath.\n\n  Example: (source filter)","^7",1340,"^8",1,"^6","cljs/repl.cljc","^K","^Y","^M","^N","^O",true],"^Z",["^ ","^G",["^H",[["^["]]],"^J","Given a regular expression or stringable thing, return a seq of all\npublic definitions in all currently-loaded namespaces that match the\nstr-or-pattern.","^7",1356,"^8",1,"^6","cljs/repl.cljc","^K","^10","^M","^N","^O",true]],"^K","^N","^12",null,"^13",["^ ","^14","^14","^15","^14","^16","^16","^17","^17"],"^18",["^D",["^19","^1:"]],"^1;",null,"~:defs",["^ ","~$print-doc",["^ ","~:protocol-inline",null,"^5",["^ ","^6","cljs/repl.cljs","^7",13,"^8",7,"^9",13,"^:",16,"^G",["^H",["~$quote",["^H",[[["^ ","~$n","^M","~$nm","^K","^1=","~$m"]]]]]]],"^K","~$cljs.repl/print-doc","^6","cljs/repl.cljs","^:",16,"~:method-params",["^H",[["~$p__12740"]]],"~:protocol-impl",null,"~:arglists-meta",["^H",[null,null]],"^8",1,"~:variadic?",false,"^7",13,"~:ret-tag",["^D",["~$any","~$clj-nil"]],"^9",13,"~:max-fixed-arity",1,"~:fn-var",true,"^G",["^H",["^2?",["^H",[[["^ ","~$n","^M","^2@","^K","^1=","~$m"]]]]]]]],"^1:",["^ ","^N","^N","^16","^16","^14","^14","^15","^14"],"~:cljs.analyzer/constants",["^ ","^18",["^D",["~:args","~:ret","~:fn","~:protocol","^M","^K","~:special-form","~:repl-special-function","~:spec","~:methods","^O","~:url","^2?","^G","^J","~:forms"]],"~:order",["^M","^K","^2S","^2P","^2V","^G","^O","^2R","^2?","^2Q","^J","^2U","^2T","^2M","^2N","^2O"]],"^1>",["^ ","^1:",["^D",[]],"^19",["^D",[]]],"^1?",["^ "],"^1@",["^17","^16","^14"]],"^M","^N","~:ns-specs",["^ "],"~:ns-speced-vars",[],"~:compiler-options",["^1N",[["^2Z","~:static-fns"],true,["^2Z","~:elide-asserts"],false,["^2Z","~:optimize-constants"],null,["^2Z","~:external-config"],null,["^2Z","~:tooling-config"],null,["^2Z","~:emit-constants"],null,["^2Z","~:infer-externs"],true,["^2Z","^1G"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^2Z","~:fn-invoke-direct"],null,["^2Z","~:source-map"],"/dev/null"]]]